{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"analyzer/","title":"gmx_MMPBSA_ana v1.5.x: The analyzer tool","text":""},{"location":"analyzer/#overview","title":"Overview","text":"<p><code>gmx_MMPBSA_ana</code> is a simple but powerful analysis tool. It is mainly focused on providing a fast, easy and  efficient access to different graphics and analyze gmx_MMPBSA results (Figure 1). In this version,  <code>gmx_MMPBSA_ana</code> includes a number of options to customize graphs and save high-quality figures. The tool has  been optimized to work with many  charts (check this section to learn about the potential of <code>gmx_MMPBSA_ana</code>). It  conserves the essence of its predecesor <code>gmx_MMPBSA_ana v1.4.3</code>, although the API that uses in the backend is quite  different, making it incompatible with files from previous versions.</p>"},{"location":"analyzer/#fast-like-a-rocket","title":"Fast like a rocket","text":"<p>After version 1.5.2 gmx_MMPBSA_ana presented serious performance problems. We set ourselves the task of improving it  from the ground up and these are the results:</p> <p>This version = v1.5.5</p> Number of systems/CPUs Type Frames v1.5.2 v1.5.2+20 This version Improvement 1 Energy 200000 fail 960s 17s 56x 4 Energy 200000 fail 4515s 17s 265x 1 Energy+Decomp(per-wise) 11 fail 192s 9s 21x 4 Energy+Decomp(per-wise) 11 fail 960s 14s 69x <p>To this end, we have made the following changes:</p> <ul> <li>Reimplemented multiprocessing for reading systems.</li> <li>Implemented multithreading for data processing.</li> <li>Improved the reading of output files and optimized data storage. </li> <li>Eliminated the recalculation of IE and C2 entropies before opening the GUI. Now read from outputs files.</li> <li>Optimized data storage and access to subsets in panda's Dataframes.</li> <li>Now file processing and graphics generation does not freeze the GUI.</li> <li>Removed redundant steps and data.</li> <li>Removed line graphs for components in the per-wise decomposition schema.</li> <li>Data access, processing, and storage are done in the API.</li> <li>Added the option to temporarily store data on the hard disk instead of memory.</li> <li>Removed several pop-up windows.</li> <li>Added waiting indicators.</li> <li>Added multiple systems, subsystems, and component selection options.</li> </ul>"},{"location":"analyzer/#gmx_mmpbsa_ana-components","title":"gmx_MMPBSA_ana components","text":"<ol> <li>System selection window</li> <li>Data/Correlation panel</li> <li>Options panel</li> <li>Plot area</li> <li>Menus</li> </ol> <p>Figure 1. <code>gmx_MMPBSA_ana</code> graphical overview   </p>"},{"location":"analyzer/#1-system-selection-window","title":"1- System selection window","text":"<p>This dialog allows you to select the system(s) of interest, as well as its components. In this panel you can check a  number of options that will define how <code>gmx_MMPBSA_ana</code> process the result file. These options are:</p> <ul> <li>select whether you want to include mutants, normals, or both systems when analyzing alanine scanning results</li> <li>delete the terms whose values during the analysis were between <code>-0.01</code> and <code>0.01</code></li> <li>show/not-show decomposition analyses (which usually contains lots of data)</li> <li>transform the frames range to timescale</li> <li>calculate the correlation between various systems</li> </ul> <p>This allows you to take advantage of the flexibility of <code>gmx_MMPBSA</code> to carry out several analysis types in the same  run and focus on the key elements for each of these analyses.</p>"},{"location":"analyzer/#2-datacorrelation-panel","title":"2- Data/Correlation panel","text":"<p>This panel is made up of two independent sub-panels: Data and Correlation with slightly different characteristics,  but with the same essence.</p>"},{"location":"analyzer/#structure","title":"Structure","text":"DataCorrelation <p>This panel is tree-like, where each system marked in gray is a top-level element that contains a set  of 'children' elements organized according to the calculation type. Each upper-level element can be  expanded/collapsed, which allows you to take advantage of the space and manipulate a considerable number of systems  at the same time while keeping the elements of interest at sight.</p> <p>We are working on its implementation.</p>"},{"location":"analyzer/#buttons-and-actions","title":"Buttons and Actions","text":"<p>Each item represents a set of data associated with a type of calculation, and a component (i.e. complex, receptor,  ligand, delta, etc...). These, in turn, have buttons and actions depending on the data they contain. Each item can  have a total of 7 buttons that represent:</p> Button Visual element Description Result files Show/hide in a new sub-window the gmx_MMPBSA output files: <code>FINAL_RESULTS_MMPBSA.dat</code> and <code>FINAL_DECOMP_MMPBSA.dat</code> Line plot Show/hide in a new sub-window a Line plot Bar plot Show/hide in a new sub-window a Bar plot Heatmap Show/hide in a new sub-window a Heatmap plot PyMOL visualization Show/hide the complex per-residue energy representation in a new PyMOL instance Summary table Show/hide the summary table of the parent element with multiple energetic components as 'childrens' Multiple activation button Show/hide all items (Line, bar, heatmap plots and PyMOL) at the same time <p>In turn, some buttons have a drop-down menu that allows you to display the content of that specific graph in table  form. In particular, the multiple activation button allows you to show/hide all the visual elements associated with a  certain item.</p> <p>Example:</p> <p> </p> <p>Figure 2. Button representation example   </p>"},{"location":"analyzer/#3-options-panel","title":"3- Options panel","text":"<p>In this panel you can find two tabs:</p> Charts OptionsFrames <p>Contains five different menus:</p> <ul> <li><code>General</code> controls settings such as theme, figure-save-format, etc.</li> <li><code>Line Plot</code> controls line plots settings such as line-width, line-color, rolling-average line appearance, etc.</li> <li><code>Bar Plot</code> controls bar plots settings such as bar-color, bar-label appearance, etc.</li> <li><code>Heatmap Plot</code> controls heatmap plots settings such as receptor- and ligand-colors, color-palette, etc.</li> <li><code>Visualization</code> controls PyMOL visualization settings such as color-palette, background-color,  representation, etc.</li> </ul> <p>Contains two windows:</p> <ul> <li><code>Energy</code> changes start, end and interval between frames.</li> <li><code>IE</code> changes segment considered for calculating the Interaction Entropy.</li> </ul>"},{"location":"analyzer/#4-plot-area","title":"4- Plot area","text":"<p>In this area, the graphs and tables included in each system will be displayed in the form of sub-windows  (multi-document interface). This format allows you to move, resize and close each sub-window, offering a clean,  organized, and fluid workspace to analyze a vast number of graphs.</p>"},{"location":"analyzer/#types-of-charts","title":"Types of charts","text":"Line plotBar plotHeatmap plotPyMOL visualization <p>Represents the evolution of a component during the simulation time. In some cases, it is the value of the calculated  parameter, e.g.: <code>TOTAL DELTA</code>, <code>VDWAALS</code>, etc.; and in others, it is the sum of the elements it contains, eg:  <code>TDC</code> as the sum of all the per-residue energy contributions.</p> <p>Note</p> <p>The line plot can additionally contain the moving average (solid red line) or other elements such as other  indicators (dash red and green lines).</p> <p>Warning</p> <p>Note that <code>TDC</code>, <code>SDC</code>, and <code>BDC</code> are calculated from the immediate items contained within themselves.  This means that the results obtained for the <code>TDC</code> in a per-residue calculation will probably be different  from the <code>TDC</code> of a per-wise calculation with the same residues. This is because the per-residue energy  contribution is calculated taking into account the environment that surrounds each residue, so the sum of  their contributions will be exactly the maximum contribution per selected residues. On the other hand, in  the per-wise calculation, the <code>TDC</code> will be equal to the sum of each residue contribution, the difference  being that the contribution of each residue is obtained from the contributions of the selected pairs and not  with all the environment that surrounds it. Therefore, both calculations should be used for different  purposes and care should be taken with the interpretation of the results.</p> <p> Figure 2. Line plot examples. Up: \u0394H representation, Down: Interaction Entropy representation    </p> <p>Represents the total contribution of a component for the simulation. In some cases, it is the average of the  calculated  parameter, e.g.: <code>TOTAL DELTA</code>, <code>VDWAALS</code>, RESIDUES in per-residue calculation, etc., and in others, it is the  sum of the elements it contains, e.g.: NMODE and QH Entropy, \u0394G Binding, etc. The bars that represent averages  also have a solid line that represents the standard deviation.</p> <p> Figure 3. Bar plot examples. Up: Per-residue contribution, Down: \u0394G Binding      </p> <p> Figure 4. Bar plot examples. Up: Energetic terms plotted by subcomponents, Down: All energetic      terms in the same plot.      </p> <p>Represents the evolution of several components at the same time during the simulation. It is used to represent the  contribution of all residues in per-residue calculation or all pairs of atoms for each residue in the per-wise  calculation. It could also represent the relationship between components. This is explicit for per-wise  calculations and represents the contribution of each residue with its respective pairs.</p> <p>Tip</p> <p>The relational heatmap graph is the best representation in the per-wise analysis.</p> <p> Figure 5. Heatmap plot examples. Up: Per-residue contribution per-frame, Down: Inter Residue-pair  contribution    </p> <p>Shows the complex per-residue energy representation in a new PyMOL instance.</p> <p> Figure 6. PyMOL visualization    </p>"},{"location":"analyzer/#5-menus","title":"5- Menus","text":"<p>This section contains three drop-down menus:</p> FileViewAbout <ul> <li>Close all -- closes all the graphs</li> </ul> <ul> <li>Show Data -- shows data subpanel</li> <li>Show Correlation -- shows correlation subpanel</li> <li>Show Options -- shows options panel</li> <li>Tile SubWindows -- organizes graphs as tile</li> <li>Cascade SubWindows -- organizes graphs as cascade</li> </ul> <ul> <li>Help -- shows gmx_MMPBSA_ana page</li> <li>Documentation -- shows gmx_MMPBSA page</li> <li>Report a bug -- opens issue and report a bug on GitHub</li> <li>Google group -- opens gmx_MMPBSA Google Group</li> <li>About gmx_MMPBSA_ana -- shows gmx_MMPBSA citation</li> </ul>"},{"location":"analyzer/#representations","title":"Representations","text":"<p>Note</p> <p>The following videos provide a visual medium to facilitate the use of <code>gmx_MMPBSA_ana</code>. These videos were recorded  with the previous version of <code>gmx_MMPBSA_ana</code>, v1.4.3. We are working with several content creators to provide  more accurate video tutorials. </p> <p>If you find our tool  useful and want to use it for a visual project, such as tutorials, examples, etc., we will gladly include it  in the documentation as well as in the list of acknowledgments and collaborators.</p>"},{"location":"analyzer/#functionalities","title":"Functionalities","text":""},{"location":"analyzer/#binding-free-energy-calculation-gb-ie","title":"Binding Free Energy calculation (GB + IE)","text":""},{"location":"analyzer/#alanine-scanning","title":"Alanine scanning","text":""},{"location":"analyzer/#per-residue-decomposition","title":"Per-residue decomposition","text":""},{"location":"analyzer/#gmx_mmpbsa_ana-under-pressure","title":"<code>gmx_MMPBSA_ana</code> under pressure","text":"<p>Warning</p> <p>Around 1.8 million graphs were loaded in gmx_MMPBSA_ana, and it is showed only for educational purposes.</p> <p>In this experiment, we replicated our examples folder 9 times (differs from the one available on GitHub) giving us a  total of 99 systems. As you can see in the video, gmx_MMPBSA_ana manages to deal well with the incredible amount of ~1.6  million items. Every item contains between 1 and 3 graphics, for a total of ~1.8 million graphics loaded. This feat is  accomplished in ~11 minutes. Most of this time is consumed processing the data associated with each graph. At the  moment, gmx_MMPBSA_ana processes this data serially, since parallelizing this process would be a bit difficult. In  any case, for the usual processes, this will take a maximum of 25-30 seconds, depending on your hardware. Each item has  associated the data of each of its graphs, which is stored in memory. In this experiment, RAM consumption reached up  to 14 GB.</p> <p>Danger</p> <p>Be aware that if you run out of available RAM, your OS could crash, freeze, or slow down.</p> <p>Does this mean that you will not be able to load 100 systems in <code>gmx_MMPBSA_ana</code>? Not at all. Consumption depends on the type of calculation you have made, and the data you want to analyze. In this experiment, there were several systems that contain the <code>decomp</code> data. We also selected to show the complex, receptor, and  ligand data, which usually can be skipped. Only a system calculated with per-wise selecting about 40 amino acids  generates about 11 thousand items.</p>"},{"location":"api/","title":"Python API for gmx_MMPBSA v1.5.x coming soon...","text":""},{"location":"api/#python-api-for-gmx_mmpbsa-v143","title":"Python API for gmx_MMPBSA v1.4.3","text":"<p>The aim of the <code>gmx_MMPBSA</code> API is to provide you with direct access to the raw data produced during a <code>gmx_MMPBSA</code> calculation. By default, gmx_MMPBSA calculates an average, standard deviation, and standard error of the mean for  all the generated data sets, but it does not support custom analyses. The API reads an _GMXMMPBSA_info file, from which  it will determine what kind of calculation was performed, then automatically parse the output files and load the  data into arrays.</p> <p>Warning</p> <p>The topology files you used in the <code>gmx_MMPBSA</code> calculation must also be available in the location specified in the  _<code>GMXMMPBSA_info</code> file.</p>"},{"location":"api/#using-the-api","title":"Using the API","text":"<p>We have derived a new API to reorganize the data so that it is arranged more hierarchically. This makes easier to transform the data into graphs in the <code>gmx_MMPBSA_ana</code>. **The original and the current API only differ in the name of the callable function, the disposition of the data in Per-wise decomposition analysis and in the new 'delta' key.</p> <p>The function <code>load_gmxmmpbsa_info</code> takes the name of a <code>gmx_MMPBSA</code> info file (typically <code>_GMXMMPBSA_info</code>) and returns a populated <code>mmpbsa_data</code> instance with all the parsed data. An example code snippet that creates a <code>mmpbsa_data</code> instance from the information in _<code>GMXMMPBSA_info</code> is shown below.</p> <p>Important</p> <p>Unlike MMPBSA.py, <code>load_gmxmmpbsa_info</code> does not need to be located in the folder that contains the  <code>_GMXMMPBSA_info</code> file.</p> <p>New in v1.4.0</p> <pre><code>from GMXMMPBSA import API as gmxMMPBSAapi\n\ndata = gmxMMPBSAapi.load_gmxmmpbsa_info(\"_GMXMMPBSA_info\")\n</code></pre>"},{"location":"api/#properties-of-mmpbsa_data","title":"Properties of mmpbsa_data","text":"<p>The <code>mmpbsa_data</code> class is a nested dictionary structure (<code>mmpbsa_data</code> is actually derived from <code>dict</code>). The various attributes of <code>mmpbsa_data</code> are described below followed by the defined operators.</p>"},{"location":"api/#attributes","title":"Attributes","text":"<p>If the numpy package is installed and available, all data arrays will be <code>numpy.ndarray</code> instances. Otherwise, all data arrays will be <code>array.array</code> instances with the \u2019d\u2019 data type specifier (for a double precision float). The data is organized in an <code>mmpbsa_data</code> instance in the following manner:</p> <pre><code>mmpbsa_data_instance['calc_key']['system_component']['energy_term']\n</code></pre> <p>In this example, <code>calc_key</code> is a <code>dict</code> key that is paired to another <code>dict</code> (<code>mmpbsa_data_instance</code> is the first-level <code>dict</code>, in this case) (Table 2). The keys of these second-level dict instances (<code>system_component</code>) pair to another <code>dict</code> (Table 3).</p> <p>Table 2. List and description of <code>calc_key</code> dict keys that may be present in instances of the <code>mmpbsa_data</code> class.</p> Dictionary Key (calc_key) Calculation Type <code>gb</code> Generalized Born Results <code>pb</code> Poisson-Boltzmann Results <code>rism gf</code> Gaussian Fluctuation 3D-RISM Results <code>rism std</code> Standard 3D-RISM Results <code>ie</code> Interaction Entropy Results <code>nmode</code> Normal Mode Analysis Results <code>qh</code> Quasi-harmonic Approximation Results <p>Table 3. List and description of system_component keys that may be present in instances of the mmpbsa_data class.</p> Dictionary Key (system_component) Description <code>complex</code> Data sets for the complex. (Stability &amp; Binding) <code>receptor</code> Data sets for the receptor. (Binding only) <code>ligand</code> Data sets for the ligand. (Binding only) <code>delta</code> Data sets for the delta. (Binding only) <p>The keys of these inner-most (third-level) <code>dict</code> instances are paired with the data arrays for that energy term (Table 4). The various dictionary keys are listed below for each level. If alanine scanning was performed, the <code>mmpbsa_data_instance</code> also has a <code>\"mutant\"</code> attribute that contains the same dictionary structure as <code>mmpbsa_data</code> does for the normal system. If not, the mutant attribute is None. The only difference is that the data is accessed as follows:</p> <pre><code>mmpbsa_data_instance.mutant['calc_key']['system_component']['energy_term']\n</code></pre> <p>Warning</p> <p>All keys are case-sensitive, and if a space appears in the key, it must be present in your program. Also, if polar/non-polar decomposition is not performed for <code>3D-RISM</code>, then the <code>POLAR SOLV</code> and <code>APOLAR SOLV</code> keys are  replaced with the single key <code>ERISM</code></p> <p>Table 4. List and description of energy_term keys that may be present in instances of the mmpbsa_data class. The allowed values of energy_term depend on the value of calc_key above in Table 2. The <code>energy_term</code> keys are listed  for each <code>calc_key</code> enumerated above, accompanied by a description. The RISM keys are the same for both <code>rism gf</code>  and <code>rism std</code> although the value of <code>POLAR SOLV</code> and <code>APOLAR SOLV</code> will differ depending on the method chosen.  Those keys marked with * are specific to the CHARMM force field used through chamber. Those arrays are all 0 for  normal Amber topology files.</p> Description <code>gb</code> <code>pb</code> <code>RISM</code> Bond energy <code>BOND</code> <code>BOND</code> <code>BOND</code> Angle energy <code>ANGLE</code> <code>ANGLE</code> <code>ANGLE</code> Dihedral Energy <code>DIHED</code> <code>DIHED</code> <code>DIHED</code> Urey-Bradley* <code>UB</code> <code>UB</code> \u2014 Improper Dihedrals* <code>IMP</code> <code>IMP</code> \u2014 Correction Map* <code>CMAP</code> <code>CMAP</code> \u2014 1-4 van der Waals energy <code>1-4 VDW</code> <code>1-4 VDW</code> <code>1-4 VDW</code> 1-4 Electrostatic energy <code>1-4 EEL</code> <code>1-4 EEL</code> <code>1-4 EEL</code> van der Waals energy <code>VDWAALS</code> <code>VDWAALS</code> <code>VDWAALS</code> Electrostatic energy <code>EEL</code> <code>EEL</code> <code>EEL</code> Polar solvation energy <code>EGB</code> <code>EPB</code> <code>POLAR SOLV</code> Non-polar solvation energy <code>ESURF</code> <code>ENPOLAR</code> <code>APOLAR SOLV</code> Total solvation free energy <code>G solv</code> <code>G solv</code> <code>G solv</code> Total gas phase free energy <code>G gas</code> <code>G gas</code> <code>G gas</code> Total energy <code>TOTAL</code> <code>TOTAL</code> <code>TOTAL</code> <p>Table 5. Same as Table 4 for the entropy (nmode and qh) data.</p> Description <code>nmode</code> <code>qh</code> Translational entropy <code>Translational</code> <code>Translational</code> Rotational entropy <code>Rotational</code> <code>Rotational</code> Vibrational entropy <code>Vibrational</code> <code>Vibrational</code> Total entropy <code>Total</code> <code>Total</code> <p>Table 6. Same as Table 5 for the Interaction Entropy data.</p> Description <code>IE</code> Data per-frame <code>data</code> Mean of the selected interval <code>value</code> Star and End frames of the selected interval <code>frames</code>"},{"location":"api/#defined-operators","title":"Defined operators","text":"<p>In-place addition: It extends all the arrays that are common to both <code>mmpbsa_data</code> instances. This is useful if, for instance, you run two <code>gmx_MMPBSA</code> calculations, and you use -prefix  for the second simulation. Assuming that  is <code>_GMXMMPBSA2_</code> for the second <code>gmx_MMPBSA</code> calculation, the following pseudo-code will generate a mmpbsa_data instance with all the data in concatenated arrays. The pseudo-code assumes GMXMMPBSA.API was imported as demonstrated below. <pre><code>data = gmxMMPBSAapi.load_gmxmmpbsa_info(\"_GMXMMPBSA_info\")\ndata += gmxMMPBSAapi.load_gmxmmpbsa_info(\"_GMXMMPBSA2_info\")\n</code></pre>"},{"location":"api/#example-api-usage","title":"Example API Usage","text":"<p>In many cases, the autocorrelation function of the energy can aid in the analysis of MM/PBSA data, since it provides a way of determining the statistical independence of your data points. For example, 1000 correlated snapshots provide less information, and therefore less statistical certainty, than 1000 uncorrelated snapshots. The standard error of the mean calculation performed by <code>gmx_MMPBSA</code> assumes a completely uncorrelated set of snapshots, which means that it is a lower bound of the true standard error of the mean, and a plot of the autocorrelation function may help determine the actual value.</p> <p>The example program below will calculate the autocorrelation function of the total energy (complex only for both the normal and alanine mutant systems) from a GB calculation and plot the resulting code using matplotlib.</p> <pre><code>import os\nimport sys\n\n# append AMBERHOME/bin to sys.path\nsys.path.append(os.path.join(os.getenv('AMBERHOME'), 'bin'))\n# Now import the MMPBSA API\nfrom GMXMMPBSA import API as gmxMMPBSAapi\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndata = gmxMMPBSAapi.load_gmxmmpbsa_info('_GMXMMPBSA_info')\ntotal = data['gb']['complex']['TOTAL'].copy()\ndata = gmxMMPBSAapi.load_gmxmmpbsa_info('_GMXMMPBSA_info')\ntotal_mut = data.mutant['gb']['complex']['TOTAL'].copy()\n# Create a second copy of the data set. The np.correlate function does not\n# normalize the correlation function, so we modify total and total2 to get\n# that effect\ntotal -= total.mean()\ntotal /= total.std()\ntotal2 = total.copy() / len(total)\nacor = np.correlate(total, total2, 'full')\ntotal_mut -= total_mut.mean()\ntotal_mut /= total_mut.std()\ntotal2_mut = total_mut.copy() / len(total_mut)\nacor_mut = np.correlate(total_mut, total2_mut, 'full')\n# Now generate the 'lag' axis\nxdata = np.arange(0, len(total))\n# The acor data set is symmetric about the origin, so only accept the\n# positive lag times. Graph the result\nplt.plot(xdata, acor[len(acor) // 2:], xdata, acor_mut[len(acor) // 2:])\nplt.show()\n</code></pre>"},{"location":"api/#decomposition-data","title":"Decomposition Data","text":"<p>When performing decomposition analysis, the various decomp data is stored in a separate tree of dicts referenced with the <code>decomp</code> key. The key sequence is similar to the sequence for the <code>normal</code> data described above, where <code>decomp</code> is followed by the solvent model (<code>GB</code> or <code>PB</code>), followed by the species (<code>complex</code>, <code>receptor</code>, or <code>ligand</code>)  (additionally, we include <code>delta</code> key), followed by the decomposition components (total, backbone, or sidechain),  followed by the residue number (and residue pair for pairwise decomposition), finally followed by the contribution  (<code>internal</code>, <code>van der Waals</code>, <code>electrostatics</code>, etc.) The available keys are shown in Figure 1 (and each key is  described afterwards).</p> <p>Decomp Key Descriptions:</p> <ul> <li><code>gb</code> All Generalized Born results</li> <li><code>pb</code> All Poisson-Boltzmann results</li> <li><code>complex</code> All results from the complex trajectory</li> <li><code>receptor</code> All results from the receptor trajectory</li> <li><code>ligand</code> All results from the ligand trajectory</li> <li><code>delta</code> All results from delta total decomposition [ complex TDC - (receptor TDC + ligand TDC) ]</li> <li><code>TDC</code> All results from the total decomposition</li> <li><code>SDC</code> All results from the sidechain decomposition</li> <li><code>BDC</code> All results from the backbone decomposition</li> <li><code>#</code> All data from residue number <code>#</code> in per-residue and per-wise decomposition (same residue numbering scheme as in   each respective topology file)<ul> <li><code>##</code> All interaction energies between residues <code>##</code> and their respective pair <code>#</code> in per-wise decomposition (same   residue numbering scheme as in each respective topology file)</li> </ul> </li> <li><code>int</code> Internal energy contributions (see the idecomp variable description above)</li> <li><code>vdw</code> van der Waals energy contributions</li> <li><code>eel</code> Electrostatic energy contributions</li> <li><code>pol</code> Polar solvation free energy contributions</li> <li><code>sas</code> Non-polar solvation free energy contributions</li> <li><code>tot</code> Total free energy contributions (sum of previous 5).</li> </ul> <p> </p> <p>Figure 1. Tree of <code>dict</code> keys following the <code>decomp</code> key in a <code>mmpbsa_data</code> instance.   </p>"},{"location":"api_reference/","title":"Python API","text":"<p>::: GMXMMPBSA.API.MMPBSA_API</p> Index Description variable name The name of the variable. Must be easy to type, remember and with maximum one \"_\" if is needed. Following the mapping structure of MMPBSA.py's authors, we normalize all variable names. For examples, now for GB (intdiel) and PB (indi, epsin) intdiel is the name for the interior dielectric constant original variable It is the name of the original variable for the program. For example, for PB would be indi, name since now the name for this variable is intdiel. This is important because it is the way to mapping each variable according to the new name and the name in the program variable type Define the variable type though python types (int, float, str and list).  When a list is defined the elements type must be defined as well. For example, list[str] define a list with string elements, list[int] define a list which contain integers, and so on. default value Default value v. description A brief description of the variable. This description is used to print out the inputfile and terminal output for the --input-file-help"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#gmx_mmpbsa-v160-02192023","title":"gmx_MMPBSA v1.6.0 (02/19/2023)","text":""},{"location":"changelog/#additions","title":"Additions","text":"<ul> <li>GBNSR6 model implementation<ul> <li>Enthalpy</li> <li>Per-residue and Per-wise decomposition</li> <li>Documentation and examples</li> </ul> </li> <li>Added git dependency to env.yml file</li> <li>Groups can now be defined as either the number or the name (#157)</li> <li>Added error tracking for groups that are not in the index file</li> </ul>"},{"location":"changelog/#fixes","title":"Fixes","text":"<ul> <li>Incompatible <code>compilers</code> version</li> <li>Fixed bug when CAS and PB/RISM calculations are performed</li> <li>Fixed duplicated options and args checking</li> <li>Documentation improved</li> <li>Fixed numpy deprecated np.float (#316)</li> <li>Fixed reproducible command line in debugging in log file (#335)</li> <li>GROMACS 2023 compatibility (#327, #335)</li> <li>Fixed IE and C2 Entropy (#325)</li> <li>PyMOL doesn't open within gmx_MMPBSA environment (#331)</li> <li>Inaccessible _temp_top.top when the topology file is in different directory (#299)</li> </ul>"},{"location":"changelog/#changes","title":"Changes","text":"<ul> <li>A copy old info file is created when rewrite-output (for backward compatibility)</li> <li>Setting inp = 1 by default (#329)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v157-09102022","title":"gmx_MMPBSA v1.5.7 (09/10/2022)","text":""},{"location":"changelog/#additions_1","title":"Additions","text":"<ul> <li>Progress bar implementation</li> <li>verbose options for API and info logging for IE and C2 entropy calculations</li> <li>Added logging info for MPI calculations</li> </ul>"},{"location":"changelog/#fixes_1","title":"Fixes","text":"<ul> <li>QH entropy calculation</li> <li>Decomposition bug (#269)</li> <li>Alanine scanning in Terminal residues</li> <li>Regression to output files subwindow in gmx_MMPBSA_ana</li> <li>Bug when using the compact results version</li> <li>Seaborn compatibility</li> <li><code>print_res</code> in <code>&amp;decomp</code> namelist does not accept \"all\" (#292)</li> <li>error when output files are open and any plot property is changed</li> <li>error if at least one residue of both the receptor and the ligand are not included in the selection for decomposition</li> </ul>"},{"location":"changelog/#changes_1","title":"Changes","text":"<ul> <li>now use <code>mpi4py</code> when <code>mpi_size &gt; 1</code> otherwise use <code>fake_MPI</code>. Now \"MPI\" flag is not required </li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v156-07062022","title":"gmx_MMPBSA v1.5.6 (07/06/2022)","text":""},{"location":"changelog/#fix","title":"Fix","text":""},{"location":"changelog/#gmx_mmpbsa","title":"gmx_MMPBSA","text":"<ul> <li>Inconsistent decomposition output (#246, #248)</li> <li>IE and C2 entropies calculation fail when rewrite-output (#253)</li> <li>Delta Delta Entropies' values are incorrect (#257)</li> <li>Loading binary file fails when alanine scanning is performed (#258)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana","title":"gmx_MMPBSA_ana","text":"<ul> <li>Mutant-Normal data is not computed or displayed (#254)</li> <li>Inconsistent energy values in PyMol visualization (#255)</li> </ul>"},{"location":"changelog/#changes_2","title":"Changes","text":""},{"location":"changelog/#gmx_mmpbsa_1","title":"gmx_MMPBSA","text":"<ul> <li>Re-implementation of compact binary output file (#249)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v155-06102022","title":"gmx_MMPBSA v1.5.5 (06/10/2022)","text":""},{"location":"changelog/#additions_2","title":"Additions","text":""},{"location":"changelog/#gmx_mmpbsa_2","title":"gmx_MMPBSA","text":"<ul> <li>Improved the API (#209)<ul> <li>Added a new method to get the Enthalpy </li> <li>Added a new method to get the Entropy</li> <li>Added a new method to get the Binding</li> <li>Added a new method to get the Decomposition energy</li> <li>Added a new method to get the gmx_MMPBSA_ana data</li> </ul> </li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_1","title":"gmx_MMPBSA_ana","text":"<ul> <li>Added multiprocessing and multithreading (#209)</li> <li>Wait indicator</li> <li>Added Error line cap size</li> <li>Systems, subsystems and component selection options</li> <li>Added threshold to remove energetic terms or residues</li> <li>Correlation (#137)<ul> <li>Normal correlation using \u0394G</li> <li>Mutant correlation using \u0394\u0394G</li> <li>Energy values table</li> <li>Interactive systems selection and Experimental Ki editor</li> <li>New regression plot with bivariate and univariate graphs</li> <li>Chart options panel<ul> <li>General options</li> <li>Regression options<ul> <li>Scatter</li> <li>Distribution</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"changelog/#documentation","title":"Documentation","text":"<ul> <li>News section</li> <li>Animated command-line code block with terminal</li> <li>Added versioning</li> <li>Added installation using *.yml configuration file (#221)</li> <li>Added a new tutorial for correlation analysis (#194)</li> </ul>"},{"location":"changelog/#fix_1","title":"Fix","text":""},{"location":"changelog/#gmx_mmpbsa_ana_2","title":"gmx_MMPBSA_ana","text":"<ul> <li>Close gmx_MMPBSA_ana properly when the selection dialog is rejected</li> <li>Compatibility with previous versions (<code>&lt; v1.5.2</code>)</li> <li>Added several tooltips</li> <li> <p>Improved general performance. See the benchmark (#209, #230, #243)</p> <ul> <li>Improved the reading of output files and optimized data storage. (#228)</li> <li>Eliminated the recalculation of IE and C2 entropies before opening the GUI. Now read from outputs files</li> <li>Optimized data storage and access to subsets in panda's Dataframes</li> <li>Now file processing and graphics generation does not freeze the GUI.</li> <li>Removed redundant steps and data</li> <li>Removed line graphs for components in the per-wise decomposition schema</li> <li>Data access, processing, and storage are done in the API.</li> <li>Added the option to temporarily store data on the hard disk instead of memory</li> <li>Removed several pop-up windows</li> <li>Decreased RAM consumption</li> </ul> </li> <li> <p>Removed H5 support </p> </li> <li>Invalid periodicity in the prmtop (#211)</li> <li>Buffer saturation (#213)</li> </ul>"},{"location":"changelog/#changes_3","title":"Changes","text":""},{"location":"changelog/#gmx_mmpbsa_3","title":"gmx_MMPBSA","text":"<ul> <li>Improved IE and C2 calculation</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_3","title":"gmx_MMPBSA_ana","text":"<ul> <li>Change the IE representation</li> <li>Removed summary widget</li> <li>Now the bar plot data contain the Average, SD, and SEM instead of all frames</li> <li> <p>Chart Options</p> <ul> <li>Error line color</li> <li>Error line representation (SD or SEM)</li> </ul> </li> <li> <p>Restructured the init (system selection) dialog</p> <ul> <li>Improved energy and decomposition options selection</li> <li>Improved the correlation options</li> <li>Added a new section for performance configuration</li> <li>Added RAM consumption estimator</li> <li>Improved the systems' tree representation and edition options</li> </ul> </li> </ul>"},{"location":"changelog/#gmx_mmpbsa_test","title":"gmx_MMPBSA_test","text":"<ul> <li>The examples folder moved up to the root directory</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v152-03232022","title":"gmx_MMPBSA v1.5.2 (03/23/2022)","text":""},{"location":"changelog/#additions_3","title":"Additions","text":""},{"location":"changelog/#gmx_mmpbsa_4","title":"gmx_MMPBSA","text":"<ul> <li>ALPB (Analytical Linearized Poisson-Boltzmann) approximation (#170)</li> <li>PC+ correction in 3D-RISM (#187)</li> <li>Warning when using -deo option without &amp;decomp namelist in the input file (#191)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_4","title":"gmx_MMPBSA_ana","text":"<ul> <li>Tooltips for different options (#151)</li> </ul>"},{"location":"changelog/#fix_2","title":"Fix","text":""},{"location":"changelog/#gmx_mmpbsa_ana_5","title":"gmx_MMPBSA_ana","text":"<ul> <li>Chart options (#185)</li> </ul>"},{"location":"changelog/#changes_4","title":"Changes","text":""},{"location":"changelog/#gmx_mmpbsa_5","title":"gmx_MMPBSA","text":"<ul> <li>3D-RISM calculated with sander instead of rism3d.snglpnt (#153)</li> </ul>"},{"location":"changelog/#documentation_1","title":"Documentation","text":"<ul> <li>Update 3D-RISM doc (#190)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v151-03102022","title":"gmx_MMPBSA v1.5.1 (03/10/2022)","text":""},{"location":"changelog/#additions_4","title":"Additions","text":""},{"location":"changelog/#gmx_mmpbsa_6","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Add new variables for QM/MM calculations (#171)</li> <li>Improvement of \"print_res\" function for &amp;decomp and QM (#150)</li> <li>Support for OPLS force field (#160)</li> <li>New precalculated .xvv files for 3D-RISM</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_6","title":"<code>gmx_MMPBSA_ana</code>","text":"<ul> <li>Support for PyQt6</li> </ul>"},{"location":"changelog/#documentation_2","title":"<code>Documentation</code>","text":"<ul> <li>gmx_MMPBSA_ana documentation (v1.5.0) (#152)</li> <li>Tutorial for psf_dcd files</li> <li>Tutorial for OPLS ff files</li> </ul>"},{"location":"changelog/#fixes_2","title":"Fixes","text":""},{"location":"changelog/#gmx_mmpbsa_7","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Add ERROR when ligand.mol2 defined and no gaff or gaff2 in forcefields variable (#175)</li> <li>Fixed incorrect path search when the gmx_path is defined</li> <li>Fixed error when no ions are included in the groups defined</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_7","title":"<code>gmx_MMPBSA_ana</code>","text":"<ul> <li>Remove empty terms issue (#179)</li> <li>Fixed chart title for decomposition</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v1503-02262022","title":"gmx_MMPBSA v1.5.0.3 (02/26/2022)","text":""},{"location":"changelog/#fixes_3","title":"Fixes","text":""},{"location":"changelog/#gmx_mmpbsa_8","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Improved nmode and sd in the output (#169)</li> <li>Improved autocompletion script</li> <li>Updated 3D-RISM, NMODE, Alascan, Decomp, and Linear/Non-Linear PB solver tutorials</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v1501-02222022","title":"gmx_MMPBSA v1.5.0.1 (02/22/2022)","text":""},{"location":"changelog/#fixes_4","title":"Fixes","text":""},{"location":"changelog/#gmx_mmpbsa_9","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Allow index group name for group selection (#156)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_8","title":"<code>gmx_MMPBSA_ana</code>","text":"<ul> <li>gmx_MMPBSA_ana does not open at the end of the calculation (#158)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v150-02222022","title":"gmx_MMPBSA v1.5.0 (02/22/2022)","text":""},{"location":"changelog/#additions_5","title":"Additions","text":""},{"location":"changelog/#gmx_mmpbsa_10","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Support for all files generated with CHARMM-GUI for Amber force fields (ff14SB and ff19SB)</li> <li>enabled NonLinear PB solver in <code>sander</code> (#63)</li> <li>enabled all <code>pbsa</code> options in <code>sander</code> (#64)</li> <li>enabled all <code>3D-RISM</code> variables (#68)</li> <li>Improve IE output data (#91)</li> <li>New C2 Entropy method added (#73)</li> <li>Option to create an input file (<code>--create_input</code>)</li> <li>New format file (h5) to store all the data result (<code>Experimental</code>)</li> <li>New method to get the <code>decomp</code> data without the API classes</li> <li>Report energy differences for every term in alanine scanning</li> <li>Automatic calculation of charge for <code>com</code> , <code>rec</code>, and <code>lig</code> groups in QM/MMGBSA</li> <li>Improve residue selection in QM/MMGBSA</li> <li>New modified PB Radii sets for GAFF (#140) and CHARMM (#141) force fields</li> <li>conda package (#55)</li> <li>Checking structure consistency method (#44)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_9","title":"<code>gmx_MMPBSA_ana</code>","text":"<ul> <li>Chart properties selector. The following properties can be changed:</li> <li>Font size:<ul> <li>Axes (Ticks, Labels)</li> <li>Title, Subtitle and legend</li> <li>Color bar</li> </ul> </li> <li>Pallete, color or theme:<ul> <li>Line plot</li> <li>Bar plot</li> <li>Heatmap plot</li> <li>PyMOL visualization</li> </ul> </li> <li>Rotation, padding and number of ticks</li> <li>Figure size, dpi and format</li> <li>Chart type specific properties</li> <li>Highlight or split components</li> <li>Frame range and interval selection</li> <li>Chart data can be visualized in table format and copy directly to excel</li> <li>Summary table for complex, receptor, ligand, etc.</li> <li>Now the outputs files can be visualized as document in their own sub-window</li> <li>New button to launch all the graphics and functions associated to item</li> <li>Highlighted Bar and Heatmap plot</li> <li>User setting file per-system</li> <li>Frames to Time conversion</li> </ul>"},{"location":"changelog/#documentation_3","title":"Documentation","text":"<ul> <li>Code block names and annotations</li> </ul>"},{"location":"changelog/#fixes_5","title":"Fixes","text":""},{"location":"changelog/#gmx_mmpbsa_11","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Protonated residues (#42)</li> <li>Inconsistent energy between tleap and ParmEd topology (#147)</li> <li>Error with alphanumeric residue numbers (#134)</li> <li><code>print_res</code> selection scheme</li> <li>Error when <code>startframe=0</code> (#66)</li> <li><code>parmchk2</code> always uses GAFF as force field (#45)</li> <li>IE is calculated for PB and GB independently (#72)</li> <li>Alanine scanning with CHARMM ff (#88)</li> <li>MT approach (#78)</li> <li><code>get_num_terms</code> function run forever if TDC term not found. (#98)</li> <li>Check if the groups defined for receptor and ligand are the same (#86)</li> <li>Add SD and SEM calculated with propagation formula (#105)</li> <li>Structure consistency (#80, #79)</li> <li>gmx_MMPBSA launches an error when there is an <code>OverflowError</code> on IE calculation (#57)</li> <li>Improve <code>gmx_MMPBSA.log</code> file (#108)</li> <li>Inconsistency with multiple trajectories (#120)</li> <li>Alanine Scanning ERROR on THR to ALA mutation (#139)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_10","title":"<code>gmx_MMPBSA_ana</code>","text":"<ul> <li>Tick labels in line plots (#65)</li> <li>Improved PyMOL 3D visualization (#85)</li> <li>Improved the system options in the init dialog</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_test_1","title":"<code>gmx_MMPBSA_test</code>","text":"<ul> <li>Error when <code>-f</code> option it not defined (#46)</li> </ul>"},{"location":"changelog/#changes_5","title":"Changes","text":""},{"location":"changelog/#gmx_mmpbsa_12","title":"<code>gmx_MMPBSA</code>","text":"<ul> <li>Recalculate the PB energy with --rewrite-output changing the value of <code>inp</code> (#144)</li> <li>Removed deprecated variables</li> <li>Input file format. Although it kept the structure of the previous version, the current one is more GROMACS alike</li> <li><code>EnergyVector</code> changed to <code>ndarray</code> subclass</li> <li>Regen expression for <code>mutant_res</code></li> <li>Now the COM, REC and LIG trajectories must have the same length when using MT approach</li> <li>Improve verbose logging in gmx_MMPBSA.log file (#108)</li> <li>Removed <code>*.gro</code> file support in <code>-cs</code> , <code>-rs</code> and <code>-ls</code> flags</li> <li>Added <code>trjconv</code> to avoid the PBC in the tpr file (#43)</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_ana_11","title":"<code>gmx_MMPBSA_ana</code>","text":"<ul> <li>New set of chart buttons</li> <li>IE plot</li> </ul>"},{"location":"changelog/#gmx_mmpbsa_test_2","title":"<code>gmx_MMPBSA_test</code>","text":"<ul> <li>Improved parallel processing</li> <li>Change command-line</li> </ul>"},{"location":"changelog/#documentation_4","title":"Documentation","text":"<ul> <li>Updated packages dependency</li> <li>Input and Output file pages</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v143-05262021","title":"gxm_MMPBSA v1.4.3 (05/26/2021)","text":""},{"location":"changelog/#additions_6","title":"Additions","text":"<ul> <li>Added two new tutorials Protein_ligand_LPH_atoms_CHARMMff and QM/MMGBSA calculations</li> <li>Now the program reports the <code>p-value</code> associated with the correlation coefficient when performing the correlation analysis</li> <li>Google Analytics is used as a third-party tracking service to improve documentation. Check our Private Policy for more details</li> </ul>"},{"location":"changelog/#fixes_6","title":"Fixes","text":"<ul> <li>Minor fixes in the documentation</li> <li>Improved parsing of <code>forcefields</code> variable</li> <li>Fixed bug when <code>gmx_MMPBSA_ana</code> runs without arguments</li> <li>Fixed compatibility with older files (<code>&lt; v1.4.0</code>)</li> <li>Fixed error when <code>debug_printlevel &gt; 1</code> in tleap command</li> </ul>"},{"location":"changelog/#changes_6","title":"Changes","text":"<ul> <li>Now the command line used is added to the log file </li> <li>The <code>gmx_MMPBSA data</code> folder is exported directly rather than copied in the <code>$AMBERHOME</code> data folder.</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v142-05012021","title":"gxm_MMPBSA v1.4.2 (05/01/2021)","text":""},{"location":"changelog/#additions_7","title":"Additions","text":"<ul> <li>Added Covid-19 and other complex systems as examples in the documentation</li> <li>Added Q&amp;A section to the documentation</li> <li>Implemented an adaptive <code>intdiel</code>(GB)/<code>indi</code>(PB) for Alanine scanning (Check the input file section) </li> </ul>"},{"location":"changelog/#fixes_7","title":"Fixes","text":"<ul> <li>Fixed bug when <code>startframe = 0</code> (#33)</li> <li>Fixed bug when blank lines exist in [molecule] section in topology file</li> <li>Fixed pipe command-line for Gromacs execution in macOS </li> <li>Fixed compatibility issues with v1.3.x</li> <li>Improved and fixed the documentation</li> <li>Improved output file information related to \u0394G binding</li> <li>Improved calculation with different entropy approximations simultaneously</li> </ul>"},{"location":"changelog/#changes_7","title":"Changes","text":"<ul> <li>Changed <code>protein_forcefields</code> and <code>ligand_forcefield</code> by <code>forcefields</code> variable in all examples</li> <li>Now QH and IE can be calculated at the same time</li> <li><code>entropy</code> variable was separated in <code>qh_entropy</code> and <code>interaction_entropy</code>. The <code>entropy</code> variable is deprecated    and will be removed in the next major version (v1.5.0).</li> <li><code>entropy_seg</code> was replaced by <code>ie_segment</code>. The <code>entropy_seg</code> variable is deprecated and will be removed in the    next major version (v1.5.0).</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v141-04082021","title":"gxm_MMPBSA v1.4.1 (04/08/2021)","text":"<p>Additions</p> <ul> <li>New class <code>Residue</code> added to handle residues selection in Gromacs format with Amber index</li> <li>Verification of the presence of water molecules in receptor and ligand groups </li> <li>Gromacs timer added</li> </ul> <p>Fixes</p> <ul> <li>Gromacs topology conversion</li> <li><code>qm_residues</code> notation</li> <li>Default path in <code>gmx_MMPBSA_test</code></li> <li>The Entropy representation in <code>gmx_MMPBSA_ana</code></li> <li>Bug when the structure has insertion code</li> <li>Improved \u0394G Binding plot representation</li> </ul> <p>Changes</p> <ul> <li>Now <code>forcefields</code> variable unifies <code>protein_forcefield</code> and <code>ligand_forcefield</code>. These variables <code>protein_forcefield</code>   and <code>ligand_forcefield</code> are deprecated and will be removed in the next major version (v1.5.0).</li> <li>Improved documentation</li> <li>Examples</li> <li>Command-line<ul> <li>MPI</li> <li>Examples</li> </ul> </li> <li>Links and references</li> <li>Updated to material 7.1.0<ul> <li>Dark mode</li> <li>Material \"Back to Top\" button</li> <li>Grammatical corrections</li> </ul> </li> <li>Installation section</li> <li>Figures caption</li> <li>The Ambiguous name for Entropy term in output files</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v140-03222021","title":"gxm_MMPBSA v1.4.0 (03/22/2021)","text":"<p>This release focuses almost entirely on <code>gmx_MMPBSA_ana</code> with minor issues fixed in <code>gmx_MMPBSA</code></p> <p>Additions</p> <ul> <li>New start window to select options  <ul> <li>Option to make correlation (Pearson and Spearman coefficients)</li> <li>Option to hide decomposition data</li> <li>Option to not compute charts with a non-significant contribution</li> <li>Option to not include terms with a non-significant contribution in bar charts</li> <li>Selection of the components to display in addition to Delta (i.e. complex, receptor, and ligand)</li> <li>Toggle the chart toolbar for a cleaner visualization</li> <li>An informative table with selected systems data<ul> <li>Option to exclude any system</li> <li>Option to change:<ul> <li>The system name</li> <li>The experimental Ki for correlation</li> <li>The temperature to calculate the Experimental Energy and the Interaction Entropy</li> </ul> </li> </ul> </li> <li>Data reader with progress bar and multiprocessing</li> </ul> </li> <li>Multiple systems to analyze in the same session  </li> <li>Correlation dock<ul> <li>Multiple models at the same time</li> <li>Graphs and correlation data for each calculated energy term (\u0394H, \u0394H+IE, \u0394H+NMODE and \u0394H+QH)  </li> <li>Table with the experimental energy of the systems, and the data of the selected model</li> </ul> </li> <li>New arguments flags for gmx_MMPBSA_ana (See the gmx_MMPBSA_ana documentation)<ul> <li>replaced <code>-p</code> by <code>-f</code></li> <li><code>-f</code> accept a folder, single info file or a list of them</li> <li>New flag <code>-r</code>. This flag allows to load all the systems inside a selected folder</li> </ul> </li> <li>New graphical options<ul> <li>A new set of graphics (heatmap)<ul> <li>Per-frame when analyzing Per-residue and pair in Per-wise</li> <li>Relation matrix for Per-wise</li> </ul> </li> <li>Interactive visualization of PDB files with per-residue energies with <code>PyMOL</code> (up to 5 instances).</li> <li>Regression plot for correlation</li> </ul> </li> <li>Plot features<ul> <li>Added Standard deviation to bar plots  </li> <li>Added rolling average to line plots</li> <li>Added indicators for the selected interval and average value in IE chart</li> <li>Added crosshair cursor for better analysis on charts</li> </ul> </li> <li>Multiprocessing application for testing (<code>gmx_MMPBSA_test</code>) </li> <li>Embed YouTube videos for <code>gmx_MMPBSA_ana</code></li> </ul> <p>Fixes</p> <ul> <li>Now <code>gmx_MMPBSA_ana</code> shows stability results as expected</li> <li>Errors in the documentation</li> <li>MPI</li> </ul> <p>Changes</p> <ul> <li>Converted analyzer.py into a sub-module for more flexibility, organization and portability</li> <li>Residues notation for mutation: CHAIN:RESNAME:RESNUMBER:ICODE instead of Amber residue index</li> <li>Improve the selection method in decomposition calculation</li> <li>Replaced variable <code>entropy_temp</code> (deprecated) by <code>temperature</code></li> <li>IE in API</li> <li>Color Palette used in graphs</li> <li>Use seaborn and matplotlib for charts</li> <li>Use Pandas Dataframe and numpy to store data</li> <li>Changed the data structure to implement dynamic selection of frames in future versions</li> <li>Improved data export: now any item can be exported as CSV file</li> <li>Improved the documentation<ul> <li>Improve examples documentation</li> <li>Added changelog button at home</li> <li>Separated changelog in a new header</li> <li>Added tags to mark the history of changes of variables and functionalities</li> </ul> </li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v133-03092021","title":"gxm_MMPBSA v1.3.3 (03/09/2021)","text":"<p>Fixes</p> <ul> <li>fixed Boltzmann constant for IE</li> <li>fix mutation in ligand</li> <li>fixed analyzer error when interval &gt; 1</li> <li>fixed residue selection within</li> <li>fixed ChainID assignation when reference structure is defined</li> <li>fixed the selection to print when decomposition</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v132-03012021","title":"gxm_MMPBSA v1.3.2 (03/01/2021)","text":"<p>Additions</p> <ul> <li>Now, gmx_MMPBSA is in Zenodo    . You can refer to    us in this way in what we publish the article</li> <li>Added Interaction Entropy to gmx_MMPBSA output file</li> <li>Added a new class to save IE in a csv file</li> <li>Added \"Go to Top\" button to documentation HTML.</li> </ul> <p>Fixes</p> <ul> <li>Error when ligand and/or receptor are discontinuous (Testing it)</li> <li>Error when ligand and/or receptor are discontinuous and numbered non-consecutively</li> <li>Non-critical errors and inconsistencies in documentation</li> </ul> <p>Changes</p> <ul> <li><code>receptor_mask</code> and <code>ligand_mask</code> have been removed from input file variables. Now we extract the amber mask directly    based on the GROMACS index file</li> <li>The receptor and ligand mapping in the complex was improved. Now we use a method based on the GROMACS index file</li> <li>The method <code>Map</code> of the <code>system_MMPBSA</code> class has been restructured. Now always processes amber masks</li> <li>Changing the IE calculation function to a class</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v131","title":"gmx_MMPBSA-v1.3.1","text":"<p>Additions</p> <ul> <li>New variable (<code>overwrite_data</code>) to overwrite gmx_MMPBSA data. </li> <li>More informative message when sander fail. Useful for PB calculation</li> </ul> <p>Fixes</p> <ul> <li>Protein-ligand with charmm force field example</li> <li>Stability calculation</li> <li>gmx path error</li> <li>leaprc.GLYCAM_06h-1 file</li> <li>Protein-glycan example</li> </ul> <p>Changes</p> <ul> <li>Documentation banner</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v130","title":"gmx_MMPBSA-v1.3.0","text":"<p>Additions</p> <ul> <li>Documentation at GitHub pages</li> <li>CHARMM force field support</li> <li>Amber topology generation from GROMACS topology. Work for CHARMM and Amber force fields</li> <li>New flag for topologies (<code>-cp</code>, <code>-rp</code> and <code>-lp</code>) added</li> <li>Now <code>gmx_MMPBSA</code> supports discontinuous receptor and ligand.</li> <li>Glycine scanning</li> <li>Autocompletion script for both <code>gmx_MMPBSA</code> and <code>gmx_MMPBSA_ana</code></li> <li>Versioneer to control the semantic version.</li> <li>Argument type checker for the command-line </li> </ul> <p>Fixes</p> <ul> <li>Alanine scanning tutorial </li> <li>GROMACS executable path </li> <li>The <code>-gui</code> option has been changed by <code>-nogui</code> and fixed when it is defined </li> <li>Improvement on documentation</li> </ul> <p>Changes</p> <ul> <li>Documentation theme. Now we use Material</li> <li>Alanine scanning variable. Now <code>mutant</code> correspond to mutant amino acid (ALA and GLY)</li> <li>The <code>gmx_MMPBSA_gui</code> was changed by <code>gmx_MMPBSA_ana</code> </li> <li>Improvement on the topologies' construction process</li> <li>Order in which the trajectories are cleaned. Now, the topology is built and finally, the trajectories are cleaned</li> </ul>"},{"location":"changelog/#gmx_mmpbsa-v120","title":"gmx_MMPBSA v1.2.0","text":"<p>Additions</p> <ul> <li>New ligand force field (Zwitterionic amino acids)</li> <li>A new flag (-cr) added for defining a reference structure (guarantee a better consistency in generated PDB files)</li> <li>API documentation</li> </ul> <p>Fixes</p> <ul> <li>More comprehensive output log file</li> <li>Best handling of structure files</li> </ul> <p>Changes</p> <p><code>gmx</code> <code>editconf</code> is used to generate PDB files instead of <code>gmx</code> <code>trjconv</code> (#14) <code>gmx_MMPBSA</code> data is copied in AMBER as an independent folder *.gro files can be used as a MD Structure+mass(db) file Updated tutorial list in README (Protein_DNA_RNA_Ion_ligand BFE calculations)</p>"},{"location":"changelog/#gmx_mmpbsa-v111","title":"gmx_MMPBSA v1.1.1","text":"<p>Additions</p> <ul> <li>New tutorial added (see Protein_DNA_RNA_Ion_ligand tutorial)</li> </ul> <p>Fixes</p> <ul> <li>Support various metallo-complexes formats</li> </ul> <p>Changes</p> <ul> <li>Keep all the temporary files in the folder for debugging purposes</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-v110","title":"gxm_MMPBSA v.1.1.0","text":"<p>Additions</p> <ul> <li>Now supports carbohydrates as ligand. See this tutorial </li> <li>Now supports metalloprotein-ligand complexes. See this tutorial.</li> <li>We have added data folder to gmx_MMPBSA module. This folder contains the GLYCAM_06h-1 force field files    (Compatible with amber99sb and early, see at http://glycam.org) which is not in AmberTools.</li> </ul> <p>Fixes</p> <ul> <li>Minor bugs</li> </ul> <p>Changes</p> <ul> <li>We changed the notation of the force fields, now the user can define any force field (We have only tested Amber and  GLYCAM force fields) available in AmberTools. Charmm is not yet supported. See this section</li> </ul>"},{"location":"changelog/#gxm_mmpbsa-first-release","title":"gxm_MMPBSA first release","text":"<p>This version includes:</p> <ul> <li>Compatibility with different Gromacs versions</li> <li>Support for all types of calculations available in MMPBSA.py</li> <li>Graphical user interface for results analysis (gmx_MMPBSA_ana)</li> <li>API modified to get more information</li> <li>Some new facilities and types of calculations</li> </ul>"},{"location":"cite_us/","title":"Cite us","text":"<p>If you found gmx_MMPBSA useful for your research, please cite:</p> <p>Vald\u00e9s-Tresanco, M.S., Vald\u00e9s-Tresanco, M.E., Valiente, P.A. and Moreno E. gmx_MMPBSA: A New Tool to Perform  End-State Free Energy Calculations with GROMACS. Journal of Chemical Theory and Computation, 2021 17 (10), 6281-6291.  https://pubs.acs.org/doi/10.1021/acs.jctc.1c00645. Download | *.bib | *.ris</p> <p>Please also consider citing MMPBSA.py's paper:</p> <p>Bill R. Miller, T. Dwight McGee, Jason M. Swails, Nadine Homeyer, Holger Gohlke, and Adrian E. Roitberg. MMPBSA. py: An Efficient Program for End-State Free Energy Calculations.  Journal of Chemical Theory and Computation,  2012 8 (9), 3314-3321. https://pubs.acs.org/doi/10.1021/ct300418h. Download | *.bib | *.ris | *.xml</p>"},{"location":"cite_us/#example","title":"Example","text":"<p>Important</p> <p>This does not constitute by any means the only way to cite <code>gmx_MMPBSA</code> and programs/methods implemented in it. It  is just meant to serve as a guidance.</p> <p>Here there is an example on how to cite <code>gmx_MMPBSA</code> and programs/methods implemented in it:</p> <p>MM/GBSA calculations</p> <p>PBC conditions were removed from GROMACS output trajectory before running the calculations with gmx_MMPBSA.<sup>1</sup><sup>,</sup><sup>2</sup> Energetically relevant residues within 5 \u00c5 at the interface were predicted using the per-residue effective free energy  decomposition (prEFED) protocol.<sup>3</sup> The AMBER99SB force field<sup>5</sup> was used to calculate the internal term (\u0394E<sub>int</sub>) as well as van der Waals (\u0394E<sub>vdW</sub>) and electrostatic (\u0394E<sub>ele</sub>) energies. The GB-Neck2 model  (igb = 8)<sup>6</sup> was used to estimate the polar component of the solvation energy (\u0394G<sub>GB</sub>) while the non-polar solvation free energy (\u2206\ud835\udc3a<sub>\ud835\udc46\ud835\udc34</sub>) was obtained by the equation:</p> <p>     \u2206\ud835\udc3a<sub>\ud835\udc46\ud835\udc34</sub> = \ud835\udefe \u00b7 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udefd </p> <p>where \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 represents the solvent-accessible surface area variation of the solute molecule  upon complex formation,  and \ud835\udefe and \ud835\udefd are empiric constants whose values for GB models are 0.0072 kcal\u00b7\u00c5<sup>-2</sup>\u00b7mol<sup>-1</sup> and 0,  respectively.<sup>7</sup><sup>,</sup><sup>8</sup> The entropic term was calculated by the Interaction Entropy method.<sup>9</sup> The input  file for gmx_MMPBSA decomposition calculation is shown below:</p> <pre><code>============================\nSample input file with decomposition analysis\n&amp;general\nstartframe=1750, endframe=2400, interval=1, PBRadii=4,\nforcefields=\"oldff/leaprc.ff99SB\"\n/\n&amp;gb\nigb=8, saltcon=0.150, intdiel=5,\n/\n&amp;decomp\nidecomp=2, dec_verbose=3,\nprint_res=\"within 5\"\n============================\n</code></pre> <p>Computational alanine scanning<sup>10</sup> was performed for five residues (TP62, EP68, EP70, HP76, and EP83) with a  specific internal dielectric constant as suggested by Yan et al.<sup>11</sup> and according to the chemical-physical  properties of the mutated amino acid (i.e., e<sub>i</sub> = 5 for charged residues; e<sub>i</sub> = 3 for polar residues;  and e<sub>i</sub> = 1 for hydrophobic residues). An example of the input file for gmx_MMPBSA alanine scanning  (EP68 residue) calculation is shown below:</p> <pre><code>============================\nSample input file for alanine scanning analysis\n&amp;general\nstartframe=1750, endframe=2400, interval=1, PBRadii=4,\nforcefields=\"oldff/leaprc.ff99SB\", interaction_entropy=1, ie_segment=25, temperature=298\n/\n&amp;gb\nigb=8, saltcon=0.150,\n/\n&amp;alanine_scanning\nmutant='ALA', mutant_res='C:68', cas_intdiel=1\n/\n============================\n</code></pre>"},{"location":"cite_us/#authors","title":"Authors","text":"<ul> <li>Mario Sergio Vald\u00e9s Tresanco, PhD Student. University of Medellin, Colombia</li> <li>Mario Ernesto Vald\u00e9s Tresanco, PhD Student. University of Calgary, Canada.</li> <li>Pedro Alberto Valiente, PhD. University of Toronto, Canada</li> <li>Ernesto Moreno Fr\u00edas, PhD. University of Medellin, Colombia</li> </ul>"},{"location":"compatibility/","title":"Upgrading","text":"<p>Upgrade to the latest version with:</p> <pre><code>amber.python -m pip install --upgrade gmx_MMPBSA\n</code></pre> <p>Inspect the currently installed version with:</p> <pre><code>amber.python -m pip show gmx_MMPBSA  or  gmx_MMPBSA -v\n</code></pre>"},{"location":"compatibility/#upgrading-from-143-to-150","title":"Upgrading from 1.4.3 to 1.5.0","text":"<p>The new gmx_MMPBSA version 1.5.0 includes major changes in calculation and processing modules, making it  incompatible with previous versions.</p> <p>New variables have been included in the input file to perform new calculations or simply provide the user with full  control over the ones already available in gmx_MMPBSA. A number of variables has been also updated, reworked or  removed. See the list below for more details:</p>"},{"location":"compatibility/#variables","title":"Variables","text":"<ul> <li> <p> New variables</p> <ul> <li>&amp;general namelist<ul> <li><code>c2_entropy</code></li> </ul> </li> <li>&amp;gb namelist<ul> <li><code>extdiel</code></li> </ul> </li> <li>&amp;pb namelist<ul> <li><code>smoothopt</code> , <code>iprob</code> , <code>arcres</code> , <code>mprob</code> , <code>npbopt</code> , <code>accept</code> , <code>nbuffer</code> , <code>fscale</code> , <code>npbgrid</code> ,  <code>scalec</code> , <code>nsnba</code> , <code>decompopt</code> , <code>use_rmin</code> , <code>sprob</code> , <code>vprob</code> , <code>rhow_effect</code> , <code>use_sav</code> , <code>maxsph</code> ,  <code>npbverb</code> </li> </ul> </li> <li>&amp;rism namelist<ul> <li><code>noasympcorr</code> , <code>ljTolerance</code> , <code>asympKSpaceTolerance</code> , <code>treeDCF</code> , <code>treeTCF</code> , <code>treeCoulomb</code> , <code>treeDCFMAC</code> ,  <code>treeTCFMAC</code> , <code>treeCoulombMAC</code> , <code>treeDCFOrder</code> , <code>treeTCFOrder</code> , <code>treeCoulombOrder</code> , <code>treeDCFN0</code> ,  <code>treeTCFN0</code> , <code>treeCoulombN0</code> , <code>mdiis_del</code> , <code>mdiis_nvec</code> , <code>mdiis_restart</code> , <code>maxstep</code> , <code>npropagate</code> ,  <code>entropicDecomp</code></li> </ul> </li> </ul> </li> <li> <p> Updated variables</p> <ul> <li>&amp;general namelist<ul> <li><code>PBRadii</code> , <code>interaction_entropy</code> , <code>assign_chainID</code> , <code>solvated_trajectory</code> , <code>verbose</code></li> </ul> </li> </ul> </li> <li> <p> Reworked variables</p> <ul> <li>&amp;general namelist<ul> <li><code>temperature</code></li> </ul> </li> </ul> </li> <li> <p> Removed variables</p> <ul> <li>&amp;general namelist<ul> <li><code>protein_forcefield</code> , <code>ligand_forcefield</code> , <code>use_sander</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"compatibility/#calculations","title":"Calculations","text":"<ul> <li> <p> New calculations</p> <ul> <li>In the new version, it is possible to perform new calculations such as  C2 Entropy and  Binding free energy calculation with non-linear PB solver</li> </ul> </li> <li> <p> Updated calculations</p> <ul> <li>The addition of new variables (see above) provide more control over &amp;pb and &amp;rism calculations</li> </ul> </li> </ul>"},{"location":"compatibility/#gmx_mmpbsa_ana","title":"gmx_MMPBSA_ana","text":"<p>gmx_MMPBSA_ana has been completely reworked, and it doesn't support files from previous versions. New functions for  customizing/exporting graphs, change number of frames and showing/exporting data have been added.</p>"},{"location":"compatibility/#upgrading-from-13x-to-14x","title":"Upgrading from 1.3.x to 1.4.x","text":"<p>The differences between both versions are small, you can see them below</p>"},{"location":"compatibility/#variables_1","title":"Variables","text":"<ul> <li> <p>New variables in input file</p> <ul> <li> <p><code>qh_entropy</code> replace <code>entropy = 1</code> </p> <p>(  Since v1.4.2)</p> </li> <li> <p><code>interaction_entrpy</code> replace <code>entropy = 2</code></p> <p>(  Since v1.4.2)</p> </li> <li> <p><code>ie_segment</code> replace <code>entropy_seg</code> </p> <p>(  Since v1.4.2)</p> </li> <li> <p><code>forcefields</code> replace <code>protein_forcefield</code> and <code>ligand_forcefield</code></p> <p>(  Since v1.4.1)</p> </li> <li> <p><code>temperature</code> replace <code>entropy_temp</code></p> <p>(  Since v1.4.1)</p> </li> <li> <p><code>sys_name</code></p> <p>(  Since v1.4.0)</p> </li> <li> <p><code>exp_ki</code> </p> <p>(  Since v1.4.0)</p> </li> </ul> </li> <li> <p>Internal variables (the user only interact with it in the info file)</p> <ul> <li><code>complex_fixed</code> (Since v1.4.0)</li> </ul> </li> <li>Modified variables<ul> <li><code>print_res</code> (Since v1.4.0)</li> </ul> </li> <li> <p>Deprecated variables</p> <ul> <li> <p><code>entropy</code> use <code>qh_entropy</code> or <code>interaction_entropy</code> instead</p> <p>(  Deprecated: v1.4.2 \u00b7  Removed: v1.5.0 )</p> </li> <li> <p><code>entropy_seg</code> use <code>ie_segment</code> instead</p> <p>(  Deprecated: v1.4.2 \u00b7  Removed: v1.5.0 )</p> </li> <li> <p><code>entropy_temp</code> use <code>temperature</code> instaed</p> <p>(  Deprecated: v1.4.1 \u00b7  Removed: v1.5.0 )</p> </li> <li> <p><code>protein_forcefield</code> use <code>forcefields</code> instead</p> <p>(  Deprecated: v1.4.1 \u00b7  Removed: v1.5.0 )</p> </li> <li> <p><code>ligand_forcefield</code> use <code>forcefields</code> instead</p> <p>(  Deprecated: v1.4.1 \u00b7  Removed: v1.5.0 )</p> </li> </ul> </li> </ul> <p>Tip</p> <p>Check the changes in <code>&amp;general namelist variables</code> section</p>"},{"location":"compatibility/#command-line","title":"Command-line","text":"<ul> <li><code>gmx_MMPBSA_ana</code> changes the <code>-p</code> option by <code>-f</code> with more flexibility. Please check the gmx_MMPBSA_ana    command-line. (Changed in v1.4.0)</li> </ul>"},{"location":"compatibility/#results-and-info-file","title":"Results and info file","text":"<p>We have ensured backwards compatibility with <code>gmx_MMPBSA</code>, however there are some changes you can make</p> Old resultsNew calculation <p>Since the calculations are done, we only have two options.</p> Define the variables in <code>gmx_MMPBSA_ana</code> As we described above, these variables can be defined or modified in the <code>gmx_MMPBSA_ana</code> start dialog (See the  <code>gmx_MMPBSA_ana</code> documentation) Modify the <code>*info</code> file (usually <code>_GMXMMPBSA_info</code>) <p>Added the new variables as we describe below. We have modified the description in the <code>_GMXMMPBSA_info</code> file a  bit to aid editing.</p> <p>Add variables to <code>_GMXMMPBSA_info</code> file</p> <p># You can alter the variables below</p> <p>INPUT['debug_printlevel'] = 0</p> <p>INPUT['verbose'] = 2</p> <p>INPUT['csv_format'] = 1</p> <p>INPUT['dec_verbose'] = 0</p> <p>INPUT['temperature'] = 298.15</p> <p>INPUT['exp_ki'] = 0.0</p> <p>INPUT['sys_name'] = 'My System'</p> <p>INPUT['entropy_seg'] = 25</p> <p>Warning</p> <p><code>complex_fixed</code> is an internal variable that cannot be defined in the input file. This variable stores the PDB file name of the fixed complex. This structure corresponds to the complex with the proper chain identifiers and  amino acid numbers. If it does not exist, a warning will be displayed, and the complex structure extracted  from the structure file defined with the -cs option will be used.</p> <p>Note that this can lead to inconsistencies, for example: if the file defined in the -cs option is in GRO  format, it will not have the string IDs.</p> <p>You can generate a structure for this variable as follows:</p> <ul> <li>generate a copy of the <code>_GMXMMPBSA_COM.pdb</code> file</li> <li>Open it with your preferred editor (we recommend one with column editing capabilities, such as Kate, Geany,     or Sublime Text)</li> <li>Check the chains ID, if they do not exist add them</li> <li>Do not change the numbering of amino acids</li> <li>Save the document as <code>_GMXMMPBSA_COM_FIXED.pdb</code></li> <li> <p>In the <code>_GMXMMPBSA_info</code> file add the following line</p> <pre><code>FILES.complex_fixed = '_GMXMMPBSA_COM_FIXED.pdb'\n</code></pre> </li> <li> <p>save the document</p> </li> </ul> <p>Removing <code>entropy_temp</code> variable</p> <p>After defining the <code>temperature</code> variable, you can remove the <code>entropy_temp</code> variable. This avoids getting  the related warning.</p> <p>As we describe in the <code>&amp;general namelist variables</code> section in the input  file, these three variables are optional since they can be defined or modified in the <code>gmx_MMPBSA_ana</code> start dialog.  However, modifying a set of systems can be cumbersome. We recommend defining them in the input file</p> Example <pre><code>&amp;general\nsys_name=\"Protein-Ligand\",\ntemperature=310\nexp_ki=10\n/\n</code></pre> <p>Note</p> <p><code>exp_ki</code> Only needed when performing correlation analysis</p>"},{"location":"gmx_MMPBSA_ana_command-line/","title":"Command-line","text":""},{"location":"gmx_MMPBSA_ana_command-line/#gmx_mmpbsa_ana-command-line","title":"<code>gmx_MMPBSA_ana</code> command-line","text":"<pre><code>$ gmx_MMPBSA_ana -h\n\nusage: run_ana.py [-h] [-v] [-f [FILES [FILES ...]]] [-r]\n\nThis program is part of gmx_MMPBSA and will show a workspace to analyze the \ngmx_MMPBSA results\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n\nInfo file:\n  -f [FILES [FILES ...]], --files [FILES [FILES ...]]\n                        gmx_MMPBSA info files or container folder or list of \n                        them (default: [.] Current working dir)\n  -r, --recursive       Search recursively in this folder at depth = 1 \n                        (default: False)\n\ngmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. \nBased on MMPBSA.py (version 16.0) and AmberTools20\n</code></pre>"},{"location":"gmx_MMPBSA_ana_running/","title":"None","text":""},{"location":"gmx_MMPBSA_ana_running/#running-gmx_mmpbsa_ana","title":"Running gmx_MMPBSA_ana","text":"<p>In order to analyze multiple systems in the same section and implement the correlation between them, we improved the  file input to gmx_MMPBSA_ana. Currently, gmx_MMPBSA_ana supports either several info files, a folder that contains the  info file, or a list of folders containing info files.</p> <p>Make sure to use the following structure when working with several folders:</p> Valid folder structureValid folders + files structureWrong folder structure <p>Here all folders (5 systems) will be processed by <code>gmx_MMPBSA_ana</code> <pre><code>Defined folder\n  \u251c\u2500\u2500 System-1\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u251c\u2500\u2500 System-2\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u251c\u2500\u2500 System-3\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u251c\u2500\u2500 System-4\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u2514\u2500\u2500 System-5\n         \u2514\u2500\u2500 _GMXMMPBSA_info\n</code></pre></p> <p>Here all systems (4) will be processed by <code>gmx_MMPBSA_ana</code> <pre><code>System-1      \n  \u2514\u2500\u2500_GMXMMPBSA_info\nFolder-1\n  \u251c\u2500\u2500 System-2.1\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u2514\u2500\u2500 System-2.2\n         \u2514\u2500\u2500 _GMXMMPBSA_info\nSystem-3 (_GMXMMPBSA_info)\n</code></pre></p> <p>The command-line for this is:</p> <pre><code>gmx_MMPBSA_ana -f /path/to/System-1 /path/to/System-3/_GMXMMPBSA_info /path/to/Folder-1 -r\n</code></pre> <p>This estructure only work if recursive option was defined. See the examples below</p> <p>Note that:</p> <ul> <li><code>System-1</code> is defined as folder that contain a _GMXMMPBSA_info</li> <li>Folder-1 contain two folder (Systems), each containing a _GMXMMPBSA_info</li> <li>System-3 is defined as a _GMXMMPBSA_info file</li> </ul> <p>Here only  4 (systems) folders will be processed by gmx_MMPBSA_ana. The systems in the <code>Internal folder</code> will be  ignored  <pre><code>Defined folder\n  \u251c\u2500\u2500 System-1\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u251c\u2500\u2500 System-2\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u251c\u2500\u2500 Internal folder\n  \u2502      \u251c\u2500X\u2500 System-3.1\n  \u2502      \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u2502      \u2514\u2500X\u2500 System-3.2\n  \u2502             \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u251c\u2500\u2500 System-4\n  \u2502      \u2514\u2500\u2500 _GMXMMPBSA_info\n  \u2514\u2500\u2500 System-5\n         \u2514\u2500\u2500 _GMXMMPBSA_info\n</code></pre></p> <p>Examples</p> One fileOne folderFiles + FoldersRecursive option <p>Passing a _GMXMMPBSA_info file as input:</p> <ul> <li> <p>Current directory</p> <pre><code>gmx_MMPBSA_ana -f _GMXMMPBSA_info\n</code></pre> </li> <li> <p>other location   Version: 1.4.0</p> <pre><code>gmx_MMPBSA_ana -f /path/to/_GMXMMPBSA_info\n</code></pre> </li> </ul> <p> Version: 1.4.0</p> <p>Passing a folder as input:  </p> <ul> <li> <p>Current directory</p> <pre><code>gmx_MMPBSA_ana -f .\n</code></pre> </li> <li> <p>other location</p> <pre><code>gmx_MMPBSA_ana -f /path/to/folder\n</code></pre> </li> </ul> <p>Remember</p> <p>This folder must contain a valid <code>_GMXMMPBSA_info</code> file</p> <p> Version: 1.4.0</p> <pre><code>gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/_GMXMMPBSA_info-1 /path/to/folder-2\n</code></pre> <p>Remember</p> <ul> <li>All defined folders must contain a valid <code>_GMXMMPBSA_info</code> file</li> <li>All <code>_GMXMMPBSA_info</code> files defined must be valid</li> </ul> <p> Version: 1.4.0</p> <p>Passing a folder as input with <code>recursive</code> option:  </p> <ul> <li> <p>Current directory</p> <pre><code>gmx_MMPBSA_ana -f . -r\n</code></pre> </li> <li> <p>other location</p> <pre><code>gmx_MMPBSA_ana -f /path/to/folder --recursive\n</code></pre> </li> <li> <p>combine multiple folders</p> <pre><code>gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/folder-2 /path/to/folder-3  -r\n</code></pre> <p>Folders can contain one or more systems</p> </li> <li> <p>combine multiple folders and files</p> <pre><code>gmx_MMPBSA_ana -f /path/to/folder-1 /path/to/_GMXMMPBSA_info-1 /path/to/folder-3  -r\n</code></pre> <ul> <li>Folders can contain one or more systems</li> <li>Note that if you remove the option -r, each folder must contain a valid _GMXMMPBSA_info file.</li> </ul> </li> </ul>"},{"location":"input_file/","title":"The input file","text":""},{"location":"input_file/#description","title":"Description","text":"<p><code>gmx_MMPBSA</code> input file contains all the specifications for the calculations. The input file is syntactically similar  to other programs in Amber, although we incorporated a new format more similar to the one used on GROMACS *.mdp  files (see bleow). The input file contains sections called <code>namelist</code> where the variables are defined for each  calculation. The allowed namelists are:</p> <ul> <li><code>&amp;general</code>: contains variables that apply to all aspects of the    calculation or parameters required for building AMBER topologies from GROMACS files.</li> <li><code>&amp;gb</code>: unique variables to Generalized Born (GB) calculations.</li> <li><code>&amp;gbnsr6</code>: unique variables to GBNSR6 calculations.</li> <li><code>&amp;pb</code>: unique variables to Poisson Boltzmann (PB) calculations.</li> <li><code>&amp;rism</code>: unique variables to 3D-RISM calculations.</li> <li><code>&amp;alanine_scanning</code>: unique variables to alanine scanning    calculations.</li> <li><code>&amp;decomp</code>: unique variables to the decomposition scheme.</li> <li><code>&amp;nmode</code>: unique variables to the normal mode (NMODE) calculations used to    approximate vibrational entropies.</li> </ul>"},{"location":"input_file/#generation-of-input-files-with-gmx_mmpbsa","title":"Generation of input files with gmx_MMPBSA","text":"<p>The input file can be created using <code>gmx_MMPBSA</code> by selecting the calculations you want to perform.</p> Command-line<pre><code>gmx_MMPBSA --create_input args\n\nwhere `args` can be:  gb, gbnsr6, pb, rism, ala, decomp, nmode, all\n</code></pre> <p>Example:</p> GB calculationPB calculationGB, PB and Decomposition calculationsAll calculations <pre><code>gmx_MMPBSA --create_input gb\n</code></pre> <pre><code>gmx_MMPBSA --create_input pb\n</code></pre> <pre><code>gmx_MMPBSA --create_input gb pb decomp\n</code></pre> <pre><code>gmx_MMPBSA --create_input\n</code></pre> <p>or </p> <pre><code>gmx_MMPBSA --create_input all\n</code></pre> <p>Danger</p> <p>Note that several variables must be explicitly defined in the input file</p> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#format","title":"Format","text":"<p>All the input variables are described below according to their respective namelists. Descriptions are taken from  original sources and modified accordingly when needed. Integers and floating point  variables should be typed as-is while strings should be put in either single- or double-quotes. All variables should be  set with <code>variable = value</code> and separated by commas is they appear in the same line. If the variables appear in different  lines, the comma is no longer needed. See several examples are shown below. As you will see, several  calculations can be performed in the same run (i.e. <code>&amp;gb</code> and <code>&amp;pb</code>; <code>&amp;gb</code> and <code>&amp;alanine_scanning</code>; <code>&amp;pb</code> and <code>&amp;decomp</code>; etc). As we have mentioned, the input file can be generated using the <code>create_input</code> option of <code>gmx_MMPBSA</code>.  This style, while retaining the same Amber format (derived from Fortran), is aesthetically more familiar to the GROMACS style (<code>*.mdp</code>). However, it maintains the same essence, so it could be defined in any of the two format styles or even combined. See the formats below:</p> New format style Old format style New format style Input file example<pre><code># General namelist variables\n&amp;general\n  sys_name             = \"\"                      # System name\n  startframe           = 1                       # First frame to analyze\n  endframe             = 9999999                 # Last frame to analyze\n  ...\n  interval              = 1                      # The offset from which to choose frames from each trajectory file\n/\n\n# Generalized-Born namelist variables\n&amp;gb\n  igb                  = 5                       # GB model to use\n  ...\n  probe                = 1.4                     # Solvent probe radius for surface area calc\n/\n</code></pre> Old format style Input file example<pre><code># General namelist variables\n&amp;general\n  sys_name = \"\", startframe = 1, endframe = 9999999\n  ...\n  interval = 1\n/\n\n# Generalized-Born namelist variables\n&amp;gb\n  igb = 5, \n  ...\n  probe = 1.4\n/\n</code></pre>"},{"location":"input_file/#namelists","title":"Namelists","text":""},{"location":"input_file/#general-namelist-variables","title":"<code>&amp;general</code> namelist variables","text":""},{"location":"input_file/#basic-input-options","title":"Basic input options","text":"<code>sys_name</code> (Default = None) <p>Define the System Name. This is useful when trying to analyze several systems at the same time or calculating  the correlation between the predicted and the experimental energies. If the name is not defined, one will be assigned  when loading the system in <code>gmx_MMPBSA_ana</code> on a first-come, first-served basis.</p> <p>Tip</p> <p>The definition of the system name is entirely optional, however it can provide a better clarity during  the results analysis. All files associated with this system will be saved using its name.</p> <p>Implemented in v1.4.0 </p> <code>startframe</code> (Default = 1) The frame from which to begin extracting snapshots from the full, concatenated trajectory comprised of every trajectory file placed on the command-line. This is always the first frame read. <code>endframe</code> (Default = 9999999) The frame from which to stop extracting snapshots from the full, concatenated trajectory comprised of every trajectory file supplied on the command-line. <code>interval</code> (Default = 1) The offset from which to choose frames from each trajectory file. For example, an interval of 2 will pull every 2<sup>nd</sup> frame beginning at startframe and ending less than or equal to endframe."},{"location":"input_file/#parameter-options","title":"Parameter options","text":"<code>forcefields</code> (Default = \"oldff/leaprc.ff99SB,leaprc.gaff\") <p>Comma-separated list of force fields used to build Amber topologies. This variable is more flexible than the  previous ones (<code>protein_forcefield</code> and <code>ligand_forcefield</code>). The goal of this variable is to provide convenient  support for complex systems with several components. It supports all force fields tested in previous  <code>protein_forcefield</code> and <code>ligand_forcefield</code> variables.</p> <p>Tip</p> <ul> <li>The value of this variable depends on the force field you used for your system in GROMACS</li> <li>You don't need to define forcefields` variable when you using a topology. Please refer to the section    \"How gmx_MMPBSA works\"</li> <li>The notation format is the one used in tleap</li> <li>In general, any forcefield present in <code>$AMBERHOME/dat/leap/cmd</code> could be use with <code>forcefields</code> variable.  (Check \u00a73 for more information)</li> <li>Be cautious when defining this variable since you can define two forces fields with a similar purpose which can    generate inconsistencies. </li> </ul> <p>Input files samples:</p> Protein and/or Nucleic acidsProtein onlyProtein + DNAProtein + RNA + Organic mol. Input file with forcefield variable defined for a system with protein and/or nucleic acids<pre><code>&amp;general\nforcefields=\"oldff/leaprc.ff99SB\" \n/\n</code></pre> Input file with forcefield variable defined for a system with only protein<pre><code>&amp;general\nforcefields=\"leaprc.protein.ff14SB\" \n/\n</code></pre> Input file with forcefield variable defined for a system with protein and nucleic acids (DNA)<pre><code>&amp;general\nforcefields=\"leaprc.protein.ff14SB,leaprc.DNA.bsc1\" \n/\n</code></pre> Input file with forcefield variable defined for a system with protein, nucleic acids (RNA) and a organic molecule<pre><code>&amp;general\nforcefields=\"leaprc.protein.ff14SB,leaprc.RNA.OL3,leaprc.gaff2\" \n/\n</code></pre> <p>Forcefields for Protein/Nucleic Acids</p> Name Description \"oldff/leaprc.ff99\" ff99 for proteins and nucleic acids \"oldff/leaprc.ff03\" ff03 (Duan et al.) for proteins and nucleic acids \"oldff/leaprc.ff99SB\" ff99SB for proteins and nucleic acids \"oldff/leaprc.ff99SBildn\" ff99SB modified for the \"ILDN\" changes for proteins and nucleic acids \"oldff/leaprc.ff99bsc0\" ff99SB force field using parmbsc0 for nucleic acid <p>Forcefields only for proteins</p> Name Description \"leaprc.protein.ff14SB\" ff14SB only for proteins \"leaprc.protein.ff19SB\" ff19SB only for proteins <p>Forcefields only for Nucleic Acids</p> Name Description \"leaprc.DNA.bsc1\" ff99bsc0+bsc1 only for DNA \"leaprc.DNA.OL15\" ff99bsc0+OL15 only for DNA \"leaprc.RNA.OL3\" ff99bsc0_chiOL3 only for RNA <p>Forcefields for organic molecules, glycans and zwitterionic amino acids</p> Name Description \"leaprc.gaff\" General Amber Force Field for organic molecules \"leaprc.gaff2\" General Amber Force Field 2 for organic molecules \"leaprc.GLYCAM_06j-1\" Glycam_06j-1 carbohydrate ff (Compatible with ff12SB and later) \"leaprc.GLYCAM_06EPb\" GLYCAM-06EPb carbohydrate ff (Compatible with ff12SB and later) \"gmxMMPBSA/leaprc.GLYCAM_06h-1\" <code>*</code> GLYCAM-0606h-1 carbohydrate ff (Compatible with ff99SB and earlier) \"gmxMMPBSA/leaprc.zaa99SB\" <code>*</code> Force field for Zwitterionic amino acids (Compatible with ff99SB) <p>Tip</p> <p><code>*</code> We added the gmxMMPBSA data to the tleap path. This way, we keep <code>gmx_MMPBSA</code> data separated from Amber's.</p> <p>Implemented in v1.4.1</p> <p>Modified in v1.4.3: Internal change</p> <p>Updated in v1.5.0: Documentation updated</p> <code>protein_forcefield</code> <p>Define the force field to build Amber topology for protein</p> <p>Removed in v1.5.0: Use <code>forcefields</code> variable</p> <code>ligand_forcefield</code> <p>Define the force field to build Amber topology for ligand (small molecule)</p> <p>Removed in v1.5.0: Use <code>forcefields</code> variable</p> <code>ions_parameters</code> (Default = 1) <p>Define ions parameters to build the Amber topology (see \u00a73.6). </p> <ul> <li>1: frcmod.ions234lm_126_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 normal usage set))</li> <li>2: frcmod.ions234lm_126_spce (same, but in SPC/E water)</li> <li>3: frcmod.ions234lm_126_tip4pew (same, but in TIP4P/EW water) </li> <li>4: frcmod.ions234lm_hfe_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 HFE set))</li> <li>5: frcmod.ions234lm_hfe_spce (same, but in SPC/E water)</li> <li>6: frcmod.ions234lm_hfe_tip4pew (same, but in TIP4P/EW water)</li> <li>7: frcmod.ions234lm_iod_tip3p (Li/Merz ion parameters for +2 to +4 ions in TIP3P water (12-6 IOD set))</li> <li>8: frcmod.ions234lm_iod_spce (same, but in SPC/E water)</li> <li>9: frcmod.ions234lm_iod_tip4pew (same, but in TIP4P/EW water)</li> <li>10: frcmod.ionslm_126_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 normal usage set))</li> <li>11: frcmod.ionslm_hfe_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 HFE set))</li> <li>12: frcmod.ionslm_iod_opc (Li/Merz ion parameters for -1 to +4 in OPC water (12-6 IOD set))</li> <li>13: frcmod.ions1lm_126_tip3p (Li/Merz ion parameters for +1 and -1 ions in TIP3P water (12-6 normal usage set))</li> <li>14: frcmod.ions1lm_126_spce (same, but in SPC/E water)</li> <li>15: frcmod.ions1lm_126_tip4pew (same, but in TIP4P/EW water)</li> <li>16: frcmod.ions1lm_iod (Li/Merz ion parameters for +1/-1 ions in TIP3P, SPC/E, and TIP4P/EW waters (12-6 IOD set))</li> </ul> <p>Keep in mind</p> <ul> <li>You don't need to define it when you use a topology. Please refer to the section    \"How gmx_MMPBSA works\" </li> <li>This notation is simpler since these parameter files are generally the same for all systems</li> </ul> <p>Updated in v1.5.0: Add new ion parameters sets</p> <code>PBRadii</code> (Default = 3) <p>PBRadii to build amber topology files:</p> <ul> <li>1: bondi, recommended when igb = 7</li> <li>2: mbondi, recommended when igb = 1</li> <li>3: mbondi2, recommended when igb = 2 or 5</li> <li>4: mbondi3, recommended when igb = 8</li> <li> <p>5: mbondi_pb2</p> <p>mbondi_pb2 radii set</p> <p>This raddi set haven been added in gmx_MMPBSA v1.5.0. It is based on mbondi radii set and contains a  new optimized set of halogen PB radii for halogenated compounds (without extra point (EP) of charge)  parametrized with General Amber Force Field (GAFF):</p> <p>Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP:</p> <ul> <li>Cl: 1.76</li> <li>Br: 1.97</li> <li>I: 2.09</li> </ul> <p>Warning</p> <p>Make sure that you installed the updated ParmEd <pre><code>python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236\n</code></pre></p> <p>This radii set should be used with the following PBSA setup:</p> <pre><code>Sample input file for PB calculation with halogenated compounds\n\n&amp;general\nsys_name=\"PB_Halogens\",\nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\nPBRadii=5,\n/\n&amp;pb\nradiopt=0, istrng=0.150, inp=1,\n/\n</code></pre> </li> <li> <p>6: mbondi_pb3</p> <p>mbondi_pb3 radii set</p> <p>This raddi set haven been added in gmx_MMPBSA v1.5.x. It is based on mbondi radii set and contains a  new optimized set of halogen PB radii for halogenated compounds (without extra point (EP) of charge)  parametrized with General Amber Force Field (GAFF):</p> <p>Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP:</p> <ul> <li>Cl: 2.20</li> <li>Br: 2.04</li> <li>I: 2.19</li> </ul> <p>Warning</p> <p>Make sure that you installed the updated ParmEd <pre><code>python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236\n</code></pre></p> <p>This radii set should be used with the following PBSA setup:</p> <pre><code>Sample input file for PB calculation with halogenated compounds\n\n&amp;general\nsys_name=\"PB_Halogens\",\nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\nPBRadii=6,\n/\n&amp;pb\nradiopt=0, istrng=0.150, inp=2,\n/\n</code></pre> </li> <li> <p>7: charmm_radii (compatible only with &amp;pb)</p> <p>charmm_radii radii set</p> <p>This raddi set haven been added in gmx_MMPBSA v1.5.0. Use only with systems prepared with CHARMM  force fields. This atomic radii set for Poisson-Boltzmann calculations has been derived from average  solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested with free  energy perturbation with explicit solvent. Most of the values were taken from a *radii.str file used in  PBEQ Solver in charmm-gui.</p> <ul> <li>Radii for protein atoms in 20 standard amino acids from  Nina, Belogv, and Roux</li> <li>Radii for nucleic acid atoms (RNA and DNA) from  Banavali and Roux</li> <li>Halogens and other atoms from Fortuna and Costa</li> </ul> <p>Warning</p> <p>Make sure that you installed the updated ParmEd <pre><code>python -m pip install git+https://github.com/ParmEd/ParmEd.git@16fb236\n</code></pre></p> </li> </ul> <p>Updated in v1.5.0: New PB radii sets have been added</p> <code>temperature</code> (Default = 298.15) <p>Specify the temperature (in K) used in the calculations.</p> <p>Implemented in v1.4.0: Replace <code>entropy_temp</code></p> <p>_Reworked in v1.5.0: Temperature value used not only for entropy but all calculations</p>"},{"location":"input_file/#entropy-options","title":"Entropy options","text":"<code>qh_entropy</code> (Default = 0) <p>It specifies whether to perform a quasi-harmonic entropy (QH) approximation with <code>cpptraj</code> or not.</p> <ul> <li>0: Don\u2019t</li> <li>1: perform QH</li> </ul> <p>Keep in mind</p> <ul> <li>The number of frames used for QH analyses should be higher than 3N, N being the number of atoms in the  complex</li> <li>Check this thread for more info on QH analysis</li> </ul> <p>Implemented in v1.4.2: Equivalent to (Removed) <code>entropy = 1</code></p> <code>interaction_entropy</code> (default = 0) <p>It specifies whether to use the Interaction Entropy (IE) approximation.</p> <ul> <li>0: Don\u2019t</li> <li>1: perform IE</li> </ul> <p>Keep in mind</p> <ul> <li>The Interaction Entropy can be calculated independently of the solvent model used.</li> <li>A sample Interaction Entropy input file is shown here</li> <li>A tutorial on the use of Interaction Entropy is  available here</li> <li>The standard deviation of the interaction energy (<code>\u03c3IE</code>) should always be reported when using the Interaction  Entropy method.</li> <li>The Interaction Entropy method should be avoided if <code>\u03c3IE &gt; ~ 3.6 kcal/mol</code> because it is impossible to  converge the exponential average.</li> <li>It is advisable to study how the Interaction Entropy depends on N by block averaging (which also provide an  estimate of the precision of the calculated entropies).</li> <li>A sampling frequency of 10 fs, as reported in the original IE publication, seems to be 3\u201340 times too  dense. A sampling frequency of 0.1 ps would be more appropriate.</li> <li>The Interaction Entropy results may vary depending on the system flexibility or whether constraints were used  or not in the MD simulation. </li> </ul> <p>Please, check this paper for further details.</p> <p>Implemented in v1.4.2: Equivalent to (Removed) <code>entropy = 2</code></p> <p>Updated in v1.5.0: Now reports the <code>\u03c3IE</code>. Chart improved in <code>gmx_MMPBSA_ana</code></p> <code>ie_segment</code> (Default = 25) <p>Representative segment (in %), starting from the last frame, for the calculation of the Interaction Entropy, e.g.: <code>ie_segment = 25</code> means that the last quartile of the total number of frames (<code>(endframe-startframe)/interval</code>) will be used to calculate the average Interaction Entropy.</p> <p>Implemented in v1.4.2</p> <code>c2_entropy</code> (default = 0) <p>It specifies whether to use the C2 Entropy approximation.</p> <ul> <li>0: Don\u2019t</li> <li>1: perform C2</li> </ul> <p>Keep in mind</p> <ul> <li>The C2 Entropy can be calculated independently of the solvent model used.</li> <li>A tutorial on the use of C2 Entropy is  available here</li> <li>The standard deviation of the interaction energy (<code>\u03c3IE</code>) should always be reported.</li> <li>The C2 Entropy method should be avoided if <code>\u03c3IE &gt; ~ 3.6 kcal/mol</code> because it gives unrealistically large  entropies.</li> <li>It is advisable to study how the C2 Entropy depends on N by block averaging (which also provide an  estimate of the precision of the calculated entropies).</li> <li>A sampling frequency of 10 fs, seems to be 3\u201340 times too dense. A sampling frequency of 0.1 ps would be more  appropriate.</li> <li>The C2 Entropy results may vary depending on the system flexibility or whether constraints were used  or not in the MD simulation.</li> </ul> <p>Please, check this paper for further details.</p> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#miscellaneous-options","title":"Miscellaneous options","text":"<code>assign_chainID</code> (Default = 0) <p>Defines the chains ID assignment mode. It is ignored when defining a reference structure (recommended). If <code>assign_chainID = 1</code>, <code>gmx_MMPBSA</code> check if the structure has no chains ID, and it is assigned  according to the structure<sup>1</sup>. If <code>assign_chainID = 2</code>, <code>gmx_MMPBSA</code> assign the chains ID, exist or not,  according to the structure<sup>1</sup> (can generate inconsistencies).</p> <p>Implemented in v1.2.0</p> <p>Updated in v1.5.0: Internal changes</p> <code>exp_ki</code> (Default = 0.0) <p>Specify the experimental Ki (in nM) for correlations analysis. If not defined or exp_ki = 0 then this system  will be omitted in the correlation analysis</p> <p>Implemented in v1.4.0</p> <code>full_traj</code> (Default = 0) <p>Print trajectories</p> <ul> <li>0: Print only thread trajectories in *.mdcrd format</li> <li>1: Print a full traj and the thread trajectories in *.mdcrd format</li> </ul> <code>gmx_path</code> <p>Define a path to search for GROMACS executables. This path takes precedence over the path defined in the PATH variable. In this path the following executables will be searched: <code>gmx</code>, <code>gmx_mpi</code>, <code>gmx_d</code>, or <code>gmx_mpi_d</code> (GROMACS &gt; 5.x.x), and <code>make_ndx</code>, <code>editconf</code> and <code>trjconv</code> (GROMACS 4.x.x)</p> <p>Keep in mind</p> <p>This variable is used when the GROMACS used to run the system differs from that of will be used for running  the analyses. It takes the path to the GROMACS bin folder where the executables will be searched on.  An example of the use of this variable is given below:</p> <pre><code>&amp;general\nsys_name=\"my_system\",\nverbose=2, forcefields=\"oldff/leaprc.ff99SBildn\",leaprc.gaff\"\ngmx_path=\"/home/programs/gromacs/bin\"\n/\n&amp;gb\nigb=5, saltcon=0.150  \n/\n\n# replace this \"/home/programs/gromacs/bin\" with the path to the GROMACS you want to use.\n</code></pre> <p>Implemented in v1.1.1</p> <code>keep_files</code> (Default = 2) <p>Specifies which files are kept.</p> <ul> <li>0: Keep only binary file (COMPACT_gmx_MMPBSA_RESULTS.mmxsa)</li> <li>1: Keep all temporary files (prefix*)</li> <li>2: Keep all temporary files (prefix*) and binary file</li> </ul> <p>Keep in mind</p> <p>The binary file contains all the information necessary to analyze the data with gmx_MMPBSA_ana. Its  use is only recommended in special cases where the original  raw data is not present. We recommnend to use <code>keep_files = 1</code> or <code>keep_files = 2</code> to  avoid errors when using <code>gmx_MMPBSA_ana</code></p> <code>netcdf</code> (Default = 0) <p>Specifies whether to use NetCDF trajectories internally rather than writing temporary ASCII trajectory files. For very large trajectories, this could offer significant speedups, and requires less temporary space.  However, this option is incompatible with alanine scanning.</p> <ul> <li>0: Do NOT use temporary NetCDF trajectories</li> <li>1: Use temporary NetCDF trajectories</li> </ul> <code>solvated_trajectory</code> (Default = 1) <p>Define if it is necessary to generate a clean trajectory with no water and ions.</p> <ul> <li>0: Don\u2019t</li> <li>1: Generate clean trajectory</li> </ul> <p>Implemented in v1.3.0</p> <p>Updated in v1.5.0. Bugs fixed</p> <code>use_sander</code> <p>Use sander for energy calculations, even when <code>mmpbsa_py_energy</code> will suffice.</p> <p>Removed in v1.5.0: Now <code>sander</code> is used in all calculations</p> <code>verbose</code> (Default = 1) <p>Specifies how much output is printed in the output file.</p> <ul> <li>0: Print only difference terms</li> <li>1: Print all complex, receptor, ligand, and difference terms</li> </ul> <p>Updated in v1.5.0</p>"},{"location":"input_file/#gb-namelist-variables","title":"<code>&amp;gb</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default GB input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input gb\n</code></pre> </li> <li> <p>A sample GB input file is shown here</p> </li> <li>A tutorial on binding free energy calculation with GB model is available  here</li> </ul>"},{"location":"input_file/#basic-input-options_1","title":"Basic input options","text":"<code>igb</code> (Default = 5) <p>Generalized Born method to use (see \u00a74 for more info).</p> <ul> <li>1: The Hawkins, Cramer, Truhlar pairwise GB model (GB-HCT)</li> <li>2: Modified GB model 1 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC1)</li> <li>5: Modified GB model 2 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC2)</li> <li>7: GBn model described by Mongan, Simmerling, McCammon, Case and Onufriev (GB-Neck)</li> <li>8: Same GB functional form as the GBn model (igb=7), but with different parameters. Developed by Nguyen, P\u00e9rez,       Bermeo, and Simmerling (GB-Neck2)</li> </ul> <code>alpb</code> (Default = 0) <p>Use Analytical Linearized Poisson-Boltzmann (ALPB) approximation to handle electrostatic interactions  within the implicit solvent model (see \u00a74.2):</p> <p></p> <p>where \u03b2 = \u03b5<sub>in</sub>/\u03b5<sub>ex</sub> is the ratio of the internal and external dielectrics, \u03b1=0.571412, and A  is the so-called effective electrostatic size of the molecule (see <code>arad_method</code> below). The ALPB requires one  of the analytical GB models to be set, that is igb = 1, 2, 5, or 7, for computing the effective Born radii. It uses  the same sets of radii as required by the particular GB model.</p> <ul> <li>0: Don't</li> <li>1: Use ALPB</li> </ul> <code>arad_method</code> (Default = 1) <p>Method used to estimate the effective electrostatic size/radius (<code>A</code> in ALPB equation) of the molecule  (See Sigalov, Fenley, and Onufriev).</p> <ul> <li>1: Use structural invariants</li> <li>2: Use elementary functions</li> <li>3: Use elliptic integral (numerical)</li> </ul> <code>intdiel</code> (Default = 1.0) Define Internal dielectric constant. <code>extdiel</code> (Default = 78.5) <p>Define External dielectric constant.</p> <p>Implemented in v1.5.0: This variable <code>= 80.0</code> in previous versions</p> <code>saltcon</code> (Default = 0.0) Salt concentration in Molarity (M). <code>rgbmax</code> (Default = 999.0) Distance cutoff in \u00c5 to use when computing effective GB radii. <code>surften</code> (Default = 0.0072) Surface tension value. Units in kcal/mol/\u00c5<sup>2</sup> <code>surfoff</code> (Default = 0.0) Offset to correct (by addition) the value of the non-polar contribution to the solvation free energy term. <code>molsurf</code> (Default = 0) <p>Define the algorithm to calculate the surface area for the non-polar solvation term.</p> <ul> <li>0: LCPO (Linear Combination of Pairwise Overlaps)</li> <li>1: molsurf algorithm</li> </ul> <code>msoffset</code> (Default = 0) Offset to apply to the individual atomic radii in the system when calculating the <code>molsurf</code> surface. See the description of the <code>molsurf</code> action command in cpptraj. <code>probe</code> (Default = 1.4) <p>Radius in \u00c5 of the probe molecule (supposed to be the size of a solvent molecule), to use when determining the  molecular surface.</p> <p>Note</p> <p>only applicable when <code>molsurf</code> is set to 1</p>"},{"location":"input_file/#qm-options","title":"QM options","text":"<code>ifqnt</code> (Default = 0) <p>Specifies whether a part of the system is treated with quantum mechanics.</p> <ul> <li>0: Potential function is strictly classical</li> <li>1: Use QM/MM</li> </ul> <p>Keep in mind</p> <ul> <li>Calculations where part of the system is treated with quantum mechanics can be performed only with GB</li> <li>A sample QM/MMGBSA input file is shown here</li> <li>A tutorial on binding free energy calculation with QM/MMGBSA is available  here</li> </ul> <code>qm_theory</code> <p>Which semi-empirical Hamiltonian should be used for the quantum calculation. Options are <code>PM3</code>, <code>AM1</code>, <code>MNDO</code>,  <code>PDDG-PM3</code>, <code>PM3PDDG</code>, <code>PDDG-MNDO</code>, <code>PDDGMNDO</code>, <code>PM3-CARB1</code>, <code>PM3CARB1</code>, <code>DFTB</code>, <code>SCC-DFTB</code>, <code>RM1</code>, <code>PM6</code>,  <code>PM3-ZnB</code>, <code>PM3-MAIS</code>, <code>PM3ZNB</code>, <code>MNDO/D</code>, <code>MNDOD</code>. The dispersion correction can be switched on for <code>AM1</code>  and <code>PM6</code> by choosing <code>AM1-D*</code> and <code>PM6-D</code>, respectively. The dispersion and hydrogen bond correction will be  applied for <code>AM1-DH+</code> and <code>PM6-DH+</code>.</p> <p>Danger</p> <p>No <code>qm_theory</code> default, this must be specified if <code>ifqnt</code> = 1.</p> <code>qm_residues</code> <p>Complex residues to treat with quantum mechanics. All residues treated with quantum mechanics in the complex  must be treated with quantum mechanics in the receptor or ligand to obtain meaningful results. This notation is  the same used for <code>print_res</code> variable in <code>&amp;decomp</code> namelist.</p> <p>Danger</p> <p>No <code>qm_residues</code> default, this must be specified if <code>ifqnt</code> = 1.</p> <p>Selection schemes</p> By Distance (recommended)Amino acid selection Notation: [ <code>within</code> <code>distance</code> ] <code>within</code> corresponds to the keyword and <code>distance</code> to the maximum distance criterion in \u00c5 necessary to  select the residues from both the receptor and the ligand. In case the cutoff used is so small that  the number of qm_residues = 0, the cutoff value will be increased by 0.1 until the number of  qm_residues &gt; 0. <p>Example</p> <p><code>qm_residues=\"within 5\"</code> Residues within 5 \u00c5 between receptor and ligand will be treated with quantum  mechanic.</p> Notation: [ <code>CHAIN</code>/(<code>RESNUM</code> or <code>RESNUM-RESNUM</code>) ] Treat with quantum mechanics residues individual or ranges. This notation also supports insertion  codes, in which case you must define them individually <p><code>qm_residues=\"A/1,3-10,15,100\"</code> This treat with quantum mechanic Chain A residues 1, 3 through 10, 15, and  100 from the complex topology file and the corresponding residues in either the ligand and/or receptor  topology files.</p> <p>Let's suppose that we can have the following sequence: - A:LEU:5 - A:GLY:6:A - A:THR:6:B - A:SER:6:C -  A:ASP:6:D - A:ILE:7</p> <p>with the format <code>CHAIN</code>/<code>RESNUMBER</code>:<code>INSERTION_CODE</code></p> Right notationWrong notation Ranges selection <code>qm_residues=\"A/5-7</code> Will treat with quantum mechanic all mentioned residues because all residues with  insertion code are contained in the range Individual selection <code>qm_residues=\"A/5,6B,6C,7</code> Will treat with quantum mechanic all mentioned residues except the  residues 6A and 6D from chain A Multiple chain selection <code>qm_residues=\"A/5-10,100 B/34,56</code> Will treat with quantum mechanic residues 5 through 10, and 100 from  chain A, and residues 34 and 56 from Chain B. <p><code>qm_residues=\"A/5-6B,6D-7</code> Will end in error.</p> <code>qmcharge_com</code> (Default = 0) <p>The charge of the quantum section for the complex.</p> <p>Deprecated in v1.5.0: Now, <code>qmcharge_com</code> is assigned automatically based on the selection</p> <code>qmcharge_lig</code> (Default = 0) <p>The charge of the quantum section of the ligand.</p> <p>Deprecated in v1.5.0: Now, <code>qmcharge_lig</code> is assigned automatically based on the selection</p> <code>qmcharge_rec</code> (Default = 0) <p>The charge of the quantum section for the receptor.</p> <p>Deprecated in v1.5.0: Now, <code>qmcharge_rec</code> is assigned automatically based on the selection</p> <code>qmcut</code> (Default = 9999.0) The cutoff for the qm/mm charge interactions. <code>scfconv</code> (Default = 1.0e-8) Controls the convergence criteria for the SCF calculation, in kcal/mol. The tighter the  convergence the longer the calculation will take. Values tighter than 1.0e-11 are not recommended as these can lead  to oscillations in the SCF, due to limitations in machine precision, that can lead to convergence failures. <code>writepdb</code> (Default = 1) <p>Write a PDB file of the selected QM region. This option is designed to act as an aid to the user to allow easy checking of what atoms were included in the QM region. Write a PDB file of the atoms in the QM region  on the very first step to a file named qmmm_region.pdb.</p> <ul> <li>0: Don't</li> <li>1: Write a PDB file of the selected QM region</li> </ul> <code>peptide_corr</code> (Default = 0) <p>Apply MM correction to peptide linkages. This correction is of the form: </p> <p></p> <p>where \u03d5 is the dihedral angle of the H-N-C-O linkage and h<sub>type</sub> is a constant dependent on the  Hamiltonian used. Recommended, except for DFTB/SCC-DFTB.</p> <ul> <li>0: Don't</li> <li>1: Apply a MM correction to peptide linkages</li> </ul> <code>verbosity</code> (Default = 0) <p>Controls the verbosity of QM/MM related output. Values of 2 or higher will produce a lot of output.</p> <ul> <li>0: only minimal information is printed - Initial QM geometry and link atom positions as well as the SCF energy at every ntpr steps.</li> <li>1: Print SCF energy at every step to many more significant figures than usual. Also print the number of SCF cycles needed on each step.</li> <li>2: As 1 and also print info about memory reallocations, number of pairs per QM atom, QM core - QM core energy, QM core - MM atom energy, and total energy.</li> <li>3: As 2 and also print SCF convergence information at every step.</li> <li>4: As 3 and also print forces on the QM atoms due to the SCF calculation and the coordinates of the link atoms at every step.</li> <li>5: As 4 and also print all of the info in kJ/mol as well as kcal/mol.</li> </ul>"},{"location":"input_file/#gbnsr6-namelist-variables","title":"<code>&amp;gbnsr6</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li>GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed  numerically, via the so-called \"R6\" integration (ref.) over molecular surface of the solute. In contrast to  most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical PB framework is. Thus,  accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of input atomic radii. Check Chapter \u00a75 in Amber manual for a more thorough description  of the GBNSR6 model and its parameters.</li> <li> <p>A default GBNSR6 input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input gbnsr6\n</code></pre> </li> <li> <p>A sample GBNSR6 input file is shown here</p> </li> <li>A tutorial on binding free energy calculation with GBNSR6 model is available  here</li> </ul>"},{"location":"input_file/#basic-input-options_2","title":"Basic input options","text":"<code>epsin</code> (Default = 1.0) Dielectric constant of the solute region. <code>epsout</code> (Default = 78.5) Implicit solvent dielectric constant for the solvent. <code>istrng</code> (Default = 0.0) Ionic strength in M for the GBNSR6 equation. <code>dprob</code> (Default = 1.4) Radius of the solvent probe. <code>cavity_surften</code> (Default = 0.005) Surface tension parameter for nonpolar solvation calculation."},{"location":"input_file/#options-to-select-numerical-procedures","title":"Options to select numerical procedures","text":"<code>space</code> (Default = 0.5) Sets the grid spacing that determines the resolution of the solute molecular surface. Note that memory footprint of  this grid-based implementation of GBNSR6 may become large for large structures, e.g. the nucleosome (about 25,000  atoms) will take close to 2 GB of RAM when the default grid spacing is used. For very large structures, one may  consider increasing the value of space, which will reduce the memory footprint and execution time; however, the  accuracy will also decrease. <code>arcres</code> (Default = 0.2) Arc resolution used for numerical integration over molecular surface. <code>b</code> (Default = 0.028) Specifies the value of uniform offset to the (inverse) effective radii, the default value 0.028 gives  better agreement with the PB model, regardless of the structure size. For best agreement with the explicit solvent  (TIP3P) solvation energies, optimal value of B depends on the structure size: for small molecules (number of atoms  less than 50), B=0 is recommended. With -chagb option, B is calculated automatically based on the solute size. <code>alpb</code> (Default = 1) <p>Specifies if ALBP correction is to be used.</p> <ul> <li>0: Canonical GB is used.</li> <li>1: ALPB is used (default)</li> </ul>"},{"location":"input_file/#options-for-chagb-model","title":"Options for CHAGB model","text":"<code>chagb</code> (Default = 0) <p>Define if CHAGB is used.</p> <ul> <li>0: Do not use CHAGB.</li> <li>1: Use CHAGB.</li> </ul> <code>rs</code> (Default = 0.52) Dielectric boundary shift compared to the molecular surface. <code>radiopt</code> (Default = 0) <p>Set of intrinsic atomic radii to be used.</p> <ul> <li>0: uses hardcoded intrisic radii optimized for small drug like molecules, and single amino acid dipeptides (ref.)</li> <li>1: intrinsic radii are read from the topology file. Note that the dielectric surface defined using these radii is then shifted outwards by Rs relative to the molecular surface. The option is not recommended unless you are planning to re-optimize the input radii set for your problem.</li> </ul> <code>roh</code> (Default = 1) <p>Sets the value of R<sup>z</sup><sub>OH</sub> for CHAGB model, the default is 0.586\u00c5. This parameter defines which  explicit water model is being mimicked with respect to its propensity to cause charge hydration asymmetry. A perfectly  tetrahedral water , which can not cause charge hydration asymmetry, would have R<sup>z</sup><sub>OH</sub> = 0. The  options for <code>roh</code> are:</p> <ul> <li>1: R<sup>z</sup><sub>OH</sub> = 0.586\u00c5 corresponds to TIP3P and SPC/E. </li> <li>2: R<sup>z</sup><sub>OH</sub> = 0.699\u00c5 for OPC.</li> <li>3: R<sup>z</sup><sub>OH</sub> = 0.734\u00c5 for TIP4P </li> <li>4: R<sup>z</sup><sub>OH</sub> = 0.183\u00c5 for TIP5P/E. </li> </ul> <code>tau</code> (Default = 1.47) Value of \u03c4 in the CHAGB model. This dimensionless parameter controls the effective range of the neighboring  charges (j) affecting the CHA of atom (i), see (ref.) for details."},{"location":"input_file/#pb-namelist-variables","title":"<code>&amp;pb</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li><code>gmx_MMPBSA</code> uses sander to perform PB calculations. sander offers access to all pbsa  functionalities. The default values for the variables described below are appropriate for most calculations  on solvated molecular systems. Also note that the default options may have changed over time. A more thorough  description of all the options can be found here. For a detailed discussion of all related options on  the quality of the MM/PB(GB)SA calculations, please check this publication.</li> <li> <p>A default PB input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input pb\n</code></pre> </li> <li> <p>A sample PB input file is shown here</p> </li> <li>A tutorial on binding free energy calculation with PB model is available  here</li> </ul>"},{"location":"input_file/#basic-input-options_3","title":"Basic input options","text":"<code>ipb</code> (Default = 2) <p>Option to set up a dielectric model for all numerical PB procedures. <code>ipb = 1</code> corresponds to a classical geometric  method, while a level-set based algebraic method is used when <code>ipb &gt; 2</code>.</p> <ul> <li>0: No electrostatic solvation free energy is computed.</li> <li>1: The dielectric interface between solvent and solute is built with a geometric approach. (ref.)</li> <li>2: The dielectric interface is implemented with the level set function. Use of a level set function simplifies the calculation of the intersection points of the molecular surface and grid edges and leads to more stable numerical calculations. (ref.)</li> <li>4: The dielectric interface is also implemented with the level set function. However, the linear equations on the grid points nearby the dielectric boundary are constructed using the IIM. In this option, The dielectric constant do not need to be smoothed, that is, <code>smoothopt</code> is useless. Only the linear PB equation is supported, that is, <code>npbopt = 0</code>. Starting from the Amber 2018 release, <code>solvopt</code> is no longer relevant as only one stable solver is supported. (ref.)</li> <li>6: The dielectric interface is implemented analytically with the revised density function approach (<code>sasopt = 2</code>). The linear equations on the irregular points are constructed using the IIM and fully utilizing the analytical surface. Otherwise, it is exactly the same as <code>ipb = 4</code>. (ref.)</li> <li>7: The dielectric interface is implemented analytically with the revised density function approach (<code>sasopt = 2</code>). The linear equations on the irregular points are constructed using the \u03a7-factor harmonic average method. (ref.)</li> <li>8: The dielectric interface is implemented analytically with the revised density function approach (<code>sasopt = 2</code>). The linear equations on the irregular points are constructed using the secondorder harmonic  average method. (ref.)</li> </ul> <code>inp</code> (Default = 2) <p>Option to select different methods to compute non-polar solvation free energy.</p> <ul> <li> <p>1: The total non-polar solvation free energy is modeled as a single term linearly proportional to the solvent accessible surface area (ref.). When using <code>inp = 1</code>:</p> <ul> <li><code>sprob</code> is reset to 1.4</li> <li><code>cavity_surften</code> is reset to 0.005</li> <li><code>cavity_offset</code> is reset to 0.000</li> </ul> </li> <li> <p>2: The total non-polar solvation free energy is modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method (ref.) closely related to the PCM solvent for quantum chemical programs. (ref.) Under this framework, the cavity term is still computed as a term linearly proportional to the molecular solvent-accessible-surface area (SASA) or the molecular volume enclosed by SASA.</p> </li> </ul> <p>Keep in mind</p> <p>Sometimes, high values for the solvation energy are obtained using <code>inp=2</code>. Check  this section to  see a workaround.</p> <code>sander_apbs</code> (Default = 0) <p>Option to use <code>APBS</code> for <code>PB</code> calculation instead of the built-in <code>PBSA</code> solver. This will work only through the <code>iAPBS</code> interface built into <code>sander.APBS</code>. Instructions for this can be found online at the iAPBS/APBS websites.</p> <ul> <li>0: Don\u2019t use <code>APBS</code></li> <li>1: Use <code>sander.APBS</code></li> </ul>"},{"location":"input_file/#options-to-define-the-physical-constants","title":"Options to define the physical constants","text":"<code>indi</code> (Default = 1.0) Internal dielectric constant. This corresponds to <code>epsin</code> in pbsa. <code>exdi</code> (Default = 80.0) External dielectric constant. This corresponds to <code>epsout</code> in pbsa. <code>emem</code> (Default = 4.0) Sets the membrane dielectric constant. Only used if <code>memopt</code> &gt; 0, does nothing otherwise. Value used should be between <code>indi</code> and <code>exdi</code> or there may be errors. This corresponds to <code>epsmem</code> in pbsa. <code>smoothopt</code> (Default = 1) <p>Instructs PB how to set up dielectric values for finite-difference grid edges that are located across the solute/solvent dielectric boundary.</p> <ul> <li>0: The dielectric constants of the boundary grid edges are always set to the equal-weight harmonic average of <code>indi</code> and <code>exdi</code>.</li> <li>1: A weighted harmonic average of <code>indi</code> and <code>exdi</code> is used for boundary grid edges. The weights for <code>indi</code> and <code>exdi</code> are fractions of the boundary grid edges that are inside or outside the solute surface. (ref.)</li> <li>2: The dielectric constants of the boundary grid edges are set to either <code>indi</code> or <code>exdi</code> depending on whether  the midpoints of the grid edges are inside or outside the solute surface.</li> </ul> <p>Implemented in v1.5.0</p> <code>istrng</code> (Default = 0.0) Ionic strength in Molarity (M). It is converted to mM for <code>PBSA</code> and kept as M for <code>APBS</code>. <code>radiopt</code> (Default = 1) <p>The option to set up atomic radii.</p> <ul> <li>0: Use radii from the prmtop file for both the PB calculation and for the non-polar calculation (see <code>inp</code>) </li> <li>1: Use atom-type/charge-based radii by Tan and Luo (ref.) for the PB calculation. Note that the radii are optimized for Amber atom types as in standard residues from the Amber database and should work fine for <code>standard</code> complexes such as protein-protein, protein-DNA. On the other hand, if a molecule in your system was  built by antechamber, i.e., if GAFF atom types are used, or any other extrenal software, radii from the prmtop  file should be used (<code>radiopt = 0</code>). Check this thread for more info.</li> </ul> <code>prbrad</code> (Default = 1.4) Solvent probe radius (in \u00c5). Allowed values are 1.4 and 1.6. This corresponds to <code>dprob</code> in pbsa. <code>iprob</code> (Default = 2.0) <p>Mobile ion probe radius (in \u00c5) for ion accessible surface used to define the Stern layer.</p> <p>Implemented in v1.5.0</p> <code>sasopt</code> (Default = 0) <p>Option to determine which kind of molecular surfaces to be used in the Poisson-Boltzmann implicit solvent model.</p> <ul> <li>0: Use the solvent excluded surface as implemented by (ref.)</li> <li>1: Use the solvent accessible surface. Apparently, this reduces to the van der Waals surface when the <code>prbrad</code> is set to zero.</li> <li>2: Use the smooth surface defined by a revised density function. (ref.) This must be combined with `ipb &gt; 2.</li> </ul> <code>arcres</code> (Default = 0.25) <p>The <code>arcres</code> keyword gives the resolution (in \u00c5) of dots used to represent solvent accessible arcs. More generally, <code>arcres</code> should be set to max(0.125 \u00c5, 0.5h) (h is the grid spacing). (ref.)</p> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#options-for-implicit-membranes","title":"Options for implicit membranes","text":"<code>memopt</code> (Default = 0) <p>Option to turn the implicit membrane on and off. The membrane is implemented as a slab like region with a uniform  or heterogeneous dielectric constant depth profile. Details of the implicit membrane setup can be  found here.</p> <ul> <li>0: No implicit membrane used.</li> <li>1: Use a uniform membrane dielectric constant in a slab-like implicit membrane. (ref.)</li> <li>2: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant  varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant depth profile was implemented using the PCHIP fitting. (ref.)</li> <li>3: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant  varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant  depth profile was implemented using the Spline fitting. (ref.)</li> </ul> <p>Keep in mind</p> <ul> <li>Calculations for implicit membranes can be performed only with PB</li> <li>A sample input file is shown here</li> <li>A tutorial on binding free energy calculation for membrane proteins is available  here</li> <li>Check this thread for more info on Parameters for Implicit  Membranes</li> </ul> <code>mprob</code> (Default = 2.70) <p>Membrane probe radius (in \u00c5). This is used to specify the highly different lipid molecule accessibility versus  that of the water. (ref.)</p> <p>Implemented in v1.5.0</p> <p></p> <code>mthick</code> (Default = 40) Membrane thickness (in \u00c5). This is different from the previous default of 20 \u00c5. <code>mctrdz</code> (Default = 0.0) Membrane center (in \u00c5) in the z direction. <code>poretype</code> (Default = 1) <p>Turn on and off the automatic depth-first search method to identify the pore. (ref.)</p> <ul> <li>0: Do not turn on the pore searching algorithm.</li> <li>1: Turn on the pore searching algorithm.</li> </ul>"},{"location":"input_file/#options-to-select-numerical-procedures_1","title":"Options to select numerical procedures","text":"<code>npbopt</code> (Default = 0) <p>Option to select the linear, or the full nonlinear PB equation.</p> <ul> <li>0: Linear PB equation (LPBE) is solved</li> <li>1: Nonlinear PB equation (NLPBE) is solved</li> </ul> <p>Note</p> <p>While the linear PB equation (see tutorial) will suffice for most  calculations, the nonlinear PB equation (see tutorial) is recommended  for highly charged systems. Parameters such as <code>eneopt</code> or <code>cutnb</code> should be adjusted accordingly when  using the NLPBE. Check the following threads (T1 and  T2) on how to proceed when using NLPBE. Last but not  least, take into account that using NLPBE can significantly increase the calculation time required for  PB calculation.</p> <p>Implemented in v1.5.0</p> <code>solvopt</code> (Default = 1) <p>Option to select iterative solvers.</p> <ul> <li>1 Modified ICCG or Periodic (PICCG) if <code>bcopt = 10</code>.</li> <li>2 Geometric multigrid. A four-level v-cycle implementation is applied by default.</li> <li>3 Conjugate gradient (Periodic version available under <code>bcopt = 10</code>). This option requires a large <code>linit</code> to converge.</li> <li>4 SOR. This option requires a large <code>linit</code> to converge.</li> <li>5 Adaptive SOR. This is only compatible with <code>npbopt = 1</code>. This option requires a large <code>linit</code>  converge. (ref.)</li> <li>6 Damped SOR. This is only compatible with <code>npbopt = 1</code>. This option requires a large <code>linit</code> to  converge. (ref.)</li> </ul> <code>accept</code> (Default = 0.001) <p>Sets the iteration convergence criterion (relative to the initial residue).</p> <p>Implemented in v1.5.0</p> <code>linit</code> (Default = 1000) Sets the maximum number of iterations for the finite difference solvers. Note that <code>linit</code> has to be set to a  much larger value, e.g. 10000, for the less efficient solvers, such as conjugate gradient and SOR, to converge.  This corresponds to <code>maxitn</code> in pbsa. <code>fillratio</code> (Default = 4.0) The ratio between the longest dimension of the rectangular finite-difference grid and that of the solute. For  macromolecules is fine to use 4, or a smaller value like 2. A default value of 4 is large enough to be used for a  small solute, such as a ligand molecule. Using a smaller value for <code>fillratio</code> may cause part of the small solute  to lie outside the finite-difference grid, causing the finite-difference solvers to fail.  <code>scale</code> (Default = 2.0) Resolution of the Poisson Boltzmann grid. It is equal to the reciprocal of the grid spacing (<code>space</code> in pbsa). <code>nbuffer</code> (Default = 0) <p>Sets how far away (in grid units) the boundary of the finite difference grid is away from the solute surface; i.e., automatically set to be at least a solvent probe or ion probe (diameter) away from the solute surface.</p> <p>Implemented in v1.5.0</p> <code>nfocus</code> (Default = 2) Set how many successive FD calculations will be used to perform an electrostatic focussing calculation on a  molecule. When <code>nfocus</code> = 1, no focusing is used. It is recommended that <code>nfocus = 1</code> when the multigrid solver is used. <code>fscale</code> (Default = 8) <p>Set the ratio between the coarse and fine grid spacings in an electrostatic focussing calculation.</p> <p>Implemented in v1.5.0</p> <code>npbgrid</code> (Default = 1) <p>Sets how often the finite-difference grid is regenerated.</p> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#options-to-compute-energy-and-forces","title":"Options to compute energy and forces","text":"<code>bcopt</code> (Default = 5) <p>Boundary condition options.</p> <ul> <li>1: Boundary grid potentials are set as zero, i.e. conductor. Total electrostatic potentials and energy are computed.</li> <li>5: Computation of boundary grid potentials using all grid charges. Total electrostatic potentials and energy are computed.</li> <li>6: Computation of boundary grid potentials using all grid charges. Reaction field potentials and energy are computed with the charge singularity free formalism. (ref.)</li> <li>10: Periodic boundary condition is used. Total electrostatic potentials and energy are computed. Can be used with <code>solvopt = 1, 2, 3, or 4</code> and <code>ipb = 1 or 2</code>. It should only be used on charge-neutral  systems. If the system net charge is detected to be nonzero, it will be neutralized by applying a small neutralizing charge on each grid (i.e. a uniform plasma) before solving.</li> </ul> <code>eneopt</code> (Default = 2) <p>Option to compute total electrostatic energy and forces.</p> <ul> <li>1: Compute total electrostatic energy and forces with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo. (ref.) In doing so, energy term EPB in the output file is set to zero, while EEL includes both the reaction field energy and the Coulombic energy. The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. The electrostatic forces and dielectric boundary forces can also be computed. (ref.) This option requires a nonzero <code>cutnb</code> and <code>bcopt = 5</code> for soluble proteins / <code>bcopt = 10</code> for membrane proteins.</li> <li>2: Use dielectric boundary surface charges to compute the reaction field energy. Both the Coulombic energy and the van der Waals energy are computed via summation of pairwise atomic interactions. Energy term EPB in the output file is the reaction field energy. EEL is the Coulombic energy.</li> <li>3: Similar to the first option above, a P3M procedure is applied for both solvation and Coulombic energy and forces for larger systems.</li> <li>4: Similar to the third option above, a P3M procedure for the full nonlinear PB equation is applied for both solvation and Coulombic energy and forces for larger systems. A more robust and clean set of routines were used for the P3M and dielectric surface force calculations.</li> </ul> <code>frcopt</code> (Default = 0) <p>Option to compute and output electrostatic forces to a file named force.dat in the working directory.</p> <ul> <li>0: Do not compute or output atomic and total electrostatic forces.</li> <li>1: Reaction field forces are computed by trilinear interpolation. Dielectric boundary forces are computed using the electric field on dielectric boundary. The forces are output in the unit of kcal/mol\u00b7\u00c5.</li> <li>2: Use dielectric boundary surface polarized charges to compute the reaction field forces and dielectric  boundary forces (ref.) The forces are output in the unit of kcal/mol\u00b7\u00c5.</li> <li>3: Reaction field forces are computed using dielectric boundary polarized charge. Dielectric boundary forces  are computed using the electric field on dielectric boundary. (ref.) The forces are output in kcal/mol\u00b7\u00c5.</li> </ul> <code>scalec</code> (Default = 0) <p>Option to compute reaction field energy and forces.</p> <ul> <li>0: Do not scale dielectric boundary surface charges before computing reaction field energy and forces.</li> <li>1: Scale dielectric boundary surface charges using Gauss\u2019s law before computing reaction field energy and forces.</li> </ul> <p>Implemented in v1.5.0</p> <code>cutfd</code> (Default = 5.0) Atom-based cutoff distance to remove short-range finite-difference interactions, and to add pairwise charge-based interactions. This is used for both energy and force calculations. See Eqn (20) in  Lu and Luo. (ref.) <code>cutnb</code> (Default = 0.0) Atom-based cutoff distance for van der Waals interactions, and pairwise Coulombic interactions when <code>eneopt</code> = 2. When <code>cutnb</code> is set to the default value of 0, no cutoff will be used for van der Waals and Coulombic interactions,  i.e., all pairwise interactions will be included. When <code>eneopt = 1</code>, this is the cutoff distance used for van der  Waals interactions only. The particle-particle portion of the Coulombic interactions is computed with the cutoff of  <code>cutfd</code>._ <code>nsnba</code> (Default = 1) <p>Sets how often (steps) atom-based pairlist is generated.</p> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#options-to-select-a-non-polar-solvation-treatment","title":"Options to select a non-polar solvation treatment","text":"<code>decompopt</code> (Default = 2) <p>Option to select different decomposition schemes when <code>inp = 2</code>. See (ref.) for a detailed discussion of the different schemes. The \u03c3 decomposition scheme is the best of the three schemes studied. (ref.) As  discussed in (ref.), <code>decompopt = 1</code> is not a very accurate approach even if it is more straightforward to  understand the decomposition.</p> <ul> <li>1: The 6/12 decomposition scheme.</li> <li>2: The \u03c3 decomposition scheme.</li> <li>3: The WCA decomposition scheme.</li> </ul> <p>Implemented in v1.5.0</p> <code>use_rmin</code> (Default = 1) <p>The option to set up van der Waals radii. The default is to use van der Waals rmin to improve the agreement with TIP3P. (ref.)</p> <ul> <li>0: Use atomic van der Waals \u03c3 values.</li> <li>1: Use atomic van der Waals rmin values.</li> </ul> <p>Implemented in v1.5.0</p> <code>sprob</code> (Default = 0.557) <p>Solvent probe radius (in \u00c5) for solvent accessible surface area (SASA) used to compute the dispersion term, default to 0.557 \u00c5 in the \u03c3 decomposition scheme as optimized in (ref.) with respect to the TIP3P solvent and the PME treatment. Recommended values for other decomposition schemes can be found in Table 4 of (ref.). If <code>use_sav = 0</code> (see below), <code>sprob</code> can be used to compute SASA for the cavity term as well. Unfortunately, the recommended value is different from that used in the dispersion term calculation as documented in (ref.). Thus, two separate calculations are needed when <code>use_sav = 0</code>, one for the dispersion term and one for the cavity term. Therefore, please carefully read (ref.) before proceeding with the option of <code>use_sav = 0</code>. Note that <code>sprob</code> was used for ALL three terms of solvation free energies, i.e., electrostatic, attractive, and repulsive terms in previous releases in Amber. However, it was found in the more recent study (ref.) that it was impossible to use the same probe radii for all three terms after each term was calibrated and validated with respect to the TIP3P solvent. (ref.)</p> <p>Implemented in v1.5.0</p> <code>vprob</code> (Default = 1.300) <p>Solvent probe radius (in \u00c5) for molecular volume (the volume enclosed by SASA) used to compute non-polar cavity  solvation free energy, default to 1.300 \u00c5, the value optimized in (ref.) with respect to the TIP3P solvent.  Recommended values for other decomposition schemes can be found in Tables 1-3 of (ref.).</p> <p>Implemented in v1.5.0</p> <code>rhow_effect</code> (Default = 1.129) <p>Effective water density used in the non-polar dispersion term calculation, default to 1.129 for <code>decompopt = 2</code>, the  \u03c3 scheme. This was optimized in (ref.) with respect to the TIP3P solvent in PME. Optimized values for other  decomposition schemes can be found in Table 4 of (ref.).</p> <p>Implemented in v1.5.0</p> <code>use_sav</code> (Default = 1) <p>The option to use molecular volume (the volume enclosed by SASA) or to use molecular surface (SASA) for cavity term  calculation. Recent study shows that the molecular volume approach transfers better from small training molecules to  biomacromolecules.</p> <ul> <li>0: Use SASA to estimate cavity free energy</li> <li>1: Use the molecular volume enclosed by SASA</li> </ul> <p>Implemented in v1.5.0</p> <code>cavity_surften</code> (Default = 0.0378) The regression coefficient for the linear relation between the total non-polar solvation free energy (<code>inp</code> = 1), or  the cavity free energy (<code>inp = 2</code>) and SASA/volume enclosed by SASA. The default value is for <code>inp = 2</code> and set to the  best of three tested schemes as reported in (ref.), i.e. <code>decompopt = 2</code>, <code>use_rmin = 1</code>, and <code>use_sav = 1</code>. See  recommended values in Tables 1-3 for other schemes. <code>cavity_offset</code> (Default = -0.5692) The regression offset for the linear relation between the total non-polar solvation free energy (<code>inp</code>= 1), or  the cavity free energy (<code>inp = 2</code>) and SASA/volume enclosed by SASA. The default value is for <code>inp</code> = 2 and set to  the best of three tested schemes as reported in (ref.), i.e. <code>decompopt = 2</code>, <code>use_rmin = 1</code>, and <code>use_sav = 1</code>.  See recommended values in Tables 1-3 for other schemes. <code>maxsph</code> (Default = 400) <p>Approximate number of dots to represent the maximum atomic solvent accessible surface. These dots are first checked  against covalently bonded atoms to see whether any of the dots are buried. The exposed dots from the first step are  then checked against a non-bonded pair list with a cutoff distance of 9 \u00c5 to see whether any of the exposed dots  from the first step are buried. The exposed dots of each atom after the second step then represent the solvent  accessible portion of the atom and are used to compute the SASA of the atom. The molecular SASA is simply a  summation of the atomic SASA\u2019s. A molecular SASA is used for both PB dielectric map assignment and for NP calculations.</p> <p>Implemented in v1.5.0</p> <code>maxarcdot</code> (Default = 1500) Number of dots used to store arc dots per atom."},{"location":"input_file/#options-for-output","title":"Options for output","text":"<code>npbverb</code> (Default = 0) <p>Verbose mode.</p> <ul> <li>0: Off</li> <li>1: On</li> </ul> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#rism-namelist-variables","title":"<code>&amp;rism</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default 3drism input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input rism\n</code></pre> </li> <li> <p><code>3D-RISM</code> calculations are performed with the <code>rism3d.snglpnt</code> program built with AmberTools, written by Tyler  Luchko. It is the most expensive, yet most statistical mechanically rigorous solvation model. See </p> <ul> <li>Introduction to RISM for a thorough description RISM  theory.</li> <li>General workflow for using 3D-RISM</li> <li>Practical considerations on:<ul> <li>Computational Requirements and Parallel Scaling of RISM</li> <li>Numerical Accuracy of RISM</li> <li>Convergence issues</li> </ul> </li> </ul> </li> <li>A sample 3drism input file is shown here</li> <li>A tutorial on binding free energy calculation with 3D-RISM is available here</li> <li>We have included more variables in 3D-RISM calculations than the ones available in the MMPBSA.py original code.  That way, users can be more in control and tackle various issues (e.g., convergence issues).</li> <li>One advantage of <code>3D-RISM</code> is that an arbitrary solvent can be chosen; you just need to change the <code>xvvfile</code>  specified on the command line (see <code>-xvvfile</code> flag in gmx_MMPBSA command line. The  default solvent is <code>$AMBERHOME/AmberTools/test/rism1d/tip3p-kh/tip3p.xvv.save</code>. In case this file  doesn't exist, a copy <code>path_to_GMXMMPBSA/data/xvv_files/tip3p.xvv</code> is used. You can find examples of precomputed  <code>.xvv</code> files for SPC/E and TIP3P water in <code>$AMBERHOME/AmberTools/test/rism1d</code> or  <code>path_to_GMXMMPBSA/data/xvv_files</code> folders.</li> </ul>"},{"location":"input_file/#closure-approximations","title":"Closure approximations","text":"<code>closure</code> (Default = \"kh\") <p>Comma separate list of closure approximations. If more than one closure is provided, the 3D-RISM solver will use  the closures in order to obtain a solution for the last closure in the list when no previous solutions are available. The solution for the last closure in the list is used for all output. The use of several closures combined with  different tolerances can be useful to overcome convergence issues (see \u00a77.3.1)</p> <ul> <li>\"kh\": Kovalenko-Hirata</li> <li>\"hnc\": Hyper-netted chain equation</li> <li>\"psen\": Partial Series Expansion of order-n where \u201cn\u201d is a positive integer (e.g., \"pse3\")</li> </ul> <p>Examples</p> <pre><code>=== \"v1.5.2\"\n    === \"One closure\"\n             closure=\"pse3\"\n    === \"Several closures\"\n             closure=\"kh\",\"pse3\"\n=== \"&lt; v1.5.2\"\n    === \"One closure\"\n             closure=\"pse3\"\n    === \"Several closures\"\n             closure=\"kh,pse3\"\n</code></pre>"},{"location":"input_file/#solvation-free-energy-corrections","title":"Solvation free energy corrections","text":"v1.5.2&lt; v1.5.2 <p>Info</p> <p>The <code>thermo</code> variable has been removed in v1.5.2. Now the standard closure relation is always reported. Use  <code>gfcorrection</code> and/or <code>pcpluscorrection</code> variables to compute additional excess chemical potential functionals.</p> <code>gfcorrection</code> (Default = 0) <p>Compute the Gaussian fluctuation excess chemical potential functional.  See \u00a77.1.2</p> <ul> <li>0: Off</li> <li>1: On</li> </ul> <code>pcpluscorrection</code> (Default = 0) <p>Compute the PC+/3D-RISM excess chemical potential functional. See \u00a77.2.4</p> <ul> <li>0: Off</li> <li>1: On</li> </ul> <code>thermo</code> (Default = \"std\") <p>Which thermodynamic equation you want to use to calculate solvation properties. Options are:</p> <ul> <li>\"std\": uses the standard closure relation</li> <li>\"gf\": Compute the Gaussian fluctuation excess chemical potential functional</li> <li>\"both\": print out separate sections for all</li> </ul> <p>Note</p> <p>Note that all data are printed out for each RISM simulation, so no choice is any more computationally  demanding than another.</p>"},{"location":"input_file/#long-range-asymptotics","title":"Long-range asymptotics","text":"<p>Info</p> <p>Long-range asymptotics are used to analytically account for solvent distribution beyond the solvent box.  Long-range asymptotics are always used when calculating a solution but can be omitted for the subsequent thermodynamic calculations, though it is not recommended.</p> <code>noasympcorr</code> (Default = 1) <p>Use long-range asymptotic corrections for thermodynamic calculations.</p> <ul> <li>0: Do not use long-range corrections</li> <li>1: Use the long-range corrections</li> </ul> <p>Implemented in v1.5.0</p> <code>treeDCF</code> (Default = 1) <p>Use direct sum, or the treecode approximation to calculate the direct correlation function long-range asymptotic  correction.</p> <ul> <li>0: Use direct sum</li> <li>1: Use treecode approximation</li> </ul> <p>Implemented in v1.5.0</p> <code>treeTCF</code> (Default = 1) <p>Use direct sum, or the treecode approximation to calculate the total correlation function long-range asymptotic  correction.</p> <ul> <li>0: Use direct sum</li> <li>1: Use treecode approximation</li> </ul> <p>Implemented in v1.5.0</p> <code>treeCoulomb</code> (Default = 1) <p>Use direct sum, or the treecode approximation to calculate the Coulomb potential energy.</p> <ul> <li>0: Use direct sum</li> <li>1: Use treecode approximation</li> </ul> <p>Implemented in v1.5.0</p> <code>treeDCFMAC</code> (Default = 0.1) <p>Treecode multipole acceptance criterion for the direct correlation function long-range asymptotic correction.</p> <p>Implemented in v1.5.0</p> <code>treeTCFMAC</code> (Default = 0.1) <p>Treecode multipole acceptance criterion for the total correlation function long-range asymptotic correction.</p> <p>Implemented in v1.5.0</p> <code>treeCoulombMAC</code> (Default = 0.1) <p>Treecode multipole acceptance criterion for the Coulomb potential energy.</p> <p>Implemented in v1.5.0</p> <code>treeDCFOrder</code> (Default = 2) <p>Treecode Taylor series order for the direct correlation function long-range asymptotic correction.</p> <p>Implemented in v1.5.0</p> <code>treeTCFOrder</code> (Default = 2) <p>Treecode Taylor series order for the total correlation function long-range asymptotic correction. Note that the  Taylor expansion used does not converge exactly to the TCF long-range asymptotic correction, so a very high order  will not necessarily increase accuracy.</p> <p>Implemented in v1.5.0</p> <code>treeCoulombOrder</code> (Default = 2) <p>Treecode Taylor series order for the Coulomb potential energy.</p> <p>Implemented in v1.5.0</p> <code>treeDCFN0</code> (Default = 500) <p>Maximum number of grid points contained within the treecode leaf clusters for the direct correlation function  long-range asymptotic correction. This sets the depth of the hierarchical octtree.</p> <p>Implemented in v1.5.0</p> <code>treeTCFN0</code> (Default = 500) <p>Maximum number of grid points contained within the treecode leaf clusters for the total correlation function  long-range asymptotic correction. This sets the depth of the hierarchical octtree.</p> <p>Implemented in v1.5.0</p> <code>treeCoulombN0</code> (Default = 500) <p>Maximum number of grid points contained within the treecode leaf clusters for the Coulomb potential energy. This  sets the depth of the hierarchical octtree.</p> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#solvation-box","title":"Solvation box","text":"<p>Info</p> <p>The non-periodic solvation box super-cell can be defined as variable or fixed in size. When a variable box size is used, the box size will be adjusted to maintain a minimum buffer distance between the atoms of the solute and the box boundary. This has the advantage of maintaining the smallest possible box size while adapting to change of solute shape and orientation. Alternatively, the box size can be specified at run-time. This box size will be used for the duration of the sander calculation. Solvent box dimensions have a strong effect on  the numerical precision of 3D-RISM. See \u00a77.2.3 for  recommendation on selecting an appropriate box size and resolution.</p>"},{"location":"input_file/#variable-box-size","title":"Variable box size","text":"<p>Keep in mind</p> <p>It is recommended to avoid specifying a large, prime number of processes (\u2265 7) when using a variable solvation  box size.</p> <code>buffer</code> (Default = 14) <p>Minimum distance (in \u00c5) between solute and edge of solvation box. Specify this with <code>grdspc</code> below. Mutually  exclusive with <code>ng</code> and <code>solvbox</code>. See \u00a77.2.3 for details on  how this affects numerical accuracy and how this interacts with <code>ljTolerance</code>, and <code>tolerance</code></p> <ul> <li>when &lt; 0: Use fixed box size (see <code>ng</code> and <code>solvbox</code> below)</li> <li>when &gt;= 0: Use <code>buffer</code> distance</li> </ul> <code>grdspc</code>(Default = 0.5,0.5,0.5) Grid spacing (in \u00c5) of the solvation box. Specify this with <code>buffer</code> above. Mutually exclusive with <code>ng</code> and  <code>solvbox</code>."},{"location":"input_file/#fixed-box-size","title":"Fixed box size","text":"<code>ng</code> (Default = -1,-1,-1) <p>Comma separated number of grid points to use in the x, y, and z directions. Used only if buffer &lt; 0. Mutually  exclusive with <code>buffer</code> and <code>grdspc</code> above, and paired with <code>solvbox</code> below.</p> <p>Warning</p> <p>No default, this must be set if buffer &lt; 0. As a general requirement, the number of grids points in each  dimension must be divisible by two, and the number of grid points in the z-axis must be divisible by the  number of processes.</p> <p>As an example: define like <code>ng=1000,1000,1000</code>, where all numbers are divisible by two  and you can use 1, 2, 4, 5, 8, 10... pocessors, all divisors of 1000 (value in the z-axis).</p> <p>Take into account that at a certain level, running RISM in  parallel may actually hurt performance, since previous solutions are used  as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also,  due to the overhead involved in which each thread is required to load every topology file when calculating  energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames. </p> <code>solvbox</code> (Default = -1,-1,-1) <p>Sets the size in \u00c5 of the fixed size solvation box. Used only if <code>buffer</code> &lt; 0. Mutually exclusive with <code>buffer</code>  and <code>grdspc</code> above, and paired with <code>ng</code> above. </p> <p>Warning</p> <p>No default, this must be set if buffer &lt; 0. Define like <code>solvbox=20,20,20</code></p> <code>solvcut</code>  (Default = 14) Cutoff used for solute-solvent interactions. The default value is that of buffer. Therefore, if you set <code>buffer</code> &lt;  0 and specify <code>ng</code> and <code>solvbox</code> instead, you must set <code>solvcut</code> to a nonzero value; otherwise the program will quit in  error."},{"location":"input_file/#solution-convergence","title":"Solution convergence","text":"<code>tolerance</code> (Default = 0.00001) <p>A comma-separated list of maximum residual values for solution convergence. This has a strong effect on the  cost of 3D-RISM calculations (smaller value for tolerance -&gt; more computation). When used in combination with a list  of closures it is possible to define different tolerances for each of the closures. This can be useful for difficult  to converge calculations (see \u00a77.4.1). For the sake of  efficiency, it is best to use as high a tolerance as possible for all but the last closure.  See \u00a77.2.3 for details on how this affects numerical  accuracy and how this interacts with <code>ljTolerance</code>, <code>buffer</code>, and <code>solvbox</code>. Three formats of list are possible:</p> <ul> <li>one tolerance: All closures but the last use a tolerance of 1. The last tolerance in the list is used by the last closure. In practice this is the most efficient.</li> <li>two tolerances: All closures but the last use the first tolerance in the list. The last tolerance in the list is used by the last closure.</li> <li>n tolerances: Tolerances from the list are assigned to the closure list in order.</li> </ul> <p>Examples</p> v1.5.2&lt;v1.5.2 One closure/One toleranceSeveral closures/One toleranceSeveral closures/Two tolerancesSeveral closures/Several tolerances <pre><code>closure=\"pse3\", tolerance=0.00001\n</code></pre> <p>A tolerance of 0.00001 will be used for clousure \"pse3\"</p> <pre><code> closure=\"kh\",\"pse3\", tolerance=0.00001\n</code></pre> <p>A tolerance of 1 will be used for clousure \"kh\", while 0.00001 will be used for clousure \"pse3\".  Equivalent to <code>closure=\"kh\", \"pse3\", tolerance=1,0.00001</code></p> <pre><code> closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.01,0.00001\n</code></pre> <p>A tolerance of 0.01 will be used for clousures \"kh\" and \"pse2\", while 0.00001 will be used for clousure  \"pse3\". Equivalent to <code>closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.01,0.01,0.00001</code></p> <pre><code> closure=\"kh\",\"pse2\",\"pse3\", tolerance=0.1,0.01,0.00001\n</code></pre> <p>A tolerance of 0.1 will be used for clousure \"kh\", 0.01 will be used for clousure \"pse2\", while 0.00001  will be used for clousure \"pse3\".</p> One closure/One toleranceSeveral closures/One toleranceSeveral closures/Two tolerancesSeveral closures/Several tolerances <pre><code>closure=\"pse3\", tolerance=0.00001\n</code></pre> <p>A tolerance of 0.00001 will be used for clousure \"pse3\"</p> <pre><code> closure=\"kh,pse3\", tolerance=0.00001\n</code></pre> <p>A tolerance of 1 will be used for clousure \"kh\", while 0.00001 will be used for clousure \"pse3\".  Equivalent to <code>closure=\"kh, pse3\", tolerance=1,0.00001</code></p> <pre><code> closure=\"kh,pse2,pse3\", tolerance=0.01,0.00001\n</code></pre> <p>A tolerance of 0.01 will be used for clousures \"kh\" and \"pse2\", while 0.00001 will be used for clousure  \"pse3\". Equivalent to <code>closure=\"kh,pse2,pse3\", tolerance=0.01,0.01,0.00001</code></p> <pre><code> closure=\"kh,pse2,pse3\", tolerance=0.1,0.01,0.00001\n</code></pre> <p>A tolerance of 0.1 will be used for clousure \"kh\", 0.01 will be used for clousure \"pse2\", while 0.00001  will be used for clousure \"pse3\".</p> <code>ljTolerance</code> (Default = -1) <p>Lennard-Jones accuracy (Optional.) Determines the Lennard-Jones cutoff distance based on the desired accuracy of  the calculation. See \u00a77.2.3 for details on how this affects  numerical accuracy and how this interacts with <code>tolerance</code>, <code>buffer</code>, and <code>solvbox</code>.</p> <p>Implemented in v1.5.0</p> <code>asympKSpaceTolerance</code> (Default = -1) <p>Tolerance reciprocal space long range asymptotics accuracy (Optional.) Determines the reciprocal space long  range asymptotic cutoff distance based on the desired accuracy of the calculation.  See \u00a77.2.3 for details on how this affects numerical  accuracy. Possible values are:</p> <ul> <li>when &lt; 0: asympKSpaceTolerance = tolerance/10</li> <li>when = 0: no cutoff</li> <li>when &gt; 0: given value determines the maximum error in the reciprocal-space long range asymptotics calculations</li> </ul> <p>Implemented in v1.5.0</p> <code>mdiis_del</code> (Default = 0.7) <p>MDIIS step size.</p> <p>Implemented in v1.5.0</p> <code>mdiis_nvec</code> (Default = 5) <p>Number of previous iterations MDIIS uses to predict a new solution.</p> <p>Implemented in v1.5.0</p> <code>mdiis_restart</code> (Default = 10) <p>If the current residual is mdiis_restart times larger than the smallest residual in memory, then the MDIIS  procedure is restarted using the lowest residual solution stored in memory. Increasing this number can sometimes  help convergence.</p> <p>Implemented in v1.5.0</p> <code>maxstep</code> (Default = 10000) <p>Maximum number of iterations allowed to converge on a solution.</p> <p>Implemented in v1.5.0</p> <code>npropagate</code> (Default = 5) <p>Number of previous solutions propagated forward to create an initial guess for this solute atom configuration.</p> <ul> <li>=0: Do not use any previous solutions</li> <li>= 1..5: Values greater than 0 but less than 4 or 5 will use less system memory but may introduce artifacts to  the solution (e.g., energy drift).</li> </ul> <p>Implemented in v1.5.0</p>"},{"location":"input_file/#output","title":"Output","text":"<code>polardecomp</code> (Default = 0) <p>Decomposes solvation free energy into polar and non-polar components. Note that this typically requires 80% more  computation time.</p> <ul> <li>0: Don\u2019t decompose solvation free energy into polar and non-polar components. </li> <li>1: Decompose solvation free energy into polar and non-polar components.</li> </ul> <code>entropicdecomp</code> (Default = 0) <p>Decomposes solvation free energy into energy and entropy components. Also performs temperature derivatives of other  calculated quantities. Note that this typically requires 80% more computation time and requires a <code>.xvv</code> file version  1.000 or higher (available within <code>GMXMMPBSA</code> data folder).  See \u00a77.1.3 and  \u00a77.3</p> <ul> <li>0: No entropic decomposition</li> <li>1: Entropic decomposition</li> </ul> <code>rism_verbose</code> (Default = 0) <p>Level of output in temporary RISM output files. May be helpful for debugging or following convergence. </p> <ul> <li>0: just print the final result</li> <li>1: additionally prints the total number of iterations for each solution</li> <li>2: additionally prints the residual for each iteration and details of the MDIIS solver (useful for debugging  and convergence analyses)</li> </ul>"},{"location":"input_file/#alanine_scanning-namelist-variables","title":"<code>&amp;alanine_scanning</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default alanine scanning input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input ala\n</code></pre> </li> <li> <p>A sample alanine scanning input file is shown here</p> </li> <li>A tutorial on alanine scanning is available here</li> </ul> <code>mutant_res</code> (Default = None. Must be defined) <p>Define the specific residue that is going to be mutated. Use the following format CHAIN/RESNUM (e.g.: 'A/350') or  CHAIN/RESNUM:INSERTION_CODE if applicable (e.g.: \"A/27:B\").</p> <p>Important</p> <ul> <li>Only one residue can be mutated per calculation!</li> <li>We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in  the defined structure or topology </li> <li>Wehn this varibale is defined, <code>gmx_MMPBSA</code> performs the mutation. This way the user does not have to  provide the mutant topology</li> </ul> <p>Changed in v1.4.0: Allows mutation in antibodies since it support insertion code notation</p> <code>mutant</code> (Default = \"ALA\") <p>Defines the residue that it is going to be mutated for. Allowed values are: </p> <ul> <li><code>\"ALA\"</code> or <code>\"A\"</code>: Alanine scanning</li> <li><code>\"GLY\"</code> or <code>\"G\"</code>: Glycine scanning</li> </ul> <p>Changed in v1.3.0: Change mol (receptor or ligand) by mutant aminoacid (ALA or GLY)</p> <code>mutant_only</code>  (Default = 0) <p>Option to perform specified calculations only for the mutants. </p> <ul> <li>0: Perform calcultion on mutant and original</li> <li>1: Perform calcultion on mutant only</li> </ul> <p>Note</p> <p>Note that all calculation details are controlled in the other namelists, though for alanine scanning to be  performed, the namelist must be included (blank if desired)</p> <code>cas_intdiel</code> (Default = 0) <p>The dielectric constant (<code>intdiel</code>(GB)/<code>indi</code>(PB)) will be modified depending on the nature of the residue to be  mutated. </p> <ul> <li>0: Don\u2019t</li> <li>1: Adaptative <code>intdiel</code> assignation</li> </ul> <p>Important</p> <ul> <li>Works with the GB and PB calculations</li> <li>It is ignored when <code>intdiel</code>(GB)/<code>indi</code>(PB) has been explicitly defined, that is, it is ignored if  <code>intdiel != 1.0</code>/<code>indi != 1.0</code> (default values)</li> <li>Dielectric constant values has been assigned according to Yan et al., 2017</li> </ul> <p>Implemented in v1.4.2</p> <code>intdiel_nonpolar</code> (Default = 1) <p>Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for non-polar residues (<code>PHE</code>, <code>TRP</code>, <code>VAL</code>, <code>ILE</code>, <code>LEU</code>, <code>MET</code>, <code>PRO</code>, <code>CYX</code>, <code>ALA</code>, <code>GLY</code>, <code>PRO</code>)</p> <p>Implemented in v1.4.2</p> <code>intdiel_polar</code> (Default = 3) <p>Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for polar residues (<code>TYR</code>, <code>SER</code>, <code>THR</code>, <code>CYM</code>, <code>CYS</code>, <code>HIE</code>, <code>HID</code>,  <code>ASN</code>, <code>GLN</code>, <code>ASH</code>, <code>GLH</code>, <code>LYN</code>)</p> <p>Implemented in v1.4.2</p> <code>intdiel_positive</code> (Default = 5) <p>Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for positive charged residues (<code>LYS</code>, <code>ARG</code>, <code>HIP</code>)</p> <p>Implemented in v1.4.2</p> <code>intdiel_negative</code> (Default = 5) <p>Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for negative charged residues (<code>GLU</code>, <code>ASP</code>)</p> <p>Implemented in v1.4.2</p>"},{"location":"input_file/#decomp-namelist-variables","title":"<code>&amp;decomp</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default decomp input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input decomp\n</code></pre> </li> <li> <p>A sample decomp input file is shown here</p> </li> <li>A tutorial on binding free energy decomposition is available here</li> </ul> <code>idecomp</code> <p>Energy decomposition scheme to use:</p> <ul> <li>1: Per-residue decomp with 1-4 terms added to internal potential terms</li> <li>2: Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms</li> <li>3: Pairwise decomp with 1-4 terms added to internal potential terms</li> <li>4: Pairwise decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms</li> </ul> <p>Warning</p> <ul> <li>No default. This must be specified!</li> </ul> <code>dec_verbose</code> (Default = 0) <p>Set the level of output to print in the decomp_output file.</p> <ul> <li>0: DELTA energy, total contribution only</li> <li>1: DELTA energy, total, sidechain, and backbone contributions</li> <li>2: Complex, Receptor, Ligand, and DELTA energies, total contribution only</li> <li>3: Complex, Receptor, Ligand, and DELTA energies, total, sidechain, and backbone contributions</li> </ul> <p>Note</p> <p>If the values 0 or 2 are chosen, only the Total contributions are required, so only those will be printed to the mdout files to cut down on the size of the mdout files and the time required to parse them.</p> <code>print_res</code> (Default = \"within 6\") <p>Select residues whose information is going to be printed in the output file. The default selection should be  sufficient in most cases, however we have added several additional notations</p> <p>Selection schemes</p> By Distance (recommended)Amino acid selectionAll Notation: [ <code>within</code> <code>distance</code> ] <code>within</code> corresponds to the keyword and <code>distance</code> to the maximum distance criterion in \u00c5 necessary to  select the residues from both the receptor and the ligand. In case the cutoff used is so small that  the number of decomp residues to print &lt; 2, the cutoff value will be increased by 0.1 until the  number of decomp residues to print &gt;= 2. <p>Example</p> <p><code>print_res=\"within 6\"</code> Will print all residues within 6 \u00c5 between receptor and  ligand including both.</p> Notation: [ <code>CHAIN</code>/(<code>RESNUM</code> or <code>RESNUM-RESNUM</code>) ] Print residues individual or ranges. This notation also supports insertion codes, in which case you must  define them individually <p>Example</p> <p><code>print_res=\"A/1,3-10,15,100 B/25\"</code> This will print Chain A residues 1, 3 through 10, 15, and 100 along with  chain B residue 25 from the complex topology file and the corresponding residues in either the ligand and/or  receptor topology files.</p> <p>Danger</p> <p>make sure to include at least one residue from both the receptor and ligand in the <code>print_res</code> mask of  the <code>&amp;decomp</code> section. Check http://archive.ambermd.org/201308/0075.html</p> <p>Suppost that we can have the following sequence where chain A is the receptor and B is the ligand:  A:LEU:5, A:GLY:6:A, A:THR:6:B, A:SER:6:C A:ASP:6D, A:ILE:7 , B:25</p> Supported notationWrong notation Ranges selection <code>print_res=\"A/5-7 B/25</code> Will print all mentioned residues because all residues with insertion code are  contained in the range Individual selection <code>print_res=\"A/5,6B,6C,7 B/25</code> Will print all mentioned residues except the residues 6A and  6D from chain A <p><code>print_res=\"A/5-6B,6D-7</code> Will end in error.</p> Notation: <code>all</code> will print all residues. This option is often not recommended since most residues contribution is zero and  it is just going to be a waste of time and computational resources. <p>Danger</p> <p>Using <code>idecomp=3 or 4</code> (pairwise) with a very large number of printed residues and a large number of frames  can quickly create very, very large temporary mdout files. Large print selections also demand a large amount  of memory to parse the mdout files and write decomposition output file (~500 MB for just 250 residues, since  that\u2019s 62500 pairs!) It is not unusual for the output file to take a significant amount of time to print if  you have a lot of data. This is most applicable to pairwise decomp, since the amount of data scales as O(N<sup>2</sup>).</p> <p>Important</p> <p>We recommend using the reference structure (-cr) to ensure the perfect match between the selected residue in  the defined structure or topology </p> <p>Changed in v1.4.0: Improve residue selection</p> <code>csv_format</code>  (Default = 1) <p>Print the decomposition output in a Comma-Separated-Values (CSV) file. CSV files open natively in most spreadsheets. </p> <ul> <li>0: data to be written out in the standard ASCII format.</li> <li>1: data to be written out in a CSV file, and standard error of the mean will be calculated and included for all  data.</li> </ul>"},{"location":"input_file/#nmode-namelist-variables","title":"<code>&amp;nmode</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default nmode input file can be created as follows:</p> <pre><code>gmx_MMPBSA --create_input nmode\n</code></pre> </li> <li> <p>A sample nmode input file is shown here</p> </li> <li>A tutorial on normal mode analysis is available here</li> </ul>"},{"location":"input_file/#basic-input-options_4","title":"Basic input options","text":"<code>nmstartframe</code><sup>2</sup> Frame number to begin performing <code>nmode</code> calculations on  <code>nmendframe</code><sup>2</sup> (Default = 1000000) Frame number to stop performing <code>nmode</code> calculations on  <code>nminterval</code><sup>2</sup> (Default = 1) Offset from which to choose frames to perform <code>nmode</code> calculations on"},{"location":"input_file/#parameter-options_1","title":"Parameter options","text":"<code>nmode_igb</code> (Default = 1) <p>Value for Generalized Born model to be used in calculations. Options are:</p> <ul> <li>0: Vacuum</li> <li>1: HCT GB model </li> </ul> <code>nmode_istrng</code> (Default = 0.0) Ionic strength to use in <code>nmode</code> calculations. Units are Molarity (M). Non-zero values are ignored if <code>nmode_igb</code> is 0 above. <code>dielc</code> (Default = 1.0) Distance-dependent dielectric constant  <code>drms</code> (Default = 0.001) Convergence criteria for minimized energy gradient. <code>maxcyc</code> (Default = 10000) Maximum number of minimization cycles to use per snapshot in sander."},{"location":"input_file/#sample-input-files","title":"Sample input files","text":"<p>Tip</p> <p>You can refer to the examples to understand the input file in a practical way.</p>"},{"location":"input_file/#gb","title":"GB","text":"<pre><code>Sample input file for GB calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\nstartframe=5, endframe=100, interval=5, verbose=2, \nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\n/\n\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre>"},{"location":"input_file/#gbnsr6","title":"GBNSR6","text":"<pre><code>Sample input file for GBNSR6 calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\nstartframe=5, endframe=100, interval=5, verbose=2, \nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\n/\n\n&amp;gbnsr6\nepsin=1.0, istrng=0.150,\n/\n</code></pre>"},{"location":"input_file/#qmmmgbsa","title":"QM/MMGBSA","text":"<pre><code>Sample input file for QM/MMGBSA\n\n&amp;general\nstartframe=5, endframe=100, interval=5,\n/\n\n&amp;gb\nigb=5, saltcon=0.100, ifqnt=1,\nqm_residues=\"A/240-251 B/297\", qm_theory=\"PM3\"\n/\n</code></pre>"},{"location":"input_file/#pb","title":"PB","text":"<pre><code>Sample input file for PB calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\nstartframe=5, endframe=100, interval=5,\nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\n/\n\n&amp;pb\nistrng=0.15, fillratio=4.0\n/\n</code></pre>"},{"location":"input_file/#mmpbsa-with-membrane-proteins","title":"MMPBSA with membrane proteins","text":"<pre><code>Sample input file for MMPBSA with membrane proteins\n\n&amp;general\nstartframe=1, endframe=100, interval=1,\n/\n\n&amp;pb\nmemopt=1, emem=7.0, indi=4.0,\nmctrdz=-10.383, mthick=36.086, poretype=1,\nradiopt=0, indi=4.0, istrng=0.150, fillratio=1.25, inp=2,\nsasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000,\neneopt=1, cutfd=7.0, cutnb=99.0,\nmaxarcdot=15000,\nnpbverb=1,\n/\n</code></pre>"},{"location":"input_file/#mm3d-rism","title":"MM/3D-RISM","text":"<pre><code>Sample input file for 3D-RISM\n\n&amp;general\nstartframe=20, endframe=100, interval=5,\n/\n\n&amp;rism\npolardecomp=1, thermo=\"gf\"\n/\n</code></pre>"},{"location":"input_file/#alanine-scanning","title":"Alanine scanning","text":"<pre><code>Sample input file for Alanine scanning\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\nforcefields=\"oldff/leaprc.ff99SB\", PBRadii=4\n/\n\n&amp;gb\nigb=8, saltcon=0.150, intdiel=10\n/\n\n&amp;alanine_scanning\nmutant='ALA', mutant_res='B:12'\n/\n</code></pre>"},{"location":"input_file/#decomposition-analysis","title":"Decomposition analysis","text":"<pre><code>Sample input file for decomposition analysis\nMake sure to include at least one residue from both the receptor\nand ligand in the print_res mask of the &amp;decomp section.\nhttp://archive.ambermd.org/201308/0075.html. This is automally\nguaranteed when using \"within\" keyword.\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\n/\n\n&amp;gb\nigb=5, saltcon=0.150,\n/\n\n&amp;decomp\nidecomp=2, dec_verbose=3,\n# This will print all residues that are less than 4 \u00c5 between\n# the receptor and the ligand\nprint_res=\"within 4\"\n/\n</code></pre>"},{"location":"input_file/#entropy-with-nmode","title":"Entropy with NMODE","text":"<pre><code>Sample input file for entropy calculations\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\ntemperature=298\n/\n\n&amp;gb\nigb=2, saltcon=0.150,\n/\n\n&amp;nmode\nnmstartframe=10, nmendframe=21, nminterval=2,\nmaxcyc=50000, drms=0.0001,\n/\n</code></pre>"},{"location":"input_file/#interaction-entropy","title":"Interaction Entropy","text":"<pre><code>Sample input file for entropy calculations\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\n# Interaction Entropy (IE)\n# (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation\nforcefields=\"oldff/leaprc.ff99SB\", interaction_entropy=1, ie_segment=25,\ntemperature=298\n/\n\n&amp;gb\nigb=2, saltcon=0.150,\n/\n</code></pre> <p>Info</p> <p>Comments are allowed by placing a # at the beginning of the line (whites-space are ignored). Variable  initialization may span multiple lines. In-line comments (i.e., putting a # for a comment after a variable is  initialized in the same line) is not allowed and will result in an input error. Variable declarations must be  comma-delimited, though all whitespace is ignored. Finally, all lines between namelists are ignored, so comments can be added before each namelist without using #.</p> <ol> <li> <p>The chain ID is assigned according to two criteria: terminal amino acids and residue numbering. If     both criteria or residue numbering changes are present, we assign a new chain ID. If there are terminal      amino acids, but the numbering of the residue continues, we do not change the ID of the chain. \u21a9\u21a9</p> </li> <li> <p>These variables will choose a subset of the frames chosen from the variables in the <code>&amp;general</code> namelist. Thus,     the \"trajectory\" from which snapshots will be chosen for <code>nmode</code> calculations will be the collection of      snapshots upon which the other calculations were performed. \u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"introduction/","title":"Introduction","text":"<p>MM/PB(GB)SA method can be used for calculating binding free energies of non covalently bound complexes.</p> <p> </p> <p>Figure 1. Thermodynamic cycle for binding free energy calculations   </p> <p>The free binding energy for a complex can be estimated as follows:</p> <p>     \u2206\ud835\udc3a<sub>\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51</sub> = \u2329\ud835\udc3a<sub>\ud835\udc36\ud835\udc42\ud835\udc40</sub>\u232a\u2212\u2329\ud835\udc3a<sub>\ud835\udc45\ud835\udc38\ud835\udc36</sub>\u232a\u2212\u2329\ud835\udc3a<sub>\ud835\udc3f\ud835\udc3c\ud835\udc3a</sub>\u232a </p> <p>     (1) </p> <p>where each term to the right in the equation is given by:</p> <p> \u2329\ud835\udc3a<sub>\ud835\udc65</sub>\u232a = \u2329\ud835\udc38<sub>\ud835\udc40\ud835\udc40</sub>\u232a + \u2329\ud835\udc3a<sub>\ud835\udc60\ud835\udc5c\ud835\udc59</sub>\u232a \u2212 \u2329\ud835\udc47\ud835\udc46\u232a </p> <p>     (2) </p> <p>In turn, \u2206\ud835\udc3a<sub>\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51</sub> can also be represented as:</p> <p> \u2206\ud835\udc3a<sub>\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51</sub> = \u2206\ud835\udc3b \u2212 \ud835\udc47\u2206\ud835\udc46 </p> <p>     (3) </p> <p>where \u2206\ud835\udc3b corresponds to the enthalpy of binding and \u2212\ud835\udc47\u2206\ud835\udc46 to the conformational entropy after ligand binding. When the  entropic term is dismissed, the computed value is the effective free energy, which is usually sufficient for  comparing relative binding free energies of related ligands.</p> <p>The \u2206\ud835\udc3b can be decomposed into different terms:</p> <p> \u2206\ud835\udc3b = \u2206\ud835\udc38<sub>\ud835\udc40\ud835\udc40</sub> + \u2206\ud835\udc3a<sub>\ud835\udc60\ud835\udc5c\ud835\udc59</sub> </p> <p>     (4) </p> <p>where:</p> <p> \u2206\ud835\udc38<sub>\ud835\udc40\ud835\udc40</sub> = \u2206\ud835\udc38<sub>\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51</sub> + \u2206\ud835\udc38<sub>\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51</sub> = (\u2206\ud835\udc38<sub>\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51</sub> + \u2206\ud835\udc38<sub>\ud835\udc4e\ud835\udc5b\ud835\udc54\ud835\udc59\ud835\udc52</sub> + \u2206\ud835\udc38<sub>\ud835\udc51\ud835\udc56\u210e\ud835\udc52\ud835\udc51\ud835\udc5f\ud835\udc4e\ud835\udc59</sub>) + (\u2206\ud835\udc38<sub>\ud835\udc52\ud835\udc59\ud835\udc52</sub> + \u2206\ud835\udc38<sub>\ud835\udc63\ud835\udc51\ud835\udc4a</sub>) </p> <p>     (5) </p> <p>The gas phase free energy contributions (\u2206\ud835\udc38<sub>\ud835\udc40\ud835\udc40</sub>) are calculated by <code>sander</code> within the AmberTools package  according to the force field used in the MD simulation. </p> <p>The \u2206\ud835\udc3a<sub>\ud835\udc60\ud835\udc5c\ud835\udc59</sub> is given by:</p> <p> \u2206\ud835\udc3a<sub>\ud835\udc60\ud835\udc5c\ud835\udc59</sub> = \u2206\ud835\udc3a<sub>\ud835\udc5d\ud835\udc5c\ud835\udc59</sub> + \u2206\ud835\udc3a<sub>\ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59</sub> = \u2206\ud835\udc3a<sub>\ud835\udc43\ud835\udc35/\ud835\udc3a\ud835\udc35</sub> + \u2206\ud835\udc3a<sub>\ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59</sub> </p> <p>     (6) </p> <p>where:</p> <p> \u2206\ud835\udc3a<sub>\ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59\ud835\udc4e\ud835\udc5f</sub> = \ud835\udc41\ud835\udc43<sub>\ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41</sub> \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc41\ud835\udc43<sub>\ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47</sub> </p> <p>     (7) </p> <p>or,</p> <p> \u2206\ud835\udc3a<sub>\ud835\udc5b\ud835\udc5c\ud835\udc5b\u2212\ud835\udc5d\ud835\udc5c\ud835\udc59</sub> = \u2206\ud835\udc3a<sub>\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d</sub> + \u2206\ud835\udc3a<sub>\ud835\udc50\ud835\udc4e\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66</sub> = \u2206\ud835\udc3a<sub>\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d</sub> + (\ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c<sub>\ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41</sub> \u2217  \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c<sub>\ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47</sub>) </p> <p>     (8) </p> <p>In the above equations, \u2206\ud835\udc38<sub>\ud835\udc40\ud835\udc40</sub> corresponds to the molecular mechanical energy changes in the gas phase. \u2206\ud835\udc38<sub>\ud835\udc40\ud835\udc40</sub> includes \u2206\ud835\udc38<sub>\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51</sub>, also known as internal energy, and  \u2206\ud835\udc38<sub>\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51</sub>, corresponding to the van der Waals and electrostatic contributions. The solvation energy is  determined differently, depending on the method employed. In the 3D-RISM model, both components -polar and non-polar-  of the solvation energy are calculated. However, the PB and GB models estimate only the polar component of the  solvation. The non-polar component is usually assumed to be proportional to the molecule's total solvent accessible  surface area (SASA), with a proportionality constant derived from experimental solvation energies of small non-polar  molecules (eq. 7). Alternatively, a modern approach that separates non-polar solvation free energies into cavity and  dispersion terms can be used. In this approach, SASA is used to correlate the cavity term only, while a  surface-integration method is employed to compute the dispersion term (eq. 8).</p> <p>Furthermore, the entropic component is usually calculated by normal modes analysis (NMODE). The translational and rotational entropies can be estimated using standard statistical mechanical formulas. Nevertheless, calculating  vibrational entropy using normal modes is computationally expensive because it requires expanding the internal  coordinate covariance matrix for all degrees of freedom for a set of minimized structures. Conversely, the  Quasi-harmonic (QH) approximation is less computationally expensive, although it requires a considerable number of frames to converge. Recently, other alternatives have been developed, such as NMODE in truncated systems,  which considerably reduces the computational cost. Interaction Entropy (IE) is another novel method that  calculates the entropic component of the binding free energy directly from MD simulations without any extra  computational cost. This method is numerically reliable, more computationally efficient, and superior to the  standard NMODE approach, as shown in an extensive study of over a dozen randomly selected protein-ligand binding  systems.</p> <p>Typically, two approaches are used for MM/PB(GB)SA calculations, known as Single Trajectory Protocol (STP) and  Multiple Trajectory Protocol (MTP). In STP, both the receptor and the ligand trajectories are extracted  from that of the complex. This approach is valid when the bound and unbound states of the receptor, and the ligand  are similar. It is computationally less expensive than the MTP approach since only a simulation of the complex is  required. Additionally, the potential internal terms (e.g., bonds, angles, and dihedrals) cancel exactly in STP  since these terms are the same in both bound and unbound states. On the other hand, the MTP is a more realistic  approach because it considers multiple trajectories (i.e., complex, receptor, and ligand). However, significant  conformational changes can lead to numerous errors. In practice, a detailed study of the system is required to  select the approach to be used.</p>"},{"location":"introduction/#literature","title":"Literature","text":"<p>Further information can be found in Amber manual:</p> <ul> <li>MMPBSA.py</li> <li>The Generalized Born/Surface Area Model</li> <li>PBSA</li> <li>Reference Interaction Site Model</li> <li>Generalized Born (GB) for QM/MM calculations</li> </ul> <p>and the foundational papers:</p> <ul> <li>Srinivasan J. et al., 1998 </li> <li>Kollman P. A. et al., 2000 </li> <li>Gohlke H., Case D. A. 2004 </li> </ul> <p>as well as some reviews and expert opinions:</p> <ul> <li>Genheden S., Ryde U. 2015 </li> <li>Wang et. al., 2018 </li> <li>Wang et. al., 2019</li> <li>Tuccinardi, 2021</li> </ul>"},{"location":"output/","title":"Output Files","text":""},{"location":"output/#the-output-file","title":"The output file","text":"<p>This is how a typical output file (\"FINAL_RESULTS_MMPBSA.dat\" by default) looks like:</p> Output file<pre><code>| Run on Tue Feb  8 22:31:58 2022                                                     | # (1) \n|                                                                                     +       \n|gmx_MMPBSA Version=v1.4.3+462.gf64aa73 based on MMPBSA.py v.16.0                     | # (2) \n|Complex Structure file                                                  com.tpr      +       \n|Complex (AMBER) topology file                                        COM.prmtop      |       \n|Receptor (AMBER) topology file                                       REC.prmtop      | # (3) \n|Ligand Structure file                                               ligand.mol2      |       \n|Complex (AMBER) topology file                                        LIG.prmtop      |       \n|Initial trajectories                                             COM_traj_0.xtc      +       \n|                                                                                             \n|Receptor mask                   \":1-240\"                                             + # (4) \n|Ligand mask                     \":241\"                                               |       \n|Ligand residue name is          \"RAL\"                                                +       \n|                                                                                             \n|Calculations performed using 16 complex frames                                       + # (5) \n|C2 Entropy Std. Dev. and Conf. Interv. (95%) have been obtained by bootstrapping     |       \n|with number of re-samplings = 2000                                                   |       \n|                                                                                     |       \n|Generalized Born ESURF calculated using 'LCPO' surface areas                         |       \n|                                                                                     |       \n|Using temperature = 300.00 K)                                                        |       \n|All units are reported in kcal/mol.                                                  |       \n|                                                                                     |       \n|SD - Sample standard deviation, SEM - Sample standard error of the mean              |       \n|SD(Prop.), SEM(Prop.) - SD and SEM obtained with propagation of uncertainty formula  |       \n|https://en.wikipedia.org/wiki/Propagation_of_uncertainty#Example_formulae            +\n\n-------------------------------------------------------------------------------       +       \n-------------------------------------------------------------------------------       |        \nENTROPY RESULTS (C2 ENTROPY)                                                          |       \nModel           \u03c3(Int. Energy)    C2 Value         Std. Dev.   Conf. Interv. (95%)    | # (6) \n-------------------------------------------------------------------------------       |       \ngb                  3.308           9.176           2.086         4.601-12.477        |       \n-------------------------------------------------------------------------------       |       \n-------------------------------------------------------------------------------       +       \n\nGENERALIZED BORN:                                                                     | # (7)        \n\nComplex:                                                                              +              \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |              \n-------------------------------------------------------------------------------       |       \nBOND                    730.92         21.73      21.73         5.43       5.43       |       \nANGLE                  2022.96         27.54      27.54         6.89       6.89       |       \nDIHED                  2631.46         15.99      15.99         4.00       4.00       |       \nVDWAALS               -2035.53         14.81      14.81         3.70       3.70       |       \nEEL                  -16750.43         22.60      22.60         5.65       5.65       |       \n1-4 VDW                 911.73         15.17      15.17         3.79       3.79       | # (8) \n1-4 EEL               10292.96         23.03      23.03         5.76       5.76       |       \nEGB                   -3270.77         15.90      15.90         3.98       3.98       |       \nESURF                    96.07          0.58       0.58         0.15       0.15       |       \n                                                                                      |       \nGGAS                  -2195.93         54.56      33.37        13.64       8.34       |       \nGSOLV                 -3174.70         15.91      15.72         3.98       3.93       |       \n                                                                                      |       \nTOTAL                 -5370.63         56.84      31.88        14.21       7.97       + \n\n\nReceptor:                                                                             +              \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |              \n-------------------------------------------------------------------------------       |       \nBOND                    719.57         21.28      21.28         5.32       5.32       |       \nANGLE                  1996.26         27.60      27.60         6.90       6.90       |       \nDIHED                  2597.25         13.84      13.84         3.46       3.46       |       \nVDWAALS               -1972.61         13.52      13.52         3.38       3.38       |       \nEEL                  -16735.20         22.33      22.33         5.58       5.58       |       \n1-4 VDW                 895.00         14.81      14.81         3.70       3.70       | # (9) \n1-4 EEL               10339.15         23.01      23.01         5.75       5.75       |       \nEGB                   -3288.63         16.59      16.59         4.15       4.15       |       \nESURF                    99.77          0.61       0.61         0.15       0.15       |       \n                                                                                      |       \nGGAS                  -2160.58         53.26      35.11        13.31       8.78       |       \nGSOLV                 -3188.86         16.60      16.39         4.15       4.10       |       \n                                                                                      |       \nTOTAL                 -5349.43         55.78      32.13        13.95       8.03       +\n\n\nLigand:                                                                               +               \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |               \n-------------------------------------------------------------------------------       |       \nBOND                     11.35          1.94       1.94         0.48       0.48       |       \nANGLE                    26.70          2.68       2.68         0.67       0.67       |       \nDIHED                    34.21          3.59       3.59         0.90       0.90       |       \nVDWAALS                  -4.03          1.35       1.35         0.34       0.34       |       \nEEL                      15.90          0.96       0.96         0.24       0.24       |       \n1-4 VDW                  16.73          1.19       1.19         0.30       0.30       | # (10)\n1-4 EEL                 -46.19          0.94       0.94         0.24       0.24       |       \nEGB                     -23.14          0.63       0.63         0.16       0.16       |       \nESURF                     4.52          0.02       0.02         0.00       0.00       |       \n                                                                                      |       \nGGAS                     54.67          5.37       3.97         1.34       0.99       |       \nGSOLV                   -18.61          0.63       0.63         0.16       0.16       |       \n                                                                                      |       \nTOTAL                    36.05          5.41       4.16         1.35       1.04       +\n\n\nDelta (Complex - Receptor - Ligand):                                                  + # (11)        \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |       \n-------------------------------------------------------------------------------       |       \n\u0394BOND                     0.00          1.49       0.00         0.37       0.00       | # (12)\n\u0394ANGLE                    0.00          2.62       0.00         0.65       0.00       | # (13)\n\u0394DIHED                   -0.00          1.44       0.00         0.36       0.00       | # (14)\n\u0394VDWAALS                -58.89          0.06       2.31         0.01       0.58       | # (15)\n\u0394EEL                    -31.13          0.69       3.04         0.17       0.76       | # (16)\n\u03941-4 VDW                  0.00          0.83       0.00         0.21       0.00       | # (17)\n\u03941-4 EEL                 -0.00          0.92       0.00         0.23       0.00       | # (18)\n\u0394EGB                     40.99          0.05       1.41         0.01       0.35       | # (19)\n\u0394ESURF                   -8.22          0.01       0.09         0.00       0.02       | # (20)\n                                                                                      |       \n\u0394GGAS                   -90.02          0.69       3.31         0.17       0.83       | # (21)\n\u0394GSOLV                   32.77          0.06       1.37         0.01       0.34       | # (22)\n                                                                                      |       \n\u0394TOTAL                  -57.25          0.69       2.55         0.17       0.64       + # (23)\n-------------------------------------------------------------------------------       \n-------------------------------------------------------------------------------               \nUsing C2 Entropy Approximation:                                                       |        \n\u0394G binding =  -48.0704 +/-  2.1972                                                    | # (24)\n-------------------------------------------------------------------------------\n-------------------------------------------------------------------------------\n</code></pre> <ol> <li>Date of running</li> <li>gmx_MMPBSA version used</li> <li>Input files used</li> <li>Receptor and ligand masks</li> <li>General description of the methods used and units </li> <li>Entropy results in case any entropy approximation was used</li> <li>Model used (GB in this case)</li> <li>Energy components (complex)</li> <li>Energy components (receptor)</li> <li>Energy components (ligand)</li> <li>Energy components (delta)</li> <li>Bond potential term</li> <li>Angle potential term</li> <li>Dihedral potential term</li> <li>Van der Waals contribution</li> <li>Electrostatic contribution</li> <li>Van der Waals 1-4 contribution</li> <li>Electrostatic 1-4 contribution</li> <li>Polar contribution to the solvation free energy</li> <li>Non-polar contribution to the solvation free energy</li> <li>= \u0394BOND + \u0394ANGLE + \u0394DIHED + \u0394VDWAALS + \u0394EEL</li> <li>= \u0394EGB + \u0394ESURF</li> <li>= \u0394GGAS + \u0394GSOLV</li> <li>Binding free energy\u0394G binding = \u0394TOTAL - T\u0394S</li> </ol> <p>The header of the output file will contain information about the calculation. It will also show the names of all files  that were used in the calculation (topology files and coordinate file(s)). If the masks were not specified, it prints its best guess so that you can verify its accuracy, along with the residue name of the ligand (if it is only a single residue). After that, general information about methods, units, constants used is  included. Entropy results are shown next in case any entropy approximation was used. Next, the energy and entropy  contributions are broken up into their components as they are in <code>sander</code> and <code>nmode</code> or <code>cpptraj</code>. The contributions  are further broken for the complex, receptor and ligand into <code>GGAS</code> and <code>GSOLV</code>. <code>GGAS</code> is the interaction energy  and is obtained after sum the internal(bonded) components (<code>BOND</code> + <code>ANGLE</code> + <code>DIHED</code>) and the  non-bonded (<code>VDWAALS</code> + <code>EEL</code>) components. For <code>GSOLV</code>, the polar and non-polar contributions are <code>EGB</code> (or <code>EPB</code>)  and <code>ESURF</code> (or <code>ENPOLAR + EDISPER</code>), respectively for <code>GB</code> (or <code>PB</code>) calculations. A single trajectory protocol does  not produce any differences between bond lengths, angles, dihedrals or 1-4 interactions between the complex and  receptor/ligand structures. Thus, when subtracted they cancel completely. If not, these values are displayed and  inconsistency warnings are printed. When this occurs the results are generally useless. Of course this does not  hold for the multiple trajectory protocol as independent trajectories are used for the complex, receptor and ligand.  Two approaches are used when calculating the standard deviation, and the standard error of the mean. The <code>SD</code> and <code>SEM</code> values are calculated using a sample (array) of values. On the other hand, <code>SD(Prop.)</code> and <code>SEM(Prop.)</code> are  obtained with the  propagation of uncertainty formula for  f = A - B. Check this thread for more details on MM/PB(GB)SA  statistics.</p>"},{"location":"output/#temporary-files","title":"Temporary files","text":"<p>Warning</p> <p>This section does not record all the temporary files that are currently generated.</p> <p><code>gmx_MMPBSA</code> creates working files during the execution of the script beginning with the prefix <code>_GMXMMPBSA_</code>. If <code>gmx_MMPBSA</code> does not finish successfully, several of these files may be helpful in diagnosing the problem. For that reason, every temporary file is described below. Note that not every temporary file is generated in every simulation. At the end of each description, the lowest value of the original \u201ckeep_files\u201d variable that will retain this file will be shown in parentheses. Nevertheless, in the current version, all the files are retained for plotting purposes.</p> <p><code>gmx_MMPBSA.log</code> This file contains the output coming from <code>gmx_MMPBSA</code>.</p> <p><code>leap.log</code> This file contains the output coming from tleap program.</p> <p><code>_GMXMMPBSA_gb.mdin</code> Input file that controls the GB calculation done in sander. (2)</p> <p><code>_GMXMMPBSA_pb.mdin</code> Input file that controls the PB calculation done in sander. (2)</p> <p><code>_GMXMMPBSA_gb_decomp_com.mdin</code> Input file that controls the GB decomp calculation for the complex done in sander. (2)</p> <p><code>_GMXMMPBSA_gb_decomp_rec.mdin</code> Input file that controls the GB decomp calculation for the receptor done in sander. (2)</p> <p><code>_GMXMMPBSA_gb_decomp_lig.mdin</code> Input file that controls the GB decomp calculation for the ligand done in sander. (2)</p> <p><code>_GMXMMPBSA_pb_decomp_com.mdin</code> Input file that controls the PB decomp calculation for the complex done in sander. (2)</p> <p><code>_GMXMMPBSA_pb_decomp_rec.mdin</code> Input file that controls the PB decomp calculation for the receptor done in sander. (2)</p> <p><code>_GMXMMPBSA_pb_decomp_lig.mdin</code> Input file that controls the PB decomp calculation for the ligand done in sander. (2)</p> <p><code>_GMXMMPBSA_gb_qmmm_com.mdin</code> Input file that controls the GB QM/MM calculation for the complex done in sander. (2)</p> <p><code>_GMXMMPBSA_gb_qmmm_rec.mdin</code> Input file that controls the GB QM/MM calculation for the receptor done in sander. (2)</p> <p><code>_GMXMMPBSA_gb_qmmm_lig.mdin</code> Input file that controls the GB QM/MM calculation for the ligand done in sander. (2)</p> <p><code>_GMXMMPBSA_complex.mdcrd.#</code> Trajectory file(s) that contains only those complex snapshots that will be processed by MMPBSA.py. (1)</p> <p><code>_GMXMMPBSA_ligand.mdcrd.#</code> Trajectory file(s) that contains only those ligand snapshots that will be processed by MMPBSA.py. (1)</p> <p><code>_GMXMMPBSA_receptor.mdcrd.#</code> Trajectory file(s) that contains only those receptor snapshots that will be processed by MMPBSA.py. (1)</p> <p><code>_GMXMMPBSA_complex_nc.#</code> Same as _GMXMMPBSA_complex.mdcrd.#, except in the NetCDF format. (1)</p> <p><code>_GMXMMPBSA_receptor_nc.#</code> Same as _GMXMMPBSA_receptor.mdcrd.#, except in the NetCDF format. (1)</p> <p><code>_GMXMMPBSA_ligand_nc.#</code> Same as _GMXMMPBSA_ligand.mdcrd.#, except in the NetCDF format. (1)</p> <p><code>_GMXMMPBSA_dummycomplex.inpcrd</code> Dummy inpcrd file generated by _GMXMMPBSA_complexinpcrd.in for use with imin=5 functionality in sander. (1)</p> <p><code>_GMXMMPBSA_dummyreceptor.inpcrd</code> Same as above, but for the receptor. (1)</p> <p><code>_GMXMMPBSA_dummyligand.inpcrd</code> Same as above, but for the ligand. (1)</p> <p><code>_GMXMMPBSA_complex.pdb</code> Dummy PDB file of the complex required to set molecule up in nab programs</p> <p><code>_GMXMMPBSA_receptor.pdb</code> Dummy PDB file of the receptor required to set molecule up in nab programs</p> <p><code>_GMXMMPBSA_ligand.pdb</code> Dummy PDB file of the ligand required to set molecule up in nab programs</p> <p><code>_GMXMMPBSA_complex_nm.mdcrd.#</code> Trajectory file(s) for each thread with snapshots used for normal mode calcula- tions on the complex. (1)</p> <p><code>_GMXMMPBSA_receptor_nm.mdcrd.#</code> Trajectory file for each thread with snapshots used for normal mode calcula- tions on the receptor. (1)</p> <p><code>_GMXMMPBSA_ligand_nm.mdcrd.#</code> Trajectory file for each thread with snapshots used for normal mode calculations on the ligand. (1)</p> <p><code>_GMXMMPBSA_ptrajentropy.in</code> Input file that calculates the entropy via the quasi-harmonic approximation. This file is processed by ptraj. (2)</p> <p><code>_GMXMMPBSA_avgcomplex.pdb</code> PDB file containing the average positions of all complex conformations processed by</p> <p><code>_GMXMMPBSA_cenptraj.in.</code> It is used as the reference for the _GMXMMPBSA_ptrajentropy.in file above. (1)</p> <p><code>_GMXMMPBSA_complex_entropy.out</code> File into which the entropy results from _GMXMMPBSA_ptrajentropy.in analysis on the complex are dumped. (1)</p> <p><code>_GMXMMPBSA_receptor_entropy.out</code> Same as above, but for the receptor. (1)</p> <p><code>_GMXMMPBSA_ligand_entropy.out</code> Same as above, but for the ligand. (1)</p> <p><code>_GMXMMPBSA_ptraj_entropy.out</code> Output from running ptraj using _GMXMMPBSA_ptrajentropy.in. (1)</p> <p><code>_GMXMMPBSA_complex_gb.mdout.#</code> sander output file containing energy components of all complex snapshots done in GB. (1)</p> <p><code>_GMXMMPBSA_receptor_gb.mdout.#</code> sander output file containing energy components of all receptor snapshots done in GB. ( 1)</p> <p><code>_GMXMMPBSA_ligand_gb.mdout.#</code> sander output file containing energy components of all ligand snapshots done in GB. (1)</p> <p><code>_GMXMMPBSA_complex_pb.mdout.#</code> sander output file containing energy components of all complex snapshots done in PB. (1)</p> <p><code>_GMXMMPBSA_receptor_pb.mdout.#</code> sander output file containing energy components of all receptor snapshots done in PB. ( 1)</p> <p><code>_GMXMMPBSA_ligand_pb.mdout.#</code> sander output file containing energy components of all ligand snapshots done in PB. (1)</p> <p><code>_GMXMMPBSA_complex_rism.out.#</code> rism3d.snglpnt output file containing energy components of all complex snap- shots done with 3D-RISM (1)</p> <p><code>_GMXMMPBSA_receptor_rism.out.#</code> rism3d.snglpnt output file containing energy components of all receptor snap- shots done with 3D-RISM (1)</p> <p><code>_GMXMMPBSA_ligand_rism.out.#</code> rism3d.snglpnt output file containing energy components of all ligand snapshots done with 3D-RISM (1)</p> <p><code>_GMXMMPBSA_pbsanderoutput.junk.#</code> File containing the information dumped by sander.APBS to STDOUT. (1)</p> <p><code>_GMXMMPBSA_ligand_nm.out.#</code> Output file from mmpbsa_py_nabnmode that contains the entropy data for the ligand for all snapshots. (1)</p> <p><code>_GMXMMPBSA_receptor_nm.out.#</code> Output file from mmpbsa_py_nabnmode that contains the entropy data for the receptor for all snapshots. (1)</p> <p><code>_GMXMMPBSA_complex_nm.out.#</code> Output file from mmpbsa_py_nabnmode that contains the entropy data for the com- plex for all snapshots. (1)</p> <p><code>_GMXMMPBSA_mutant_...</code> These files are analogs of the files that only start with <code>_GMXMMPBSA_</code> described above, but instead refer to the mutant system of alanine scanning calculations.</p> <p><code>_GMXMMPBSA_*out.#</code> These files are thread-specific files. For serial simulations, only #=0 files are created. For parallel, #=0 through NUM_PROC - 1 are created.</p>"},{"location":"private_policy/","title":"Private Policy","text":"<p>Effective date: May 13, 2021</p> <p>Welcome to xBFreE Documentation. We believe in protecting the privacy of our users, and readers.</p>"},{"location":"private_policy/#the-short-version","title":"The short version","text":"<p>We use Google Analytics as a third party tracking service. We only collect the usage data (may include information  such as the pages of our Website that You visit, the time and date of Your visit, the time spent on those pages, unique  device identifiers and other diagnostic data) through Google Analytics which helps us evaluate our users\u2019 use of  xBFreE (or derivatives) Documentation. We do not share, sell, rent, or trade this information with third parties  for their commercial purposes; and we only use it as this Privacy Policy describes.</p>"},{"location":"private_policy/#our-services","title":"Our services","text":"<p>xBFreE Documentation is made up of:</p> <p>https://valdes-tresanco-ms.github.io/gmx_MMPBSA This is a website aimed at people that use xBFreE. This Privacy Policy applies to this site in full without  reservation.</p> <p>All use of xBFreE Documentation is subject to this Privacy Policy.</p>"},{"location":"private_policy/#what-information-xbfree-documentation-and-why","title":"What information xBFreE Documentation and why","text":"<p>We use Google Analytics as a third party tracking service, but we don\u2019t use it to track you individually or collect  your User Personal Information. We use Google Analytics to collect information about how our website performs and  how our users, in general, navigate through and use xBFreE Documentation. This helps us evaluate our users\u2019 use of  xBFreE Documentation; compile statistical reports on activity; and improve our content and website performance.</p> <p>Google Analytics gathers certain simple, non-personally identifying information over time, such as your IP address,  browser type, internet service provider, referring and exit pages, time stamp, and similar data about your use of  xBFreE Documentation.</p> <p>We will not allow any third party to, use the Google Analytics tool to track our users individually; collect any  User Personal Information other than IP address; or correlate your IP address with your identity. Google provides  further information about its own privacy practices and offers a browser add-on to opt out of Google Analytics tracking.</p>"},{"location":"private_policy/#why-do-we-collect-this","title":"Why do we collect this?","text":"<p>We collect this information to better understand how our website visitors use xBFreE Documentation, and to monitor  and protect the security of the website.</p>"},{"location":"private_policy/#what-information-xbfree-documentation-does-not-collect","title":"What information xBFreE Documentation does not collect","text":"<p>We do not intentionally collect sensitive personal information, such as social security numbers, genetic data,  health information, or religious information.</p>"},{"location":"private_policy/#how-we-share-the-information-we-collect","title":"How we share the information we collect","text":"<p>We do not share, sell, rent, or trade User Personal Information with third parties for their commercial purposes.</p>"},{"location":"private_policy/#contacting-us","title":"Contacting Us","text":"<p>If you have any questions about this Privacy Policy, You can contact us:</p> <p>By email: mariosergiovaldes145@gmail.com</p>"},{"location":"support/","title":"Support","text":""},{"location":"support/#report-an-issue-and-getting-help","title":"Report an issue and Getting help","text":"<p>You can review some answers to the questions that we consider most common here. If you find a bug or have any  question, please consider opening an issue or post in our Google group</p> <p></p>"},{"location":"support/#jetbrains","title":"Jetbrains","text":"<p>This project is possible thanks to the Open Source license of the JetBrains programs. </p>"},{"location":"support/#acknowledgment","title":"Acknowledgment","text":""},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#command-line","title":"Command-Line","text":"<ul> <li>xBFreE command-line for MMPBSA calculations</li> </ul>"},{"location":"tags/#mmgbsa","title":"MMGBSA","text":"<ul> <li>xBFreE command-line for MMPBSA calculations</li> </ul>"},{"location":"tags/#mmpbsa","title":"MMPBSA","text":"<ul> <li>xBFreE command-line for MMPBSA calculations</li> </ul>"},{"location":"versus/","title":"Comparison of xBFreE vs other programs","text":"<p>This comparison is based on the documentation of the different programs</p>"},{"location":"versus/#mmpbgbsa-characteristics","title":"MMPB/GBSA characteristics","text":"<p>This comparison only include the MMPBSA functionality of xBFreE </p>"},{"location":"versus/#calculation-features","title":"Calculation features","text":"Feature xBFreE gmx_MMPBSA MMPBSA.py <sup>1</sup> g_mmpbsa CaFe Binding free energies PB and GB PB and GB PB and GB PB PB * PB models Linear and Non-Linear Linear and Non-Linear Linear and Non-Linear<sup>10</sup> pending pending * GB models 1, 2, 5, 7, 8 and NSR6 1, 2, 5, 7, 8 and NSR6 1, 2, 5, 7 and 8 Stability pending Alanine scanning <sup>2</sup> pending Entropy corrections <sup>3</sup> NMODE, QH, IE, and C2 NMODE, QH, IE, and C2 NMODE and QH pending Decomposition schemes Per-Residues and Per-Wise Per-Residues and Per-Wise Per-Residues and Per-Wise Per-Residues pending QM/MMGBSA pending MM/3D-RISM pending Support Membrane Protein pending Approximations ST and MT ST and MT ST and MT ST pending"},{"location":"versus/#technical-features","title":"Technical features","text":"Feature xBFreE gmx_MMPBSA MMPBSA.py <sup>1</sup> g_mmpbsa CaFE MD Program GROMACS, AMBER, NAMD, CHARMM GROMACS AMBER GROMACS NAMD * GROMACS Version 5.x and 20xx.x 4.x, 5.x and 20xx.x --- 4.x, 5.x and 2016+ <sup>6</sup> Dependencies AmberTools20/21 AmberTools20/21 <sup>9</sup> AmberTools20/21 APBS (1.2.x, 1.3.x or 1.4.x) Parallel computation Depends on APBS Steps for: * Calculation and Summary One One One Multiple * Analysis One One Multiple Multiple"},{"location":"versus/#analysis-features","title":"Analysis features","text":"Feature g_mmpbsa GMXPBSA 2.1 MMPBSA.py <sup>1</sup> gmx_MMPBSA API Analyzer Tool <sup>4</sup> * Multiple systems at same time * Correlation between systems * Per-residue energies to PDB * Interactive visualization ** 3D Molecular Visualization PyMOL ** Interactive Charts static image * Plotting tool internal tools API and graphics library <sup>5</sup> gmx_MMPBSA_ana * Energetic Terms charts \u0394G<sub>polar</sub>, \u0394G<sub>nonpolar</sub>, \u0394E<sub>MM</sub> and \u0394G<sub>bind</sub> All * Export data to CSV file ** Energy Summary ** Individual Energetic Terms <ol> <li> <p>MMPBSA.py is included in AMBER package\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Without documentation\u00a0\u21a9</p> </li> <li> <p>NMODE = Normal modes approximation, QH = Quasic-Harmony approximation, IE = Interaction Entropy approximation, and C2 = C2 Entropy\u00a0\u21a9</p> </li> <li> <p>We plan to extend gmx_MMPBSA compatibility to MMPBSA.py's results\u00a0\u21a9</p> </li> <li> <p>Currently there is a repository (AmberUtils) for analysing the results\u00a0\u21a9</p> </li> <li> <p>GROMACS 20xx.x is not officially supported. There is a Pull Request that offers a minimum compatibility  with versions higher than 2016.x one, but still with limitations\u00a0\u21a9</p> </li> <li> <p>It is not clear whether it does support GROMACS versions 20xx.x or not, but we assume that it does since  it is script-based\u00a0\u21a9</p> </li> <li> <p>It is not clear whether it does support APBS versions 3.x.x\u00a0\u21a9</p> </li> <li> <p>gmx_MMPBSA is compatible with AmberTools20, AmberTools21, and AmberTools22\u00a0\u21a9</p> </li> <li> <p>gmx_MMPBSA supports Linear and Non-Linear PB equations. MMPBSA.py on the other hand, requires the user to  modify manually the *.mdin input files\u00a0\u21a9</p> </li> </ol>"},{"location":"Q%26A/","title":"Help","text":"<p>Here you will find some of the most frequently asked questions and errors. Also, look at our  Google group or the issues section to find out about specific cases and others.</p> <p>If you still have doubts or cannot solve the problem, please consider opening an  issue or posting in our  Google group</p> <ul> <li>Installation</li> <li>OS issues </li> <li>Calculations</li> </ul>"},{"location":"Q%26A/OS_issues/","title":"Operative System compatibility issues","text":"<p>Here we describe a series of more frequent reported problems related mainly to compatibility issues and  supported OS and their possible solutions.</p> gmx_MMPBSA fail in macOS &lt; BigSur gmx_MMPBSA_ana fails in non-native Linux distribution (i.e., Windows Subsystem for Linux (WSL), Debian, Centos or HPC) Error with <code>qt.qpa.plugin</code> I get an error related to Qt plugins <p>If you get the following or similar error:</p> <pre><code>qt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.\n</code></pre>"},{"location":"Q%26A/OS_issues/#solution","title":"Solution:","text":"<p>We have only tested gmx_MMPBSA on macOS BigSur and it works fine. Since a problem related to a version lower  than BigSur was reported, we assume that it is not compatible. Please check this thread</p>"},{"location":"Q%26A/OS_issues/#solution_1","title":"Solution:","text":"I am using Windows Subsystem for Linux (WSL) The WSL has no graphics drivers, thus it is impossible to run native Linux graphics applications. Therefore,  there is currently no way to run gmx_MMPBSA_ana in such an environment. I am using Debian or Centos as OS Since Debian and Centos are Linux distributions for servers, their main focus is stability, which is why they  keep old versions of most libraries. In addition, its GUI is very basic, as it is generally not widely used.  <code>gmx_MMPBSA_ana</code> uses the latest PyQt5 version which requires updated graphics libraries. That is why we recommend  the use of more desktop-focused distributions such as Ubuntu, Linux Mint, Fedora, OpenSuse, Majaro, etc. I am running gmx_MMPBSA on HPC By default, HPCs have the GUI disabled, therefore any application that depends on the graphics libraries will  end in error. <code>gmx_MMPBSA</code> has the <code>-nogui</code> option to avoid this type of errors since it prevents <code>gmx_MMBSA_ana</code> from  being executed at the end of the calculations. Therefore, just add <code>-nogui</code> at the end of the command line and it should be good to go."},{"location":"Q%26A/OS_issues/#solution_2","title":"Solution:","text":"<p>A possible solution may be to reinstall these libraries</p> <pre><code>sudo apt install --reinstall libxcb-xinerama0\n</code></pre>"},{"location":"Q%26A/calculations/","title":"<code>gmx_MMPBSA</code> Calculations","text":"<p>Here we describe a series of frequent issues related to calculations and their possible solutions.</p> <p>Note</p> <p>Most of the errors noted here are the result of inconsistent input files. Please read the documentation and make  sure your files are consistent.</p> ValueError: could not convert string to float: '*************' <p>This error has two possible causes:</p> <ol> <li> <p>The structure defined in <code>-cs</code>, <code>-rs</code>, or <code>-ls</code> options is inconsistent, or the trajectory has not been fitted (remove PBC) properly. This is the most common error. Many times it is because the  system under study is longer than some edges of the box.</p> </li> <li> <p>You are trying to calculate the energetic contribution of a very large group. Technically, the energy  value should not exceed 7 digits, so if you get a value higher than this, this error will occur. Although  <code>gmx_MMPBSA</code> can handle very large systems, it cannot  determine certain energetic terms. This is a <code>sander</code> limitation when writing the output file.</p> </li> </ol> I get high values for the solvation energy when using PB model <p>When using PB model, inp=2 is used as default to calculate total non-polar solvation free energy, that  is, the total non-polar solvation free energy will be modeled as two terms: the cavity term and the dispersion  term. The dispersion term is computed with a surface-based integration method closely related to the PCM  solvent for quantum chemical programs. Under this framework, the cavity term is still computed as a term  linearly proportional to the molecular volume enclosed by SASA.</p> <p>Check this publication and see the drawbacks of modeling the total non-polar solvation free energy with  two terms, i.e., the cavity term and the dispersion term. Sometimes there are imbalances in the  cancellation of error between the two components and this can produce unrealistic non-polar energy values.</p> NMODE calculation finish in error <p>The only error reported is probably related to RAM saturation. NMODE calculations require a considerable amount  of RAM depending on the number of atoms in your system. The amount of total RAM consumed during the calculation  will be: <code>RAM for 1 frame * number of threads</code> </p>"},{"location":"Q%26A/calculations/#possible-solutions","title":"Possible solutions:","text":"Check for structure consistency <p>Visualize the structure contained in the structure input file given in the <code>-cs</code>, <code>-rs</code>, or <code>-ls</code>  options and make sure it is consistent (as shown in Fig 1, right panel). On the other hand, if the  structure is \"broken\" (as shown in Fig 1, left panel) this could generate inconsistent results.</p> <p>Generate the structure from tpr file</p> <pre><code>gmx editconf -f md.tpr -o md.pdb\n</code></pre> <p> Figure 1. Vizualization of two different input structures files. Left: \"Broken\" structure; Right: Centered structure     </p> Make sure you have fitted the trajectory <p>Visualize the trajectory given in the <code>-ct</code>, <code>-rt</code>, or <code>-lt</code> options and make sure the PBC has been  removed (as shown in Fig 2, right panel). On the other hand, if the trajectory has not been fitted (as  shown in Fig 2, left panel) this could generate inconsistent results.</p> <p>Steps:</p> <ol> <li> <p>Generate a group that contains both molecules</p> <pre><code>gmx make_ndx -n index.ndx\n\n&gt;1 | 12\n\n&gt;q\n</code></pre> <p>Assuming 1 is the receptor and 12 is the ligand. This creates a new group (number 20 in this example)</p> </li> <li> <p>remove the PBC</p> <pre><code>gmx trjconv -s md.tpr -f md.xtc -o md_noPBC.xtc -pbc mol -center -n -ur compact\ncenter: 20 (created group)\noutput: 0\n</code></pre> </li> <li> <p>remove the rotation and translation with respect to the reference structure (optional)</p> <pre><code>gmx trjconv -s md.tpr -f md_noPBC.xtc -o md_fit.xtc -n -fit rot+trans\nfit: 20 (created group)\noutput: 0\n</code></pre> </li> <li> <p>Visualization</p> <p>Make sure that the trajectory is consistent (as shown in Fig 2, right panel)</p> </li> <li> <p>If the process is not succesful, consider using other options like <code>-pbc nojump</code> (as suggested here)</p> </li> </ol> <p> Figure 2. Vizualization of two different input trajectory files. Left: Trajectory with PBC;  Right: Trajectory centered, fitted and with PBC removed.    </p>"},{"location":"Q%26A/calculations/#possible-solutions_1","title":"Possible solutions:","text":"The error could be solved by recompiling <code>sander</code> with some modifications in the output function.  However, this is not recommended since the error can be large. Another possible solution could be modifying  the parameters of the calculation (solvent model, internal dielectric constant) or just performing the  calculation for a part of the system (sub-system)."},{"location":"Q%26A/calculations/#possible-solutions_2","title":"Possible solutions:","text":"<p>You may want to try inp=1 and avoid the EDISPER contribution. This way, the total non-polar solvation  free energy will be modeled as a single term linearly proportional to the solvent-accessible surface area. Just  add <code>inp=1</code> in the <code>&amp;pb</code> namelist variables in the input file. See example below:</p> <pre><code>&amp;general\nstartframe=5, endframe=100, interval=5, verbose=2, \nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\n/\n&amp;pb\nistrng=0.15, fillratio=4.0, inp=1\n/\n</code></pre> <p>Another way to avoid the EDISPER contribution is by modifying the <code>_GMXMMPBSA_info</code> file. Changing the value of <code>INPUT['inp']</code> to 1 and run:</p> <pre><code>gmx_MMPBSA --rewrite-output\n</code></pre> <p>will avoid the calculation of the EDISPER contribution and report just the ENPOLAR contribution as a term  linearly proportional to the molecular volume enclosed by SASA. </p> <p>Info</p> <p>Note that these two approximations will yield different values for the non-polar component of the  solvation energy  (see here).  Use one or another depending on your interest.</p>"},{"location":"Q%26A/installation/","title":"Installation","text":"<p>Here we describe a series of more frequent reported problems related mainly to the installation process and their  possible solutions.</p> I don't find <code>amber.python</code> executable I get an error related to MPI when I try to install gmx_MMPBSA <p>If you get an error like this:    </p> <pre><code>error: Cannot compile MPI programs. Check your configuration!!!\n</code></pre> I don't find the gmx_MMPBSA executable When I run gmx_MMPBSA I get this error <code>ModuleNotFoundError: No module named 'parmed'</code>"},{"location":"Q%26A/installation/#solution","title":"Solution:","text":"<ol> <li>Make sure that you have installed <code>Ambertools20</code> and sourced the <code>amber.sh(zch)</code> file</li> <li>If you installed <code>Ambertools20</code> from conda, use that python executable</li> </ol>"},{"location":"Q%26A/installation/#solution_1","title":"Solution:","text":"<p>Please try installing/reinstalling the OpenMPI library like this:</p> <pre><code> sudo apt install openmpi-bin libopenmpi-dev openssh-client\n</code></pre> <p>or this way</p> <pre><code>sudo apt install --reinstall openmpi-bin libopenmpi-dev openssh-client\n</code></pre>"},{"location":"Q%26A/installation/#solution_2","title":"Solution:","text":"<ol> <li>Make sure that you have installed gmx_MMPBSA (See here)</li> <li>Check if the miniconda bin folder are in the PATH (See here)</li> <li>Check if the gmx_MMPBSA application has permission to run as a program</li> </ol>"},{"location":"Q%26A/installation/#solution_3","title":"Solution:","text":"<p>Please see this issue to see the solution</p>"},{"location":"examples/","title":"Examples","text":"<p>Here you can find a representation of almost all the types of calculations and analyses that you can perform  with <code>gmx_MMPBSA</code>. Although each example focuses on specific cases, you can use <code>gmx_MMPBSA</code> on systems that combine  a number of different components (i.e. metalloprotein-ligand complex, Protein-DNA-ligand, etc.). In addition,  several types of calculations (e.g. GB, Alanine scanning and Per-residue decomposition; PB, Interaction Entropy,  and Per-wise decomposition) can be also performed in the same run for a specific system.</p>"},{"location":"examples/#systems","title":"Systems","text":"<p>This is a representation of the systems that can be processed and analyzed with gmx_MMPBSA. Our program has a robust  method to process input structures. Even if your system is not represented here, still have a go, you won't  be disappointed! \ud83d\ude00</p> <ul> <li>Protein-protein<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>Protein-ligand<sup>1</sup><sup>2</sup> </li> <li>Protein-DNA<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>Protein-glycan<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>MMPBSA with membrane proteins<sup>1</sup><sup>2</sup> </li> <li>Metalloprotein-ligand<sup>1</sup><sup>2</sup></li> <li>Multicomponent system (Protein-DNA-RNA-Ions-Ligand)<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>COVID-19 related proteins<ul> <li>Info</li> <li>Main protease</li> <li>Papain-like protease</li> <li>S1-ACE2 complex</li> <li>S1 RBD with antibody</li> </ul> </li> </ul>"},{"location":"examples/#charmmff-support","title":"CHARMMff support","text":"<p>This section focuses more on how to work with systems prepared with CHARMM force fields. We only show few examples  for better clarity.</p> <ul> <li>Protein-ligand<sup>1</sup><sup>2</sup></li> <li>Protein-ligand complex embedded in membrane<sup>1</sup></li> <li>Protein-ligand with LPH atoms</li> </ul>"},{"location":"examples/#oplsff-support","title":"OPLSff support","text":"<p>This section focuses more on how to work with systems prepared with OPLS force fields. We only show few examples  for better clarity.</p> <ul> <li>Protein-protein</li> </ul>"},{"location":"examples/#analysis","title":"Analysis","text":"<p>This section focuses on the analysis that can be performed with gmx_MMPBSA. Although each example focuses on specific  cases, you can use gmx_MMPBSA to perform several types of calculations (e.g. GB, Alanine scanning and Per-residue  decomposition; PB, Interaction Entropy, and Per-residue decomposition) in the same run for a specific system.</p> <ul> <li>Single Trajectory Protocol<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>Multiple Trajectory Protocol<sup>1</sup></li> <li>Binding free energy calculations<ul> <li>Binding free energy calculation with GB</li> <li>Binding free energy calculation with GBNSR6</li> <li>Binding free energy calculation with linear PB (LPBE)</li> <li>Binding free energy calculation with NonLinear PB (non-LPBE) </li> <li>Binding free energy calculation with 3D-RISM model<sup>1</sup></li> </ul> </li> <li>Alanine scanning<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>Decomposition analysis<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>Entropy<ul> <li>Interaction Entropy calculations<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>NMODE Entropy calculations<sup>1</sup></li> <li>C2 Entropy calculations</li> </ul> </li> <li>Stability calculations<sup>1</sup><sup>2</sup><sup>3</sup></li> <li>QM/MMGBSA calculations</li> <li>Correlation</li> </ul>"},{"location":"examples/#support-for-psf_dcd-files","title":"Support for psf_dcd files","text":"<p>This section focuses on how to work with psf-dcd files. These files are used for several MD simulation  programs such as NAMD, OpenMM or GENESIS. We plan to add more examples in the near future.</p> <ul> <li>Protein-protein binding free energy calculations</li> <li>Protein-ligand binding free energy calculations</li> <li>Binding free energy calculations in multicomponent systems</li> </ul> <ol> <li> <p>It is part of the <code>All</code> set defined with <code>-t 0</code> in <code>gmx_MMPBSA_test</code> \u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>It is part of the <code>Minimal</code> set defined with <code>-t 1</code> in <code>gmx_MMPBSA_test</code> \u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>It is part of the <code>Fast</code> set defined with <code>-t 2</code> in <code>gmx_MMPBSA_test</code> \u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"examples/gmx_MMPBSA_test/","title":"gmx_MMPBSA_test","text":""},{"location":"examples/gmx_MMPBSA_test/#gmx_mmpbsa_test-command-line","title":"<code>gmx_MMPBSA_test</code> command-line","text":"<pre><code>$ gmx_MMPBSA_test -h\nusage: gmx_MMPBSA_test [-h] [-v] \n       [-t [{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18} [{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18} ...]]] \n       [-f FOLDER] [-r] [-ng] [-n NUM_PROCESSORS]\n\nThis program is part of gmx_MMPBSA and will allow you to run various gmx_MMPBSA examples easily.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n\nTest options:\n  -t [{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18} [{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18} ...]]\n                        The level the test is going to be run at. Multiple systems and analysis can be run at the same \n                        time.\n                              Nr. of Sys  \n                        * 0      16     All -- Run all examples (Can take a long time!!!)\n                        * 1      13     Minimal -- Does a minimal test with a set of systems and analyzes \n                                        that show that gmx_MMPBSA runs correctly. Only exclude 3drism, nmode\n                                        protein-ligand MT because take a long time or are redundant\n                        * 2       9     Fast -- Only the calculations that take a short time are run (Default)\n                        [Systems]:\n                             Slow Frames\n                        * 3    . | 10   Protein-Ligand (Single trajectory approximation)\n                        * 4    . | 10   Protein-Protein\n                        * 5    . | 10   Protein-DNA\n                        * 6    x |  4   Protein-Membrane\n                        * 7    . | 10   Protein-Glycan\n                        * 8    x |  4   Metalloprotein-Peptide\n                        * 9    . | 10   Protein-DNA-RNA-IONs-Ligand\n                        * 10   x |  4   Protein-Ligand (CHARMM force field)\n                        * 11   x |  4   Protein-ligand complex in membrane with CHARMMff \n                        [Analysis]:\n                             Slow Frames\n                        * 12   . | 10   Alanine Scanning\n                        * 13   . | 10   Stability calculation\n                        * 14   . | 10   Decomposition Analysis\n                        * 15   . | 16   Interaction Entropy approximation\n                        * 16   . | 10   Protein-Ligand (Multiple trajectory approximation)\n                        * 17   x |  4   Entropy calculation using Normal Mode approximation \n                        * 18   x |  4   Calculations using 3D-RISM approximation\n  -f FOLDER, --folder FOLDER\n                        Defines the folder to store all data\n  -r, --reuse           Defines the existing test forlder will be reuse\n  -ng, --nogui          No open gmx_MMPBSA_ana after all calculations finished\n  -n NUM_PROCESSORS, --num_processors NUM_PROCESSORS\n                        Defines the number of processor cores you want to use with MPI per calculation. If the number \n                        of frames is less than the number of cpus defined, the calculation will be performed with \n                        the number of processors = number of frames.\n\n\ngmx_MMPBSA is an effort to implement the GB/PB and others calculations in GROMACS. \nBased on MMPBSA.py (version 16.0) and AmberTools20\n</code></pre>"},{"location":"examples/gmx_MMPBSA_test/#running-gmx_mmpbsa_test","title":"Running gmx_MMPBSA_test","text":"<p>gmx_MMPBSA_test is designed to run a set of samples (all or minimal) or a specific example efficiently.  Additionally, gmx_MMPBSA_test can run in parallel, decreasing the execution time gmx_MMPBSA_test will download the  most recent version of the repository in the specified folder and will perform the calculations.</p> <p>Sets in gmx_MMPBSA_test</p> FastMinimalAllMultiple selectionSingle selection <pre><code>gmx_MMPBSA_test -f /home/user/Documents -n 10\n</code></pre> <p>Through this command-line, gmxMMPBSA_test will:</p> <ul> <li>Download gmx_MMPBSA repository content in <code>/home/user/Documents</code></li> <li>Works with <code>Fast</code> set of examples [-t 2 is the default]</li> <li>Perform the calculation on 9 examples sequentially, using 10 cpus each time</li> </ul> <pre><code>gmx_MMPBSA_test -f /home/user/Documents -n 10 -t 1\n</code></pre> <p>Through this command-line, gmxMMPBSA_test will:</p> <ul> <li>Download gmx_MMPBSA repository content in <code>/home/user/Documents</code></li> <li>Works with <code>Minimal</code> set of examples [-t 1]</li> <li>Perform the calculation on 13 examples sequentially, using 10 cpus each time</li> </ul> <pre><code>gmx_MMPBSA_test -f /home/user/Documents -t 0 -n 10\n</code></pre> <p>Through this command-line, gmxMMPBSA_test will:</p> <ul> <li>Download gmx_MMPBSA repository content in <code>/home/user/Documents</code></li> <li>Works with <code>All</code> set of examples</li> <li>Perform the calculation on 16 examples sequentially, using 10 cpus each time</li> </ul> <pre><code>gmx_MMPBSA_test -f /home/user/Documents -t 3 5 7\n</code></pre> <p>Through this command-line, gmxMMPBSA_test will:</p> <ul> <li>Download gmx_MMPBSA repository content in <code>/home/user/Documents</code></li> <li>Execute <code>3</code> [Protein-Ligand (Single Trajectory approach)], <code>5</code> [Protein-DNA], and <code>7</code> [Protein-Glycan]  examples</li> </ul> <pre><code>gmx_MMPBSA_test -f /home/user/Documents -t 3\n</code></pre> <p>Through this command-line, gmxMMPBSA_test will:</p> <ul> <li>Download gmx_MMPBSA repository content in <code>/home/user/Documents</code></li> <li>Execute <code>3</code> [Protein-Ligand (Single Trajectory approach)] example</li> </ul>"},{"location":"examples/3D-RISM/","title":"Protein-protein binding free energy calculations with MM/3D-RISM","text":"<p>Info</p> <p>This example can be found in the examples/3D-RISM directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/3D-RISM/#requirements","title":"Requirements","text":"<p>In its simplest version, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/3D-RISM/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 18\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for MM/3D-RISM<pre><code>Sample input file for MM/3D-RISM\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"3D-RISM\",\nstartframe=5,\nendframe=8,\n/\n&amp;rism\npolardecomp=0, tolerance=0.001, rism_verbose=2, closure=\"kh\"\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/3D-RISM/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case,  the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the  complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file  (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa. in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 4 frames  are going to be used when performing the MM/PB(GB)SA calculation with the 3D-RISM model using Kovalenko-Hirata  clousure with a 0.001. Note that we have increased the tolerance from 0.00001 (default) to 0.001 in order to reduce the  computation time.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please refer to the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Alanine_scanning/","title":"Alanine scanning","text":"<p>Info</p> <p>This example can be found in the examples/Alanine_scanning directory in the repository folder. If you didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Alanine_scanning/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Alanine_scanning/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -cr com.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -cr com.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 12\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for Alanine scanning<pre><code>Sample input file for Alanine scanning\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Alanine_Scanning\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\",\nPBRadii=4,\n/\n&amp;gb\nigb=8, saltcon=0.150,\n/\n&amp;alanine_scanning\nmutant='ALA', mutant_res='R:23', cas_intdiel=1\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Alanine_scanning/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand  amber format topologies and trajectories will be obtained from that of the complex. To do so, an  MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both  the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing  the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3  radii (<code>PBRadii=4</code>) will be used as recommended for GB-Neck2 solvation model. Also, The dielectric constant  (<code>intdiel</code>) will be modified depending on the nature of the residue to be mutated as <code>cas_intdiel=1</code>. In this case,  the residue <code>R/23</code> is a Tyrosine which means <code>intdiel = 3</code> will be used. Note also that we used a reference structure  to ensure that the selection process for the residue to be mutated is successful (see below).</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Alanine_scanning/#how-to-define-properly-which-residue-is-going-to-be-mutated","title":"How to define properly which residue is going to be mutated?","text":"<p>The generated PDB files must keep the original numbering, so selection based on residue number is reliable. However,  the chain id can vary depending on several factors. If you use the reference structure (<code>-cr</code> flag), then you don't  have to worry about any changes. The selection will be based on this structure.</p> <p>On the other hand, if this reference structure is omitted, then it will depend on:</p> <ul> <li> <p>GROMACS version</p> <p>We have noticed that in GROMACS <code>20xx.x</code> versions, <code>trjconv</code> can omit the chain IDs.</p> </li> <li> <p>The option assign_chainID</p> <p>This option defines when chain IDs are assigned. Please see this variable in  <code>&amp;general</code> namelist variables section</p> </li> </ul> <p>Tip</p> <p>In any of these cases, you must verify that the selection is correct. You can see the structure of the fixed  Complex structure (<code>_GMXMMPBSA_FIXED_COM.pdb</code>), Receptor (<code>_GMXMMPBSA_REC_Fx.pdb</code>), and ligand  (<code>_GMXMMPBSA_LIG_Fy.pdb</code>) respectively. x and y represent the fragment for discontinuous molecules</p>"},{"location":"examples/COVID-19_related_proteins/","title":"COVID-19 related proteins","text":"<p>Given its relevance, we have tested gmx_MMPBSA with multiple COVID-19 related systems. The ultimate goal is to provide  a useful tool for those researchers working on COVID-19 projects. The capability of gmx_MMPBSA to handle systems  that combine a number of characteristics (i.e. metalloprotein-ligand, Protein-protein, Membrane proteins, glycosylated  proteins etc.) constitutes a tremendous help for those researchers that use MD simulations and binding free energy  calculations in their projects. We plan to incorporate more systems as they arise in the literature and databases.</p> <p>All these systems haven been previously prepared in CHARMM-GUI, and they are available at the CHARMM-GUI Archive - COVID-19 Proteins Library.</p>"},{"location":"examples/COVID-19_related_proteins/#references","title":"References","text":"<p>S. Jo, T. Kim, V.G. Iyer, and W. Im (2008) CHARMM-GUI: A Web-based Graphical User Interface for CHARMM. J. Comput. Chem. 29:1859-1865</p> <p>H. Woo, S-J. Park, Y.K. Choi, T. Park, M. Tanveer, Y. Cao, N.R. Kern, J. Lee, M.S. Yeom, T.I. Croll, C. Seok, and W. Im (2020) Developing a Fully-glycosylated Full-length SARS-CoV-2 Spike Protein Model in a Viral Membrane. J. Phys. Chem. B. 124:7128\u20137137</p> <p>Y.K. Choi, Y. Cao, M. Frank, H. Woo, S-J. Park, M.S. Yeom, T.I. Croll, C. Seok, W. Im (2021) Structure, Dynamics, Receptor Binding, and Antibody Binding of Fully-glycosylated Full-length SARS-CoV-2 Spike Protein in a Viral Membrane. J. Chem. Theory Comput. (in press)</p>"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/","title":"SARS-CoV-2 Main Protease in complex with demethylated analog of masitinib","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and  CHARMM force field hasn't been tested extensively. Please, check this thread for more information and  proceed with caution.</p>"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#sars-cov-2-main-protease-in-complex-with-demethylated-analog-of-masitinib-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","title":"SARS-CoV-2 Main Protease in complex with demethylated analog of masitinib binding free energy calculations (Single Trajectory method) with CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/COVID-19_related_proteins/Main_protease_7l5d directory in the repository folder. If you didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA Github repository.</p>"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"SARS_CoV2_Main_protease\",\n/\n&amp;pb\n#radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation\nistrng=0.15, fillratio=4.0, radiopt=0, inp=1,\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/COVID-19_related_proteins/Main_protease_7l5d/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>1 13</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA  calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format  with all the terms for CHARMM force field.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/","title":"Papain-Like Protease of SARS CoV-2, C111S mutant, in complex with PLP_Snyder494 inhibitor","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and  CHARMM force field hasn't been tested extensively. Please, check this thread for more information and  proceed with caution.</p>"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#papain-like-protease-of-sars-cov-2-c111s-mutant-in-complex-with-plp_snyder494-inhibitor-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","title":"Papain-Like Protease of SARS CoV-2, C111S mutant, in complex with PLP_Snyder494 inhibitor binding free energy calculations (Single Trajectory method) with CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/COVID-19_related_proteins/Papain-like_protease_7koj directory in the repository folder. If you didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA Github repository.</p>"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 18 13 -ct com_traj.xtc -cp topol.top\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 18 13 -ct com_traj.xtc -cp topol.top\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"SARS_CoV2_Papain_like_protease\",\n/\n&amp;pb\n#radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation\nistrng=0.15, fillratio=4.0, radiopt=0, inp=1,\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/COVID-19_related_proteins/Papain-like_protease_7koj/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>18 13</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA  calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format  with all the terms for CHARMM force field.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/","title":"SARS-CoV-2 spike receptor-binding domain complexed with high affinity ACE2 mutant 3N39","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and  CHARMM force field hasn't been tested extensively. Please, check this thread for more information and  proceed with caution.</p>"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#sars-cov-2-spike-receptor-binding-domain-complexed-with-high-affinity-ace2-mutant-3n39-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","title":"SARS-CoV-2 spike receptor-binding domain complexed with high affinity ACE2 mutant 3N39 binding free energy calculations (Single Trajectory method) with CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu directory in the repository folder. If you didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA Github repository.</p>"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 19 -ct com_traj.xtc -cp topol.top\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 20 19 -ct com_traj.xtc -cp topol.top\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"SARS_CoV2_S1_ACE\",\n/\n&amp;pb\n#radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation\nistrng=0.15, fillratio=4.0, radiopt=0, inp=1,\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/COVID-19_related_proteins/S1-ACE2_complex_7dmu/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>20 19</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA  calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format  with all the terms for CHARMM force field.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/","title":"SARS-CoV-2 Receptor Binding Domain (RBD):CR3022 antibody complex","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models and  CHARMM force field hasn't been tested extensively. Please, check this thread for more information and  proceed with caution.</p>"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#sars-cov-2-receptor-binding-domain-rbdcr3022-antibody-complex-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","title":"SARS-CoV-2 Receptor Binding Domain (RBD):CR3022 antibody complex binding free energy calculations (Single Trajectory method) with CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr directory in the repository folder. If you didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA Github repository.</p>"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 21 20 -ct com_traj.xtc -cp topol.top\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 21 20 -ct com_traj.xtc -cp topol.top\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"SARS_CoV2_S1_Ab\",\n/\n&amp;pb\n#radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP calculation\nistrng=0.15, fillratio=4.0, radiopt=0, inp=1,\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/COVID-19_related_proteins/S1_RBD_with_antibody_6zlr/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>21 20</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA  calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format  with all the terms for CHARMM force field.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Comp_receptor/","title":"Binding free energy calculations in multicomponent systems","text":"<p>Info</p> <p>This example can be found in the examples/Comp_receptor directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Comp_receptor/#requirements","title":"Requirements","text":"<p>Danger</p> <p>The ligand mol2 file must be the Antechamber output.</p> <p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file (not included) <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Comp_receptor/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 9\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Although, \nwe tried to use the input files as recommended in the Amber manual, \nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Complex_receptor\",\nforcefields=\"oldff/leaprc.ff99SBildn\",leaprc.gaff\"\nPBRadii=4, ions_parameters=1\n/\n&amp;gb\nigb=8, saltcon=0.150, intdiel=10\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Comp_receptor/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and  ligand amber format topologies and trajectories will be obtained from that of the complex. Of note, a new variable  \"forcefields\" has been added which eases the work with compound receptors with more than one type of molecule. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>33 14</code>) are needed. A ligand .mol2 file is also needed  for generating the ligand topology.The <code>mmpbsa.in</code> input file will contain all  the parameters needed for the  MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation  with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii (<code>PBRadii=4</code>) will be used as  recommended for GB-Neck2 solvation model. Also, a high dielectric constant <code>intdiel=10</code> will be used because of the  high number of charged residues at the interface.</p> <p>In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check  Amber manual for more info on ion parameters.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Correlation/","title":"Correlation","text":"<p>Info</p> <p>This example can be found in the examples/Correlation directory in the repository folder. If you  didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Correlation/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> will be run for each system and requires for each of them:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file (not included) <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Correlation/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, use <code>bash</code> to loop over the folder and run the  calculation in each one of them:</p> <pre><code>for i in */\n&gt;do \n&gt;echo $i\n&gt;cd $i\n&gt;gmx_MMPBSA -O -i mmpbsa.in -cs ../com.tpr -ci ../index.ndx -cg 20 21 -ct ../com_traj.xtc -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -nogui\n&gt;cd ..\n&gt;done\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Correlation/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand  amber format topologies and trajectories will be obtained from that of the complex. To do so, an  MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both  the receptor and ligand group numbers in the index file (<code>20 21</code>) are needed. . As we are running a GB calculation for the wild-type and  the mutants, we can use the same MD Structure+mass(db) (<code>../com.tpr</code>), index (<code>../index.ndx</code>), and the trajectory file (<code>../com_traj.xtc</code>) for all systems. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation and will be specific for each mutant, indicating the  mutation and the experimental Ki. In this case, 10 frames are going to be used when performing  the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3  radii (<code>PBRadii=4</code>) will be used as recommended for GB-Neck2 solvation model.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved for each system.</p>"},{"location":"examples/Correlation/#correlation-analysis-with-gmx_mmpbsa_ana","title":"Correlation analysis with <code>gmx_MMPBSA_ana</code>","text":"<p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code>. For correlation analysis, <code>gmx_MMPBSA_ana</code> can load the system recursively from the folders with the following command-line:</p> <pre><code>gmx_MMPBSA_ana -r\n</code></pre> <p>The following video shows how to perform correlation analysis in gmx_MMPBSA_ana.</p>"},{"location":"examples/Decomposition_analysis/","title":"Decomposition analysis","text":"<p>Info</p> <p>This example can be found in the examples/Decomposition_analysis directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Decomposition_analysis/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p> <p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>ggmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -do FINAL_DECOMP_MMPBSA.dat -deo FINAL_DECOMP_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv -do FINAL_DECOMP_MMPBSA.dat -deo FINAL_DECOMP_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 14\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for decomposition analysis<pre><code>Sample input file for decomposition analysis\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Decomposition\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\"\n/\n&amp;gb\nigb=5, saltcon=0.150,\n/\n#make sure to include at least one residue from both the receptor\n#and ligand in the print_res mask of the &amp;decomp section.\n#this requirement is automatically fulfilled when using the within keyword.\n#http://archive.ambermd.org/201308/0075.html\n&amp;decomp\nidecomp=2, dec_verbose=3,\nprint_res=\"within 4\"\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Decomposition_analysis/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index  file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index  file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code>  input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA calculation  with the igb5 (GB-OBC2) model and a salt concentration = 0.15M.</p> <p>Per-residue <code>decomp</code> with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms (<code>idecomp=2</code>) is going to be  performed and residues within 4\u00c5 in both receptor and ligand will be printed in the output file. Please see  <code>print_res</code> variable in <code>&amp;decomp namelist variables</code> section.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line. A plain text (<code>FINAL_DECOMP_MMPBSA.dat</code>) and a CSV-format (<code>FINAL_DECOMP_MMPBSA.csv</code>)  output files containing all energy terms for each printed residue in decomposition calculations will be also saved.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Decomposition_analysis/#alternatives-for-per-residue-energy-contribution-visualization","title":"Alternatives for per-residue energy contribution visualization","text":"<p>You can also use VMD and Chimera to view the modified pdb file with the per-residue energy contributions</p>"},{"location":"examples/Entropy_calculations/C2_Entropy/","title":"C2 Entropy calculations","text":"<p>Info</p> <p> in gmx_MMPBSA v1.5.0!!!</p> <p>This example can be found in the examples/Entropy_calculations/C2_Entropy directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to  download the specific folder from gmx_MMPBSA Github repository.</p>"},{"location":"examples/Entropy_calculations/C2_Entropy/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Entropy_calculations/C2_Entropy/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for entropy calculations (C2)<pre><code>Sample input file for entropy calculations (C2)\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"C2_entropy\",\nstartframe=1,\nendframe=10,\nc2_entropy=1, temperature=303.15,\n/\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Entropy_calculations/C2_Entropy/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>3 4</code>) are needed. The <code>mmpbsa. in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a  salt concentration = 0.15M.</p> <p>C2 Entropy will be calculated using all (100%) the frames. Of note, C2 method tends to give  unrealistically large entropies when the standard deviation of the interaction energy &gt; ~ 3.6kcal/mol. Of note, two other  methods (<code>QH</code> and <code>nmode</code>) can be used for estimating the entropic contribution, though they are way more expensive in  computation as compared with C2 method.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Entropy_calculations/Interaction_Entropy/","title":"Interaction Entropy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Entropy_calculations/Interaction_Entropy directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to  download the specific folder from gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 15\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for entropy calculations (IE)<pre><code>Sample input file for entropy calculations (IE)\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"IE\",\nstartframe=1,\nendframe=10,\n#Interaction Entropy (IE)(https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation\ninteraction_entropy=1, ie_segment=50, temperature=303.15\n/\n&amp;gb\nigb=2, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Entropy_calculations/Interaction_Entropy/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case,  the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the  complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file  (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa. in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA  calculation with the igb2 (GB-OBC1) model and a salt concentration = 0.15M.</p> <p>Interaction Entropy (IE) will be calculated and the average for half (<code>entropy_seg=50</code>) of the  total number of frames will be reported. Of note, two other methods (<code>QH</code> and <code>NMODE</code>) can be used for estimating the  entropic contribution, though they are way more expensive in computation as compared with IE method.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Entropy_calculations/nmode/","title":"Normal Mode Entropy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Entropy_calculations/nmode directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to  download the specific folder from gmx_MMPBSA Github repository.</p>"},{"location":"examples/Entropy_calculations/nmode/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Entropy_calculations/nmode/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 17\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for entropy calculations (nmode)<pre><code>Sample input file for entropy calculations (nmode)\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"NMode\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\",\nPBRadii=2,\n/\n&amp;gb\nigb=1, saltcon=0.150,\n/\n#note that nmode will use only a fraction of the no. of frames selected in \n#&amp;general variable. This way, nmode will only process 8 frames (3rd to 10th frames)\n#note also that some parameters have been change to perform the calculation \n#faster (maxcyc=5, drms=2). The typical values for these parameters \n#are (maxcyc=50000, drms=0.001)\n&amp;nmode\nnmstartframe=3,\nnmendframe=10,\nnminterval=1,\nmaxcyc=5, drms=2,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p> <p>## Considerations In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case,  the ligand is also another protein) amber format topologies and trajectories will be obtained from that of the  complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file  (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed.  The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case,  10 frames are going to be used when performing the MM/PB(GB)SA calculation with the igb1 (GB-HCT) model and  a salt concentration = 0.15M.</p> <p><code>nmode</code> will be used for estimating the entropic contribution, though it's way more expensive in computation as compared  with IE or C2 methods. Note that in this case we have \"relaxed\" the convergence criteria to speed up the calculation.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/GBNSR6/","title":"Binding free energy calculation with GBNSR6 model","text":"<p>Info</p> <p>This example can be found in the examples/GBNSR6 directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/GBNSR6/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/GBNSR6/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation using GBNSR6 model<pre><code>Sample input file for GB calculation using GBNSR6 model\n#This input file is meant to show only that gmx_MMPBSA works. \nAlthough, we tried to use the input files as recommended in the\n#Amber manual, some parameters have been changed to perform \nmore expensive calculations in a reasonable amount of time. \nFeel free to change the parameters \n#according to what is better \nfor your system.\n\n&amp;general\nsys_name=\"GBNSR6\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\"\n/\n\n&amp;gbnsr6\nistrng=0.15\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/GBNSR6/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the  MM/PB(GB)SA calculation using the GBNSR6 model.</p> <p>Comments on GBNSR6 model</p> <ul> <li>GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed  numerically, via the so-called \"R6\" integration (ref.) over molecular surface of the solute. </li> <li>In contrast to most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical  PB framework is. Thus, accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of  input atomic radii. </li> <li>Check Chapter \u00a75 in Amber manual for a more thorough  description of the GBNSR6 model and its parameters.</li> </ul> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in  the command-line).  Please, check the gmx_MMPBSA_ana section for more information.</p>"},{"location":"examples/Linear_PB_solver/","title":"Binding free energy calculation with linear PB (LPBE)","text":"<p>Info</p> <p>This example can be found in the examples/Linear_PB_solver directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Linear_PB_solver/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Linear_PB_solver/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\n#This input file is meant to show only that gmx_MMPBSA works. \nAlthough, we tried to use the input files as recommended in the\n#Amber manual, some parameters have been changed to perform \nmore expensive calculations in a reasonable amount of time. \nFeel free to change the parameters #according to what is better \nfor your system.\n\n&amp;general\nsys_name=\"Linear_PB\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\"\n/\n&amp;pb\nradiopt=0, istrng=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Linear_PB_solver/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the  MM/PB(GB)SA calculation with the PB model (linear PB equation) and a salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in  the command-line).  Please, check the gmx_MMPBSA_ana section for more information.</p>"},{"location":"examples/Metalloprotein_ligand/","title":"Metalloprotein-ligand binding free energy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Metalloprotein_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Metalloprotein_ligand/#requirements","title":"Requirements","text":"<p>In its simplest version, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Metalloprotein_ligand/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 8\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Metalloprotein-peptide\",\nstartframe=1\nendframe=10,\nPBRadii=4,\nions_parameters=1,\n/\n&amp;gb\nigb=8, saltcon=0.150, intdiel=5,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Metalloprotein_ligand/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand  amber format topologies and trajectories will be obtained from that of the complex. To  do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and  both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will  contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when  performing the MM/PB(GB)SA calculation with the igb8 (GB-Neck2) model, a salt concentration = 0.15M and considering an internal dielectric constant of 5.</p> <p>In this case, Li/Merz ion parameters (12-6 normal usage set) for Ca ions were used. Check Amber manual for more  info on ion parameters.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/NonLinear_PB_solver/","title":"Binding free energy calculation with linear PB (NLPBE)","text":"<p>Info</p> <p> in gmx_MMPBSA v1.5.0!!!</p> <p>This example can be found in the examples/NonLinear_PB_solver directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder  from gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/NonLinear_PB_solver/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/NonLinear_PB_solver/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for NLPB calculation<pre><code>Sample input file for NLPB\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"NonLinear_PB\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\",\n/\n&amp;pb\nnpbopt=1,\nindi=1.0, istrng=0.15,                                                     \nradiopt=0,                                           \neneopt=1, cutnb=8.0,\n/\n# check these threads \n# http://archive.ambermd.org/201203/0191.html\n# http://archive.ambermd.org/201610/0114.html\n# for more info on NLPB\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/NonLinear_PB_solver/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand  amber format topologies and trajectories will be obtained from that of the complex. To do so, an  MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both  the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 6 frames are going to be used when  performing the MM/PB(GB)SA calculation with the Non-Linear PB solver (<code>npbopt=1</code>). The dielectric constant  (<code>indi</code>) is set = 1. </p> <p>Warning</p> <p>When running a NLPB solver, <code>eneopt</code> is set = 1. That way, the total electrostatic energy and forces will be  computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo. In doing so,  energy term <code>EPB</code> in the output file is set to zero, while <code>EEL</code> term includes both the reaction field  energy (<code>EPB</code>) and the Coulombic energy (<code>EEL</code>). The van der Waals energy is computed along with the  particle-particle portion of the Coulombic energy. This option requires a nonzero <code>cutnb</code> (in this  case, <code>cutnb=8.0</code>) and <code>bcopt = 5</code> (default option).</p> <p>It's noteworthy mentioning that <code>\u0394GGAS</code> and <code>\u0394GSOLV</code> as reported are no longer properly decomposed. Since  <code>EPB</code> and <code>EEL</code> are combined into the \"gas phase\" term, the gas and solvation terms can't be separated.  Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together in the end.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/OPLS/protein_protein/","title":"Protein-protein (OPLS)","text":"<p>OPLS and MM(PB/GB)SA</p> <p>PB model is recommended when working with OPLSff files. Nevertheless, the combination of PB/GB models with radii  optimized for amber atom types (i.e. bondi, mbondi, mbondi2, mbondi3) and OPLS force field hasn't been tested  extensively. Please, proceed with caution.</p>"},{"location":"examples/OPLS/protein_protein/#protein-protein-binding-free-energy-calculations-single-trajectory-method-with-oplsff-files","title":"Protein-protein binding free energy calculations (Single Trajectory method) with OPLSff files","text":"<p>Info</p> <p>This example can be found in the examples/OPLS/protein_protein directory in the repository folder. If you didn't  use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/OPLS/protein_protein/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/OPLS/protein_protein/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ct com_traj.xtc -ci index.ndx -cg 10 11 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ct com_traj.xtc -ci index.ndx -cg 10 11 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\n#This input file is meant to show only that gmx_MMPBSA works. \nAlthough, we tried to use the input files as recommended in the\n#Amber manual, some parameters have been changed to perform \nmore expensive calculations in a reasonable amount of time. \nFeel free to change the parameters #according to what is better \nfor your system.\n\n&amp;general\nsys_name=\"OPLS_Support\",\nstartframe=1,\nendframe=8,\n/\n&amp;pb\nradiopt=0, istrng=0.150,\n/\n</code></pre> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/OPLS/protein_protein/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.pdb</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>10 11</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 8 frames are going to be used when performing the  MM/PB(GB)SA calculation with the PB model (linear PB equation) and a salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_DNA/","title":"Protein-DNA binding free energy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Protein_DNA directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_DNA/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_DNA/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 5\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-DNA\"\nstartframe=1,\nendframe=10,\nPBRadii=4\n/\n&amp;gb\nigb=8, saltcon=0.150, intdiel=10\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_DNA/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case,  the ligand is DNA) amber format topologies and trajectories will be obtained from that of the complex. To do so, an  MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both  the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will contain all  the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA  calculation with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii (<code>PBRadii=4</code>)  will be used as recommended for GB-Neck2 solvation model. Also, a high dielectric constant <code>intdiel=10</code> will be used  because of the high number of charged residues at the interface.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/","title":"Protein-DNA_RNA_ION-Ligand binding free energy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Protein_DNA_RNA_Ion_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p> <p>Danger</p> <p>This system was also used to show the usage of <code>forcefields</code> variable in Binding free energy calculations in multicomponent systems example. Keep in mind that this example will be removed in version 1.5.0.</p>"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#requirements","title":"Requirements","text":"<p>Danger</p> <p>The ligand mol2 file must be the Antechamber output.</p> <p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file (not included) <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 33 14 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t prot_dna_rna_ions_lig\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-DNA-RNA-ION-Lig\",\nstartframe=1\nendframe=10\nforcefields=\"oldff/leaprc.ff99SBildn,leaprc.gaff\"\nPBRadii=4, ions_parameters=1\n/\n&amp;gb\nigb=8, saltcon=0.150, intdiel=10\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_DNA_RNA_Ion_ligand/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor (Protein+DNA+RNA+Ions) and  ligand amber format topologies and trajectories will be obtained from that of the complex. To  do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>33 14</code>) are needed. A ligand .mol2 file is also needed  for generating the ligand topology.The <code>mmpbsa.in</code> input file will contain all  the parameters needed for the  MM/PB(GB)SA calculation. In this case, 11 frames are going to be used when performing the MM/PB(GB)SA calculation  with the igb8 (GB-Neck2) model and a salt concentration = 0.15M. Of note, mbondi3 radii (<code>PBRadii=4</code>) will be used as  recommended for GB-Neck2 solvation model. Also, a high dielectric constant <code>intdiel=10</code> will be used because of the  high number of charged residues at the interface.</p> <p>In this case, Li/Merz ion parameters (12-6 normal usage set) for Mg ions were used. Check  Amber manual for more info on ion parameters.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_glycan/","title":"Protein-glycan binding free energy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Protein_glycan directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_glycan/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_glycan/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 7\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Protein-glycan\",\nstartframe=1,\nendframe=10,\n/\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_glycan/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and glycan structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In thsi case, 10 frames are going to be used when performing the MM/PB(GB)SA  calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M.</p> <p>Of note, the recommended GLYCAM force fields are: * \"leaprc.GLYCAM_06j-1\" (Compatible with amber12SB and later),  \"leaprc.GLYCAM_06EPb\" (Compatible with amber12SB and later), and \"leaprc.GLYCAM_06h-1\" (Compatible with amber99SB and  earlier. It is included in <code>gmx_MMPBSA</code> package. If it is selected, it will be copied to $AMBERHOME/dat/x) Check  Amber manual for more info on GLYCAM force fields.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_ligand/MT/","title":"Protein-ligand binding free energy calculations (Multiple Trajectory method)","text":"<p>Info</p> <p>This example can be found in the examples/Protein_ligand/MT directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_ligand/MT/#requirements","title":"Requirements","text":"<p>Danger</p> <p>The ligand mol2 file must be the Antechamber output.</p> <p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> (Complex, Receptor and Ligand) Structure file containing the system coordinates An index file <code>ndx</code> (Complex, Receptor and Ligand) file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> (Complex, Receptor and Ligand) Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> (Complex, Receptor and Ligand) Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file (not included) <code>top</code> (Complex, Receptor and Ligand) GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Remember</p> <p>When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when <code>gmx_MMPBSA</code> build the amber topology from a structure  </p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_ligand/MT/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb -lm ligand.mol2 -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13\\\n       -ct com_traj.xtc -rs rec.pdb -ri rec_index.ndx -rg 1 -rt rec_traj.pdb \\\n       -lm ligand.mol2 -ls lig.pdb -li lig_index.ndx -lg 2 -lt lig_traj.pdb -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 16\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Lig-MT\",\nstartframe=5,\nendframe=14,\nforcefields=\"oldff/leaprc.ff99SB\",leaprc.gaff\"\n/\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_ligand/MT/#considerations","title":"Considerations","text":"<p>In this case, a multiple trajectory (MT) approximation is followed, which means the receptor and ligand structures and  trajectories are needed. For the complex, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>1 13</code>) are needed. For the receptor, an MD Structure+mass(db) file (<code>rec.pdb</code>), an index file (<code>rec_index.ndx</code>), a trajectory file (<code>rec_traj.pdb</code>), and the receptor group number in the rec_index file (<code>1</code>) are needed. For the ligand, a ligand .mol2 file is needed for generating the ligand topology. Besides, an MD Structure+mass(db) file (<code>lig.pdb</code>), an  index file (<code>lig_index.ndx</code>), a trajectory file (<code>lig_traj.pdb</code>), and ligand group number in the lig_index file (<code>2</code>) are  needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames are going to be used when performing the MM/PB(GB)SA  calculation with the igb5 (GB-OBC2) model and a salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_ligand/ST/","title":"Protein-ligand binding free energy calculations (Single Trajectory method)","text":"<p>Info</p> <p>This example can be found in the examples/Protein_ligand/ST directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_ligand/ST/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Remember</p> <p>When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when <code>gmx_MMPBSA</code> build the amber topology from a structure. The ligand mol2 file must be the Antechamber output.</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_ligand/ST/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 3\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Lig-ST\",\nstartframe=1,\nendframe=10,\n/\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_ligand/ST/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>),  an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a  salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_ligand_CHARMMff/","title":"Protein-ligand (Charmm)","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models with radii  optimized for amber atom types (i.e. bondi, mbondi, mbondi2, mbondi3) and CHARMM force field hasn't been tested  extensively. Please, check this thread for more information and proceed with caution.</p> <p> in gmx_MMPBSA v1.5.0!!!</p> <p>In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. This radii set should be used only  with systems prepared with CHARMM force fields. The atomic radii set for Poisson-Boltzmann calculations has been  derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested  with free energy perturbation with explicit solvent ref.. Most of  the values were taken from a *radii.str file used in PBEQ Solver  in charmm-gui.</p> <ul> <li>Radii for protein atoms in 20 standard amino acids from  Nina, Belogv, and Roux</li> <li>Radii for nucleic acid atoms (RNA and DNA) from  Banavali and Roux</li> <li>Halogens and other atoms from Fortuna and Costa</li> </ul>"},{"location":"examples/Protein_ligand_CHARMMff/#protein-ligand-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","title":"Protein-ligand binding free energy calculations (Single Trajectory method) with CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/Protein_ligand_CHARMMff directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_ligand_CHARMMff/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_ligand_CHARMMff/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 10\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Lig-CHARMM\",\nstartframe=1,\nendframe=4,\n# In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. \n# This radii set should be used only with systems prepared with CHARMM force fields. \n# Uncomment the line below to use charmm_radii set\n#PBRadii=7,\n/\n&amp;pb\n# radiopt=0 is recommended which means using radii from the prmtop file for both the PB calculation and for the NP\n# calculation\nistrng=0.15, fillratio=4.0, radiopt=0\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/Protein_ligand_CHARMMff/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the  index file (<code>1 13</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for the MM/PB(GB)SA  calculation. A topology file is also needed (mandatory) in this case to generate the topology files in amber format  with all the terms for CHARMM force field.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/","title":"Protein-ligand LPH (Charmm)","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models with radii  optimized for amber atom types (i.e. bondi, mbondi, mbondi2, mbondi3) and CHARMM force field hasn't been tested  extensively. Please, check this thread for more information and proceed with caution.</p> <p> in gmx_MMPBSA v1.5.0!!!</p> <p>In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. This radii set should be used only  with systems prepared with CHARMM force fields. The atomic radii set for Poisson-Boltzmann calculations has been  derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested  with free energy perturbation with explicit solvent ref.. Most of  the values were taken from a *radii.str file used in PBEQ Solver  in charmm-gui.</p> <ul> <li>Radii for protein atoms in 20 standard amino acids from  Nina, Belogv, and Roux</li> <li>Radii for nucleic acid atoms (RNA and DNA) from  Banavali and Roux</li> <li>Halogens and other atoms from Fortuna and Costa</li> </ul>"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#protein-ligand-with-lph-atoms-bfe-calculations-single-trajectory-method-charmmff-files","title":"Protein-ligand with LPH atoms BFE calculations (Single Trajectory method) -- CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/Protein_ligand_LPH_atoms_CHARMMff directory in the repository folder</p> <p>LPH is a positively charged virtual particle attached to halogen atoms. This strategy aims to get a better  representation of the halogen bond which is a highly directional, non-covalent interaction between a halogen atom  and another electronegative atom (See here for more info). Unfortunately, including these particles in the  topology will cause gmx_MMPBSA to end in an error. However, there is a way to generate the files without these  particles and get gmx_MMPBSA up and running.</p> <p>Keep in mind</p> <p>As the LPH particle is not considered during the calculations in gmx_MMPBSA, take the results with a grain of  salt, especially when working with systems where the halogen bond is determinant for the binding.</p> <p> in gmx_MMPBSA v1.5.0!!!</p> <p>We have included standard radii for halogens in charmm_radii set:</p> <ul> <li>Cl: 1.86</li> <li>Br: 1.98</li> <li>I: 2.24</li> </ul> <p>This radii set should be used with the following PBSA setup:</p> <pre><code>Sample input file for PB calculation with halogenated compounds\n\n&amp;general\nsys_name=\"PB_Halogens\",\nPBRadii=7,\n/\n&amp;pb\ninp=1, saopt=1, radiopt=0, cavity_surften=0.005, cavity_offset=0.0000\n/\n</code></pre>"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p> <p>In order to generate the corresponding files (The MD Structure+mass(db), index, trajectory and the topology files)  without the LPH particles, it's necessary to run a few commands. Bear with me!</p> <p>Let's generate the index file first:</p> <p>Important</p> <p>The main idea here is to generate a receptor group, a  ligand group without the LPH particles and a complex group containing both the receptor and the ligand without  the LPH particles. In general, index files generated with GROMACS directly will contain more detailed information  (i.e., receptor and ligand separated)</p> <pre><code>gmx make_ndx -f com.tpr -o index_mod_gromacs.ndx\n\n  0 System              : 70483 atoms\n  1 Protein             :  5580 atoms\n  2 Protein-H           :  2817 atoms\n  3 C-alpha             :   334 atoms\n  4 Backbone            :  1002 atoms\n  5 MainChain           :  1335 atoms\n  6 MainChain+Cb        :  1654 atoms\n  7 MainChain+H         :  1654 atoms\n  8 SideChain           :  3926 atoms\n  9 SideChain-H         :  1482 atoms\n 10 Prot-Masses         :  5580 atoms\n 11 non-Protein         : 64903 atoms\n 12 Other               : 64903 atoms\n 13 3G5                 :    32 atoms\n 14 CLA                 :    62 atoms\n 15 SOD                 :    63 atoms\n 16 TIP3                : 64746 atoms\n\nSplitting the ligand (group 13) by atoms\n&gt;splitat 13\n\nGrouping both LPH particles\n&gt;47|48\n\nExcluding both LPH particles from the ligand\n&gt;13&amp;!49\n\nNaming ligand as lig\n&gt;name 50 lig\n\nGrouping rec and lig\n&gt;1|50\n\nCleaning\n&gt;del 17-49\n\nsave and quit\n&gt;q\n\nThis is how it should look like at the end\n\n  0 System              : 70483 atoms\n  1 Protein             :  5580 atoms\n  2 Protein-H           :  2817 atoms\n  3 C-alpha             :   334 atoms\n  4 Backbone            :  1002 atoms\n  5 MainChain           :  1335 atoms\n  6 MainChain+Cb        :  1654 atoms\n  7 MainChain+H         :  1654 atoms\n  8 SideChain           :  3926 atoms\n  9 SideChain-H         :  1482 atoms\n 10 Prot-Masses         :  5580 atoms\n 11 non-Protein         : 64903 atoms\n 12 Other               : 64903 atoms\n 13 3G5                 :    32 atoms\n 14 CLA                 :    62 atoms\n 15 SOD                 :    63 atoms\n 16 TIP3                : 64746 atoms\n 17 lig                 :    30 atoms\n 18 Protein_lig         :  5610 atoms\n</code></pre> <p>Note</p> <p>Note that the number of atoms in the generated complex is 5610 because it doesn't include the LPH particles.</p> <p>Let's generate the MD Structure+mass(db) file:</p> <pre><code>echo 18 | gmx trjconv -s com.tpr -f traj_fit.xtc -dump 0 -o str_noLP.pdb -n index_mod_gromacs.ndx\n</code></pre> <p>Open <code>str_noLP.pdb</code> in your favorite visualizer and see it doesn't contain the LPH particles. Now, let's generate  the trajectory with no LPH particles:</p> <pre><code>echo 18 | gmx trjconv -s com.tpr -f traj_fit.xtc -o com_traj.xtc -n index_mod_gromacs.ndx\n</code></pre> <p>Finally, let's edit the topology file. Go inside the toppar folder and open the <code>HETA.itp</code> file. As you will see, we deleted all the information related with LPH particles (atom numbers 31, and 32 respectively). In this case, we deleted the information for LPH particles in <code>atoms</code> (lines 47, 48) and <code>pairs</code> (lines 124, 132, 150, 153, 154, 157,  158, 159). Besides, delete the whole <code>[ virtual_sites3 ]</code> (lines 296-299) and <code>[ exclusions ]</code> (lines 301-318)  fields. The original .itp (<code>HETA_original_with_LPH_info.itp</code>) is included for comparison purposes.</p>"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs str_noLP.pdb -ci index_mod_gromacs.ndx -cg 1 17 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs str_noLP.pdb -ci index_mod_gromacs.ndx -cg 1 17 -ct com_traj.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for PB calculation<pre><code>Sample input file for PB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Lig-ST\",\nstartframe=5,\nendframe=9,\nsolvated_trajectory=0,\n# In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. \n# This radii set should be used only with systems prepared with CHARMM force fields. \n# Uncomment the line below to use charmm_radii set\n#PBRadii=7,\n/\n&amp;pb\n# radiopt=0 is recommended which means using radii from the prmtop file\n# for both the PB calculation and for the NP calculation\n\nistrng=0.15, fillratio=4, radiopt=0, inp=1,\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/Protein_ligand_LPH_atoms_CHARMMff/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>str_noLP.pdb</code>), an  index file (<code>index_mod_gromacs.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group  numbers in the index file (<code>1 17</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the parameters needed for  the MM/PB(GB)SA calculation. A topology file is also needed (mandatory) in this case to generate the topology files  in amber format with all the terms for CHARMM force field.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_membrane/","title":"MMPBSA with membrane proteins","text":"<p>Info</p> <p>This example can be found in the examples/Protein_membrane directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_membrane/#requirements","title":"Requirements","text":"<p>Danger</p> <p>The ligand mol2 file must be the Antechamber output.</p> <p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> file containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file (not included) <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Remember</p> <p>When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when <code>gmx_MMPBSA</code> build the amber topology from a structure  </p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_membrane/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 1 13 -ct com_traj.pdb -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 6\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for MMPBSA with membrane proteins<pre><code>Sample input file for MMPBSA with membrane proteins\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Memb\",\nstartframe=1,\nendframe=4,\n/\n&amp;pb\nmemopt=1, emem=7.0, indi=4.0,\nmctrdz=-10.383, mthick=36.086, poretype=1,\nradiopt=0, istrng=0.150, fillratio=1.25, inp=2,\nsasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000,\neneopt=1, cutfd=7.0, cutnb=99.0,\nmaxarcdot=15000,\nnpbverb=1,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_membrane/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.pdb</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.pdb</code>), and both the receptor and ligand group numbers in the  index file (<code>1 13</code>) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The <code>mmpbsa. in</code> input file will contain all the parameters needed for the MM/PB(GB)SA calculation. Of note, special parameters  for MMPBSA with membrane proteins have been included.</p> <p>Comments on parameters for implicit membranes</p> <p>The inclusion of an implicit membrane region in implicit solvation calculations is enabled by setting  <code>memopt</code> to 1 (default value is 0, for off). The membrane will extend the solute dielectric region to include a  slab-like planar region of uniform dielectric constant running parallel to the xy plane. The dielectric constant  can be controlled using <code>emem</code>. We set the membrane interior dielectric constant to a value of 7.0 in this example.  The value of <code>emem</code> should always be set to a value greater than or equal to <code>indi</code> (solute dielectric constant,  4 in this example) and less than <code>exdi</code> (solvent dielectric constant, 80.0 default).</p> <p></p> <p>The thickness is controlled by the <code>mthick</code> option (36.086 \u00c5 in this case). The center of the membrane region is  controlled with <code>mctrdz</code> and in this case the membrane region will be centered at -10.383 \u00c5 down of the center  of the protein. If calculations are performed on a protein with a solvent-filled channel region, this  region would be identified automatically by setting <code>poretype=1</code>.</p> <p>When using the implicit membrane model, the default <code>sasopt=0</code>, i.e. the classical solvent excluded surface, is recommended due to its better numerical behavior. When running with the default options, the program  will compute solvent excluded surfaces both with the water probe (<code>prbrad=1.40</code> by default) and the membrane probe (<code>mprob=2.70</code> by default). This setting was found to be consistent with the explicit solvent MD simulations. </p> <p>It is also suggested that periodic boundary conditions be used to avoid unphysical edge effects. This is supported  in all linear solvers. In the following, Geometric multigrid is chosen (<code>solvopt=2</code>) with <code>ipb=1</code> and <code>bcopt=10</code>. The <code>linit=1000</code> should work fine, but take into account that working with linear and periodic boundary conditions  could require more iterations.</p> <p>In addition, <code>eneopt</code> needs to be set to 1 because the charge-view method (<code>eneopt = 2</code>) is not supported for  this application. When <code>eneopt=1</code>, the total electrostatic energy and forces will be  computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo.[8] In doing so,  energy term <code>EPB</code> in the output file is set to zero, while <code>EEL</code> term includes both the reaction field  energy (<code>EPB</code>) and the Coulombic energy (<code>EEL</code>). The van der Waals energy is computed along with the  particle-particle portion of the Coulombic energy. This option requires a nonzero CUTNB (in this case, <code>cutnb=8.0</code>). It's noteworthy mentioning that <code>\u0394GGAS</code> and <code>\u0394GSOLV</code> as reported are no longer  properly decomposed. Since <code>EPB</code> and <code>EEL</code> are combined into the \"gas phase\" term, the gas and solvation terms  can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together  in the end.</p> <p>Danger</p> <p>Note that a smaller <code>fillratio=1.25</code> is used compared to the defult one (4.0). The use of a periodic boundary  also allowed a somewhat small fill ratio (i.e., the ratio of the finite-difference box dimension over the  solute dimension) of 1.25 to be used in these  calculations (ref). Be cautious when changing this  parameter as its increase may lead to a considerable RAM usage (specially when running the program in parralel).  Just for your information, using the default <code>fillratio=4.0</code> in this relatively small system requieres as much  as ~30GB per thread  and more time to finish the calculation.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_membrane_CHARMMff/","title":"Protein-ligand embedded in membrane (Charmm)","text":"<p>CHARMM and MM(PB/GB)SA</p> <p>PB model is recommended when working with CHARMMff files. Nevertheless, the combination of PB/GB models with radii  optimized for amber atom types (i.e. bondi, mbondi, mbondi2, mbondi3) and CHARMM force field hasn't been tested  extensively. Please, check this thread for more information and proceed with caution.</p> <p> in gmx_MMPBSA v1.5.0!!!</p> <p>In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. This radii set should be used only  with systems prepared with CHARMM force fields. The atomic radii set for Poisson-Boltzmann calculations has been  derived from average solvent electrostatic charge distribution with explicit solvent. The accuracy has been tested  with free energy perturbation with explicit solvent ref.. Most of  the values were taken from a *radii.str file used in PBEQ Solver  in charmm-gui.</p> <ul> <li>Radii for protein atoms in 20 standard amino acids from  Nina, Belogv, and Roux</li> <li>Radii for nucleic acid atoms (RNA and DNA) from  Banavali and Roux</li> <li>Halogens and other atoms from Fortuna and Costa</li> </ul>"},{"location":"examples/Protein_membrane_CHARMMff/#protein-ligand-embedded-in-membrane-binding-free-energy-calculations-single-trajectory-method-with-charmmff-files","title":"Protein-ligand embedded in membrane binding free energy calculations (Single Trajectory method) with CHARMMff files","text":"<p>Info</p> <p>This example can be found in the examples/Protein_membrane_CHARMMff directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_membrane_CHARMMff/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates Receptor and ligand group <code>integers</code> Receptor and ligand group numbers in the index file A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> take into account that *.itp files belonging to the topology file should be also present in the folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_membrane_CHARMMff/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 6 5 -ct md.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.pdb -ci index.ndx -cg 6 5 -ct md.xtc -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 11\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for MMPBSA with membrane proteins<pre><code>Sample input file for MMPBSA with membrane proteins\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Memb-CHARMM\",\nstartframe=1,\nendframe=4,\n# In gmx_MMPBSA v1.5.0 we have added a new PB radii set named charmm_radii. \n# This radii set should be used only with systems prepared with CHARMM force fields. \n# Uncomment the line below to use charmm_radii set\n#PBRadii=7,\n/\n&amp;pb\nmemopt=1, emem=7.0, indi=1.0,\nmctrdz=37, mthick=40, poretype=1,\nradiopt=0, istrng=0.150, fillratio=1.25, inp=2,\nsasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000,\neneopt=1, cutfd=7.0, cutnb=99.0,\nmaxarcdot=15000,\nnpbverb=1,\n/\n</code></pre> <p>Remember</p> <p><code>radiopt = 0</code> is recommended which means using radii from the <code>prmtop</code> file</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p>"},{"location":"examples/Protein_membrane_CHARMMff/#considerations","title":"Considerations","text":"<p>This is a protein-protein complex system that contains several glycosilation sites and ligands bound. All of that, is  embedded in POPC:CHOL a (4:1) membrane. As you will see, gmx_MMPBSA is able to handle successfully such a complex system. Of note, just a relevant part of the entire system has been considered for binding free calculations, since the  inclusion of the rest will increase the computation time without improving the results. You can check the file  _GMXMMPBSA_COM_FIXED.pdb during the calculation to see how the complex looks like. In this case, a single trajectory  (ST) approximation is followed, which means the receptor and ligand structures and trajectories will be obtained  from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.pdb</code>), an index file (<code>index.ndx</code>), a trajectory  file (<code>md.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>6 5</code>) are needed. The <code>mmpbsa.in</code>  input file will contain all the parameters needed for the MM/PB(GB)SA calculation. A topology file is also needed  (mandatory) in this case to generate the topology files in amber format with all the terms for CHARMM force field.</p> <p>Comments on parameters for implicit membranes</p> <p>The inclusion of an implicit membrane region in implicit solvation calculations is enabled by setting  <code>memopt</code> to 1 (default value is 0, for off). The membrane will extend the solute dielectric region to include a  slab-like planar region of uniform dielectric constant running parallel to the xy plane. The dielectric constant  can be controlled using <code>emem</code>. We set the membrane interior dielectric constant to a value of 7.0 in this example.  The value of <code>emem</code> should always be set to a value greater than or equal to <code>indi</code> (solute dielectric constant,  1 in this example) and less than <code>exdi</code> (solvent dielectric constant, 80.0 default).</p> <p></p> <p>The thickness is controlled by the <code>mthick</code> option (40 \u00c5 in this case). The center of the membrane region is  controlled with <code>mctrdz</code> and in this case the membrane region will be centered at 37 \u00c5 from the center  of the protein. If calculations are performed on a protein with a solvent-filled channel region, this  region would be identified automatically by setting <code>poretype=1</code>.</p> <p>When using the implicit membrane model, the default <code>sasopt=0</code>, i.e. the classical solvent excluded surface, is recommended due to its better numerical behavior. When running with the default options, the program  will compute solvent excluded surfaces both with the water probe (<code>prbrad=1.40</code> by default) and the membrane probe (<code>mprob=2.70</code> by default). This setting was found to be consistent with the explicit solvent MD simulations. </p> <p>It is also suggested that periodic boundary conditions be used to avoid unphysical edge effects. This is supported  in all linear solvers. In the following, Geometric multigrid is chosen (<code>solvopt=2</code>) with <code>ipb=1</code> and <code>bcopt=10</code>. The <code>linit=1000</code> should work fine, but take into account that working with linear and periodic boundary conditions  could require more iterations.</p> <p>In addition, <code>eneopt</code> needs to be set to 1 because the charge-view method (<code>eneopt = 2</code>) is not supported for  this application. When <code>eneopt=1</code>, the total electrostatic energy and forces will be  computed with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo.[8] In doing so,  energy term <code>EPB</code> in the output file is set to zero, while <code>EEL</code> term includes both the reaction field  energy (<code>EPB</code>) and the Coulombic energy (<code>EEL</code>). The van der Waals energy is computed along with the  particle-particle portion of the Coulombic energy. This option requires a nonzero CUTNB (in this case, <code>cutnb=8.0</code>). It's noteworthy mentioning that <code>\u0394GGAS</code> and <code>\u0394GSOLV</code> as reported are no longer  properly decomposed. Since <code>EPB</code> and <code>EEL</code> are combined into the \"gas phase\" term, the gas and solvation terms  can't be separated. Nevertheless, the total \u0394TOTAL should be perfectly fine, since everything is sum up together  in the end.</p> <p>Danger</p> <p>Note that a smaller <code>fillratio=1.25</code> is used compared to the defult one (4.0). The use of a periodic boundary  also allowed a somewhat small fill ratio (i.e., the ratio of the finite-difference box dimension over the  solute dimension) of 1.25 to be used in these  calculations (ref). Be cautious when changing this  parameter as its increase may lead to a considerable RAM usage (specially when running the program in parralel).</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Protein_protein/","title":"Protein-protein binding free energy calculations","text":"<p>Info</p> <p>This example can be found in the examples/Protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Protein_protein/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Protein_protein/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 4\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Prot-Prot\",\nstartframe=1,\nendframe=10,\nforcefields=\"leaprc.protein.ff14SB\",\n/\n&amp;gb\nigb=2, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Protein_protein/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the  ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To  do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and  both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will  contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt  concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/QM_MMGBSA/","title":"QM/MMGBSA binding free energy calculations","text":"<p>Info</p> <p>This example can be found in the examples/QM_MMGBSA directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/QM_MMGBSA/#requirements","title":"Requirements","text":"<p>Danger</p> <p>The ligand mol2 file must be the Antechamber output.</p> <p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. Ligand parameters file <code>mol2</code> The Antechamber output  <code>mol2</code> file of ligand parametrization A topology file (not included) <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Remember</p> <p>When a topology file is defined, the ligand mol2 file is not needed. The ligand mol2 file only required when <code>gmx_MMPBSA</code> build the amber topology from a structure  </p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/QM_MMGBSA/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc -lm ligand.mol2 -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for QM/MMGBSA calculation<pre><code>Sample input file for QM/MMGBSA calculation\nThis input file is meant to show only that gmx_MMPBSA works. \nAlthough, we tried to use the input files as recommended in the\nAmber manual, some parameters have been changed to perform more \nexpensive calculations in a reasonable amount of time. Feel free \nto change the parameters according to what is better for your system.\n\n&amp;general\nsys_name=\"QM/MMGBSA\",\nstartframe=5,\nendframe=14,\nPBRadii=2,\nforcefields=\"oldff/leaprc.ff99SB,leaprc.gaff\"\n/\n&amp;gb\nigb=1, saltcon=0.150,\nifqnt=1, qm_theory=PM3,\nqm_residues=\"A/40-41,44,47,78,81-82,85,88,115,118,122,215,218-220,232 B/241\"\n# qm_residues selection with \"within\" keyword (new in v1.5.0)\n#qm_residues=\"within 5\"\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/QM_MMGBSA/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>1 13</code>) are needed. A ligand .mol2 file is also needed for generating the ligand topology. The <code>mmpbsa.in</code> input file will contain all  the parameters needed for the QM/MMGBSA calculation. 10 frames are going to be used when performing QM/MMGBSA  calculation with the igb1 (GB-HCT) model (note that <code>mbondi</code> raddi set <code>PBRadii=2</code>  is used), PM3 method and a salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/Stability/","title":"Stability calculations","text":"<p>Info</p> <p>This example can be found in the examples/Stability directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific folder from  gmx_MMPBSA GitHub repository.</p>"},{"location":"examples/Stability/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>tpr</code> <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A trajectory file <code>xtc</code> <code>pdb</code> <code>trr</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>See a detailed list of all the flags in gmx_MMPBSA command line here</p>"},{"location":"examples/Stability/#command-line","title":"Command-line","text":"<p>That being said, once you are in the folder containing all files, the command-line will be as follows:</p> SerialWith MPIgmx_MMPBSA_test <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ct com_traj.xtc -ci index.ndx -cg 3 4 -cp topol.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>gmx_MMPBSA_test -t 13\n</code></pre> <p>where the <code>mmpbsa.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Sample input file for GB calculation\nThis input file is meant to show only that gmx_MMPBSA works. Althought,\nwe tried to used the input files as recommended in the Amber manual,\nsome parameters have been changed to perform more expensive calculations\nin a reasonable amount of time. Feel free to change the parameters \naccording to what is better for your system.\n\n&amp;general\nsys_name=\"Stability\",\nstartframe=1,\nendframe=10,\n/\n&amp;gb\nigb=2, saltcon=0.150,\n/\n</code></pre> <p>Keep in mind</p> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples.  These examples are meant only to show that gmx_MMPBSA works. It is recommended to go over these variables, even  the ones that are not included in this input file but are available for the calculation that it's performed and see the values they can take (check the input file section). This will allow you to  tackle a number of potential problems or simply use fancier approximations in your calculations.</p>"},{"location":"examples/Stability/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand (in this case, the  ligand is also another protein) amber format topologies and trajectories will be obtained from that of the complex. To  do so, an MD Structure+mass(db) file (<code>com.tpr</code>), an index file (<code>index.ndx</code>), a trajectory file (<code>com_traj.xtc</code>), and  both the receptor and ligand group numbers in the index file (<code>3 4</code>) are needed. The <code>mmpbsa.in</code> input file will  contain all the parameters needed for the MM/PB(GB)SA calculation. In this case, 10 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb2 (GB-OBC1) model and a salt  concentration = 0.15M.</p> <p>\"Stability\" calculation will be performed, and you will get statistics based on only a single system (complex). Any  additional receptor or ligand information given will be ignored.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/psf_dcd/multicomponent_system/","title":"Binding free energy calculations in multicomponent systems (3 or more elements)","text":"<p>Info</p> <p>This example can be found in the examples/psf_dcd/multicomponent_system directory in the repository folder. If  you didn't use gmx_MMPBSA_test before, use downgit to download the specific  folder from gmx_MMPBSA GitHub repository.</p> <p>In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to  check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files  required for running gmx_MMPBSA.</p> <p>Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here.</p>"},{"location":"examples/psf_dcd/multicomponent_system/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>pdb</code> Structure file containing the system coordinates A trajectory file <code>xtc</code> <code>pdb</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Steps to generate gmx_MMPBSA files</p> 1- The input file <code>*.in</code>2- The MD Structure+mass(db) and the trajectory files3- The topology file4- The index file <p>The input file <code>*.in</code> is already included in the tutorial folder, although it can be easily generated using  <code>--create_input</code> command. The <code>*.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Input file generated by gmx_MMPBSA (v1.5.0.3)\nBe careful with the variables you modify, some can have severe consequences on the results you obtain.\n\n# General namelist variables\n&amp;general\n  sys_name             = \"\"                                             # System name\n  startframe           = 5                                           # FIRST FRAME TO ANALYZE\n  endframe             = 15                                          # LAST FRAME TO ANALYZE\n  interval             = 1                                              # Number of frames between adjacent frames analyzed\n  forcefields          = \"oldff/leaprc.ff99SB,leaprc.gaff\"           # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY)\n  ions_parameters      = 1                                              # Define ions parameters to build the Amber topology\n  PBRadii              = 3                                              # Define PBRadii to build amber topology from GROMACS files\n  temperature          = 298.15                                         # Temperature\n  qh_entropy           = 0                                              # Do quasi-harmonic calculation\n  interaction_entropy  = 0                                              # Do Interaction Entropy calculation\n  ie_segment           = 25                                             # Trajectory segment to calculate interaction entropy\n  c2_entropy           = 0                                              # Do C2 Entropy calculation\n  assign_chainID       = 1                                           # ASSIGN CHAINS ID\n  exp_ki               = 0.0                                            # Experimental Ki in nM\n  full_traj            = 0                                              # Print a full traj. AND the thread trajectories\n  gmx_path             = \"\"                                             # Force to use this path to get GROMACS executable\n  keep_files           = 2                                              # How many files to keep after successful completion\n  netcdf               = 0                                              # Use NetCDF intermediate trajectories\n  solvated_trajectory  = 1                                              # Define if it is necessary to cleanup the trajectories\n  verbose              = 1                                              # How many energy terms to print in the final output\n/\n\n# (AMBER) Generalized-Born namelist variables\n&amp;gb\n  igb                  = 5                                              # GB model to use\n  intdiel              = 1.0                                            # Internal dielectric constant for sander\n  extdiel              = 78.5                                           # External dielectric constant for sander\n  saltcon              = 0.15                                        # SALT CONCENTRATION (M)\n  surften              = 0.0072                                         # Surface tension\n  surfoff              = 0.0                                            # Surface tension offset\n  molsurf              = 0                                              # Use Connelly surface ('molsurf' program)\n  msoffset             = 0.0                                            # Offset for molsurf calculation\n  probe                = 1.4                                            # Solvent probe radius for surface area calc\n  ifqnt                = 0                                              # Use QM on part of the system\n  qm_theory            = \"\"                                             # Semi-empirical QM theory to use\n  qm_residues          = \"\"                                             # Residues to treat with QM\n  qmcharge_com         = 0                                              # Charge of QM region in complex\n  qmcharge_lig         = 0                                              # Charge of QM region in ligand\n  qmcharge_rec         = 0                                              # Charge of QM region in receptor\n  qmcut                = 9999.0                                         # Cutoff in the QM region\n/\n</code></pre> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p> <p>We are going to use <code>cpptraj</code> program from Amber to process the *.psf and *.dcd files:</p> <pre><code>Press enter after every command line\n\n    cpptraj -p step3_input.psf\n    &gt;trajin traj.dcd\n    &gt;strip :POT,CLA,TIP3,SOD\n    &gt;trajout gromacs.pdb onlyframes 1\n    &gt;trajout traj.xtc\n    &gt;run\n    &gt;exit\n</code></pre> <p>After executing these commands, there should be two new files in te folder, i.e. <code>gromacs.pdb</code> that is  going to be used as the MD Structure+mass(db) file, and <code>traj.xtc</code> that is going to be used as the  trajectory file.</p> <p>Keep in mind</p> <p>For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD  folder have the <code>ATOM</code> section commented with the <code>!</code> symbol:</p> <pre><code>!ATOMS\n!MASS  -1  H          1.00800 ! polar H\n!MASS  -1  HC         1.00800 ! N-ter H\n!MASS  -1  HA         1.00800 ! nonpolar H\n!MASS  -1  HP         1.00800 ! aromatic H\n!MASS  -1  HB1        1.00800 ! backbone H\n!MASS  -1  HB2        1.00800 ! aliphatic backbone H, to CT2\n!MASS  -1  HR1        1.00800 ! his he1, (+) his HG,HD2\n...\n</code></pre> <p>This section can't be commented on for the purpose of this tutorial, thus you can either use a files with  the <code>ATOM</code> section uncommented or just uncomment the section yourself:</p> <pre><code>ATOMS\nMASS  -1  H          1.00800 ! polar H\nMASS  -1  HC         1.00800 ! N-ter H\nMASS  -1  HA         1.00800 ! nonpolar H\nMASS  -1  HP         1.00800 ! aromatic H\nMASS  -1  HB1        1.00800 ! backbone H\nMASS  -1  HB2        1.00800 ! aliphatic backbone H, to CT2\nMASS  -1  HR1        1.00800 ! his he1, (+) his HG,HD2\n...\n</code></pre> <p>We are going to use <code>ParmEd</code> to convert the *.psf file into a GROMACS topology file. To do so, use the  ParmEd script that is already included in the tutorial folder. </p> <pre><code>python script.py\n</code></pre> <p>Take your time to analyze step by step the process of converting .psf/.crd files intoa  GROMACS topology  with ParmEd.</p> <pre><code># import ParmEd module\nimport parmed as pmd\n\n# load psf file\npsf = pmd.load_file('step3_input.psf')\n\n#load coordinate file\npsf.coordinates = pmd.load_file('step3_input.crd').coordinates\n\n# strip ions and water\npsf.strip(':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR')\n\n# load Charmm Parameter Set. Make sure to include all the necessary force filed files in this list\nparams = pmd.charmm.CharmmParameterSet('toppar/par_all36_carb.prm',\n                                       'toppar/par_all36_cgenff.prm',\n                                       'toppar/par_all36_lipid.prm',\n                                       'toppar/par_all36m_prot.prm',\n                                       'toppar/par_all36_na.prm',\n                                       'toppar/par_interface.prm',\n                                       'toppar/toppar_water_ions.str')\npsf.load_parameters(params)\n\n# save GROMACS topology file\npsf.save('gromacs.top')\n</code></pre> <p>The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use <code>make_ndx</code> from GROMACS and the MD Structure+mass(db) that was generated previously.</p> <pre><code>Press enter after every command line\n\n    gmx make_ndx -f gromacs.pdb -o index.ndx\n    &gt;a 1-3234\n    &gt;a 3235-5044\n    &gt;a 5045-7116\n    &gt;10|12\n    &gt;q\n</code></pre> <p>After this, there should be four new groups (10, 11, 12, 13) in the index file. The groups 10, 11, and 12  contain the atoms from chain A, B ,and C, respectively. The group 13 (a_1-3234_a_5045-7116) resulting  from the union of chain A + C, contains the atoms belonging to chain A and C, and will be the receptor in  this case.</p> <p>Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 13 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 13 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre>"},{"location":"examples/psf_dcd/multicomponent_system/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>gromacs.pdb</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>13 11</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a  salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/psf_dcd/protein_ligand/","title":"Protein-ligand binding free energy calculations with psf_dcd files","text":"<p>Info</p> <p>This example can be found in the examples/psf_dcd/protein_ligand directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific  folder from gmx_MMPBSA GitHub repository.</p> <p>In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to  check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files  required for running gmx_MMPBSA.</p> <p>Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here.</p>"},{"location":"examples/psf_dcd/protein_ligand/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed A trajectory file <code>xtc</code> <code>pdb</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder The MD Structure+mass(db) file <code>pdb</code> Structure file containing the system coordinates An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Steps to generate gmx_MMPBSA files</p> 1- The input file <code>*.in</code>2- The trajectory file3- The topology and the MD Structure+mass(db) files4- The index file <p>The input file <code>*.in</code> is already included in the tutorial folder, although it can be easily generated using  <code>--create_input</code> command. The <code>*.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Input file generated by gmx_MMPBSA (v1.5.0.3)\nBe careful with the variables you modify, some can have severe consequences on the results you obtain.\n\n# General namelist variables\n&amp;general\n  sys_name             = \"\"                                             # System name\n  startframe           = 5                                           # FIRST FRAME TO ANALYZE\n  endframe             = 15                                          # LAST FRAME TO ANALYZE\n  interval             = 1                                              # Number of frames between adjacent frames analyzed\n  forcefields          = \"oldff/leaprc.ff99SB,leaprc.gaff\"           # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY)\n  ions_parameters      = 1                                              # Define ions parameters to build the Amber topology\n  PBRadii              = 3                                              # Define PBRadii to build amber topology from GROMACS files\n  temperature          = 298.15                                         # Temperature\n  qh_entropy           = 0                                              # Do quasi-harmonic calculation\n  interaction_entropy  = 0                                              # Do Interaction Entropy calculation\n  ie_segment           = 25                                             # Trajectory segment to calculate interaction entropy\n  c2_entropy           = 0                                              # Do C2 Entropy calculation\n  assign_chainID       = 0                                           # ASSIGN CHAINS ID\n  exp_ki               = 0.0                                            # Experimental Ki in nM\n  full_traj            = 0                                              # Print a full traj. AND the thread trajectories\n  gmx_path             = \"\"                                             # Force to use this path to get GROMACS executable\n  keep_files           = 2                                              # How many files to keep after successful completion\n  netcdf               = 0                                              # Use NetCDF intermediate trajectories\n  solvated_trajectory  = 1                                              # Define if it is necessary to cleanup the trajectories\n  verbose              = 1                                              # How many energy terms to print in the final output\n/\n\n# (AMBER) Generalized-Born namelist variables\n&amp;gb\n  igb                  = 5                                              # GB model to use\n  intdiel              = 1.0                                            # Internal dielectric constant for sander\n  extdiel              = 78.5                                           # External dielectric constant for sander\n  saltcon              = 0.15                                        # SALT CONCENTRATION (M)\n  surften              = 0.0072                                         # Surface tension\n  surfoff              = 0.0                                            # Surface tension offset\n  molsurf              = 0                                              # Use Connelly surface ('molsurf' program)\n  msoffset             = 0.0                                            # Offset for molsurf calculation\n  probe                = 1.4                                            # Solvent probe radius for surface area calc\n  ifqnt                = 0                                              # Use QM on part of the system\n  qm_theory            = \"\"                                             # Semi-empirical QM theory to use\n  qm_residues          = \"\"                                             # Residues to treat with QM\n  qmcharge_com         = 0                                              # Charge of QM region in complex\n  qmcharge_lig         = 0                                              # Charge of QM region in ligand\n  qmcharge_rec         = 0                                              # Charge of QM region in receptor\n  qmcut                = 9999.0                                         # Cutoff in the QM region\n/\n</code></pre> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p> <p>We are going to use <code>cpptraj</code> program from Amber to process the *.psf and *.dcd files:</p> <pre><code>Press enter after every command line\n\n    cpptraj -p step3_input.psf\n    &gt;trajin traj.dcd\n    &gt;strip :POT,CLA,TIP3,SOD\n    &gt;trajout traj.xtc\n    &gt;run\n    &gt;exit\n</code></pre> <p>After executing these commands, there should be a new file in te folder, i.e. <code>traj.xtc</code> that is going to  be used as the trajectory file.</p> <p>Keep in mind</p> <p>For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD  folder have the <code>ATOM</code> section commented with the <code>!</code> symbol:</p> <pre><code>!ATOMS\n!MASS  -1  H          1.00800 ! polar H\n!MASS  -1  HC         1.00800 ! N-ter H\n!MASS  -1  HA         1.00800 ! nonpolar H\n!MASS  -1  HP         1.00800 ! aromatic H\n!MASS  -1  HB1        1.00800 ! backbone H\n!MASS  -1  HB2        1.00800 ! aliphatic backbone H, to CT2\n!MASS  -1  HR1        1.00800 ! his he1, (+) his HG,HD2\n...\n</code></pre> <p>This section can't be commented on for the purpose of this tutorial, thus you can either use a files with  the <code>ATOM</code> section uncommented or just uncomment the section yourself:</p> <pre><code>ATOMS\nMASS  -1  H          1.00800 ! polar H\nMASS  -1  HC         1.00800 ! N-ter H\nMASS  -1  HA         1.00800 ! nonpolar H\nMASS  -1  HP         1.00800 ! aromatic H\nMASS  -1  HB1        1.00800 ! backbone H\nMASS  -1  HB2        1.00800 ! aliphatic backbone H, to CT2\nMASS  -1  HR1        1.00800 ! his he1, (+) his HG,HD2\n...\n</code></pre> <p>We are going to use <code>ParmEd</code> to convert the *.psf file into a GROMACS topology file. To do so, use the  ParmEd script that is already included in the tutorial folder. </p> <pre><code>python script.py\n</code></pre> <p>Take your time to analyze step by step the process of converting .psf/.crd files intoa  GROMACS topology  with ParmEd.</p> <pre><code># import ParmEd module\nimport parmed as pmd\n\n# load psf file\npsf = pmd.load_file('step3_input.psf')\n\n#load coordinate file\npsf.coordinates = pmd.load_file('step3_input.crd').coordinates\n\n# strip ions and water\npsf.strip(':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR')\n\n# load Charmm Parameter Set. Make sure to include all the necessary force field files in this list\nparams = pmd.charmm.CharmmParameterSet('toppar/par_all36_carb.prm',\n                                       'toppar/par_all36_cgenff.prm',\n                                       'toppar/par_all36_lipid.prm',\n                                       'toppar/par_all36m_prot.prm',\n                                       'toppar/par_all36_na.prm',\n                                       'toppar/par_interface.prm',\n                                       'toppar/toppar_water_ions.str',\n                                       'toppar/ben.prm')\npsf.load_parameters(params)\n\n# save GROMACS topology file\npsf.save('gromacs.top')\npsf.save('gromacs.pdb')\n</code></pre> <p>The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use <code>make_ndx</code> from GROMACS and the MD Structure+mass(db) that was generated previously.</p> <pre><code>Press enter after every command line\n\n    gmx make_ndx -f gromacs.pdb -o index.ndx\n    &gt;q\n</code></pre> <p>In this case, there is no need to generate new groups as GROMACS is able to parse the receptor and ligand  atoms. The groups number 1 and 13 contain the receptor and the ligand atoms, respectively.</p> <p>Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 1 13 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 1 13 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre>"},{"location":"examples/psf_dcd/protein_ligand/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>gromacs.pdb</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>1 13</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a  salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"examples/psf_dcd/protein_protein/","title":"Protein-protein binding free energy calculations with psf_dcd files","text":"<p>Info</p> <p>This example can be found in the examples/psf_dcd/protein_protein directory in the repository folder. If you didn't use gmx_MMPBSA_test before, use downgit to download the specific  folder from gmx_MMPBSA GitHub repository.</p> <p>In this example we are going to generate gmx_MMPBSA input files from psf_dcd files. It is strongly recommended to  check how gmx_MMPBSA works before attempting any sort of calculations. See below the input files  required for running gmx_MMPBSA.</p> <p>Make sure to install gmx_MMPBSA in a dedicated conda environment as decribed here.</p>"},{"location":"examples/psf_dcd/protein_protein/#requirements","title":"Requirements","text":"<p>In this case, <code>gmx_MMPBSA</code> requires:</p> Input File required Required Type Description Input parameters file <code>in</code> Input file containing all the specifications regarding the type of calculation that is going to be performed The MD Structure+mass(db) file <code>pdb</code> Structure file containing the system coordinates A trajectory file <code>xtc</code> <code>pdb</code> Final GROMACS MD trajectory, fitted and with no pbc. A topology file <code>top</code> GROMACS topology file (The <code>* .itp</code> files defined in the topology must be in the same folder An index file <code>ndx</code> File containing the receptor and ligand in separated groups Receptor and ligand group <code>integers</code> Group numbers in the index files A Reference Structure file <code>pdb</code> Complex reference structure file (without hydrogens) with the desired assignment of chain ID and residue numbers <p> -&gt; Must be defined --  -&gt;  Optional, but recommended --  -&gt; Optional</p> <p>Steps to generate gmx_MMPBSA files</p> 1- The input file <code>*.in</code>2- The MD Structure+mass(db) and the trajectory files3- The topology file4- The index file <p>The input file <code>*.in</code> is already included in the tutorial folder, although it can be easily generated using  <code>--create_input</code> command. The <code>*.in</code> input file, is a text file containing the following lines:</p> Sample input file for GB calculation<pre><code>Input file generated by gmx_MMPBSA (v1.5.0.3)\nBe careful with the variables you modify, some can have severe consequences on the results you obtain.\n\n# General namelist variables\n&amp;general\n  sys_name             = \"\"                                             # System name\n  startframe           = 5                                           # FIRST FRAME TO ANALYZE\n  endframe             = 15                                          # LAST FRAME TO ANALYZE\n  interval             = 1                                              # Number of frames between adjacent frames analyzed\n  forcefields          = \"oldff/leaprc.ff99SB,leaprc.gaff\"           # Force field(IGNORED SINCE WE ARE DEFINING THE TOPOLOGY)\n  ions_parameters      = 1                                              # Define ions parameters to build the Amber topology\n  PBRadii              = 3                                              # Define PBRadii to build amber topology from GROMACS files\n  temperature          = 298.15                                         # Temperature\n  qh_entropy           = 0                                              # Do quasi-harmonic calculation\n  interaction_entropy  = 0                                              # Do Interaction Entropy calculation\n  ie_segment           = 25                                             # Trajectory segment to calculate interaction entropy\n  c2_entropy           = 0                                              # Do C2 Entropy calculation\n  assign_chainID       = 1                                           # ASSIGN CHAINS ID\n  exp_ki               = 0.0                                            # Experimental Ki in nM\n  full_traj            = 0                                              # Print a full traj. AND the thread trajectories\n  gmx_path             = \"\"                                             # Force to use this path to get GROMACS executable\n  keep_files           = 2                                              # How many files to keep after successful completion\n  netcdf               = 0                                              # Use NetCDF intermediate trajectories\n  solvated_trajectory  = 1                                              # Define if it is necessary to cleanup the trajectories\n  verbose              = 1                                              # How many energy terms to print in the final output\n/\n\n# (AMBER) Generalized-Born namelist variables\n&amp;gb\n  igb                  = 5                                              # GB model to use\n  intdiel              = 1.0                                            # Internal dielectric constant for sander\n  extdiel              = 78.5                                           # External dielectric constant for sander\n  saltcon              = 0.15                                        # SALT CONCENTRATION (M)\n  surften              = 0.0072                                         # Surface tension\n  surfoff              = 0.0                                            # Surface tension offset\n  molsurf              = 0                                              # Use Connelly surface ('molsurf' program)\n  msoffset             = 0.0                                            # Offset for molsurf calculation\n  probe                = 1.4                                            # Solvent probe radius for surface area calc\n  ifqnt                = 0                                              # Use QM on part of the system\n  qm_theory            = \"\"                                             # Semi-empirical QM theory to use\n  qm_residues          = \"\"                                             # Residues to treat with QM\n  qmcharge_com         = 0                                              # Charge of QM region in complex\n  qmcharge_lig         = 0                                              # Charge of QM region in ligand\n  qmcharge_rec         = 0                                              # Charge of QM region in receptor\n  qmcut                = 9999.0                                         # Cutoff in the QM region\n/\n</code></pre> <p>See a detailed list of all the options in <code>gmx_MMPBSA</code> input file here as well as several examples</p> <p>We are going to use <code>cpptraj</code> program from Amber to process the *.psf and *.dcd files:</p> <pre><code>Press enter after every command line\n\n    cpptraj -p step3_input.psf\n    &gt;trajin traj.dcd\n    &gt;strip :POT,CLA,TIP3,SOD\n    &gt;trajout gromacs.pdb onlyframes 1\n    &gt;trajout traj.xtc\n    &gt;run\n    &gt;exit\n</code></pre> <p>After executing these commands, there should be two new files in te folder, i.e. <code>gromacs.pdb</code> that is  going to be used as the MD Structure+mass(db) file, and <code>traj.xtc</code> that is going to be used as the  trajectory file.</p> <p>Keep in mind</p> <p>For some reason, when using charmm-gui to prepare the files, the toppar files that come inside the NAMD  folder have the <code>ATOM</code> section commented with the <code>!</code> symbol:</p> <pre><code>!ATOMS\n!MASS  -1  H          1.00800 ! polar H\n!MASS  -1  HC         1.00800 ! N-ter H\n!MASS  -1  HA         1.00800 ! nonpolar H\n!MASS  -1  HP         1.00800 ! aromatic H\n!MASS  -1  HB1        1.00800 ! backbone H\n!MASS  -1  HB2        1.00800 ! aliphatic backbone H, to CT2\n!MASS  -1  HR1        1.00800 ! his he1, (+) his HG,HD2\n...\n</code></pre> <p>This section can't be commented on for the purpose of this tutorial, thus you can either use a files with  the <code>ATOM</code> section uncommented or just uncomment the section yourself:</p> <pre><code>ATOMS\nMASS  -1  H          1.00800 ! polar H\nMASS  -1  HC         1.00800 ! N-ter H\nMASS  -1  HA         1.00800 ! nonpolar H\nMASS  -1  HP         1.00800 ! aromatic H\nMASS  -1  HB1        1.00800 ! backbone H\nMASS  -1  HB2        1.00800 ! aliphatic backbone H, to CT2\nMASS  -1  HR1        1.00800 ! his he1, (+) his HG,HD2\n...\n</code></pre> <p>We are going to use <code>ParmEd</code> to convert the *.psf file into a GROMACS topology file. To do so, use the  ParmEd script that is already included in the tutorial folder. </p> <pre><code>python script.py\n</code></pre> <p>Take your time to analyze step by step the process of converting .psf/.crd files intoa  GROMACS topology  with ParmEd.</p> <pre><code># import ParmEd module\nimport parmed as pmd\n\n# load psf file\npsf = pmd.load_file('step3_input.psf')\n\n#load coordinate file\npsf.coordinates = pmd.load_file('step3_input.crd').coordinates\n\n# strip ions and water\npsf.strip(':POT, CLA, TIP3, LIT, SOD, RUB, CES, BAR')\n\n# load Charmm Parameter Set. Make sure to include all the necessary force filed files in this list\nparams = pmd.charmm.CharmmParameterSet('toppar/par_all36_carb.prm',\n                                       'toppar/par_all36_cgenff.prm',\n                                       'toppar/par_all36_lipid.prm',\n                                       'toppar/par_all36m_prot.prm',\n                                       'toppar/par_all36_na.prm',\n                                       'toppar/par_interface.prm',\n                                       'toppar/toppar_water_ions.str')\npsf.load_parameters(params)\n\n# save GROMACS topology file\npsf.save('gromacs.top')\n</code></pre> <p>The last file we need to generate is the index file containing the groups with the receptor and ligand atoms. To do so, just use <code>make_ndx</code> from GROMACS and the MD Structure+mass(db) that was generated previously.</p> <pre><code>Press enter after every command line\n\n    gmx make_ndx -f gromacs.pdb -o index.ndx\n    &gt;a 1-3220\n    &gt;a 3221-4124\n    &gt;q\n</code></pre> <p>After this, there should be two new groups (10, 11) in the index file that contains atoms from 1 to 3220 for  the receptor and atoms 3221 to 4124 for the ligand.</p> <p>Once the gmx_MMPBSA files have been generated, the program can be run either in serial or in parallel:</p> SerialWith MPI <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 10 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre> <pre><code>mpirun -np 2 gmx_MMPBSA -O -i mmpbsa.in -cs gromacs.pdb -ct traj.xtc -ci index.ndx -cg 10 11 -cp gromacs.top -o FINAL_RESULTS_MMPBSA.dat -eo FINAL_RESULTS_MMPBSA.csv\n</code></pre>"},{"location":"examples/psf_dcd/protein_protein/#considerations","title":"Considerations","text":"<p>In this case, a single trajectory (ST) approximation is followed, which means the receptor and ligand structures and  trajectories will be obtained from that of the complex. To do so, an MD Structure+mass(db) file (<code>gromacs.pdb</code>), an  index file (<code>index.ndx</code>), a trajectory file (<code>traj.xtc</code>), and both the receptor and ligand group numbers in the index file (<code>10 11</code>) are needed. The <code>mmpbsa.in</code> input file will contain all the  parameters needed for the MM/PB(GB)SA calculation. In this case, 11 frames  are going to be used when performing the MM/PB(GB)SA calculation with the igb5 (GB-OBC2) model and a  salt concentration = 0.15M.</p> <p>A plain text output file with all the statistics (default: <code>FINAL_RESULTS_MMPBSA.dat</code>) and a CSV-format  output file containing all energy terms for every frame in every calculation will be saved. The file name in  '-eo' flag will be forced to end in [.csv] (<code>FINAL_RESULTS_MMPBSA.csv</code> in this case). This file is only written when  specified on the command-line.</p> <p>Note</p> <p>Once the calculation is done, the results can be analyzed in <code>gmx_MMPBSA_ana</code> (if <code>-nogui</code> flag was not used in the command-line).  Please, check the gmx_MMPBSA_ana section for more information</p>"},{"location":"getting-started/command-line/","title":"None","text":""},{"location":"getting-started/command-line/#xbfree-command-line","title":"xBFreE command-line","text":"<p>xBFreE divide en subcomandos los m\u00e9todos para el c\u00e1lculo de BFE como los programas de MD. Para simplificar la  escritura, la aplicaci\u00f3n la nombramos como <code>xbfree</code>.</p> <pre><code>// All flags available in **xBFreE** are shown below:\n\n$ xbfree -h\n\nusage: run_cmd.py [-h] [-v] {gmx_MMPBSA,amber_MMPBSA,namd_MMPBSA,charmm_MMPBSA} ...\n\nxBFreEnergy is a tool to compute Binding Free Energy with different methods including MMPBSA and LIE\n\npositional arguments:\n  {gmx_MMPBSA,amber_MMPBSA,namd_MMPBSA,charmm_MMPBSA}\n                        Methods to compute Binding Free Energy\n    gmx_MMPBSA          MMPBSA calculations for GROMACS\n    amber_MMPBSA        MMPBSA calculations for AMBER\n    namd_MMPBSA         MMPBSA calculations for NAMD\n    charmm_MMPBSA       MMPBSA calculations for CHARMM\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n\nxBFreEnergy is a tool to compute Binding Free Energy with different methods including MMPBSA and LIE\n</code></pre>"},{"location":"getting-started/command-line/#sub-commands-structure","title":"Sub-commands structure","text":"<p>Each subcommand has their own arguments according to the MD program and method selected. However, we decide to make  some arguments redundant to simplify the command-line instructions and keep similar to gmx_MMPBSA. Take a look at  the example below </p> GROMACSAMBERNAMDCHARMM <p> <pre><code>// All flags available in **xBFreE** are shown below:\n\n$ xbfree gmx_MMPBSA -h\n\nusage: ...\n\nThis is the core of gmx_MMPBSA and it will do all the calculations\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -O, --overwrite       Allow output files to be overwritten\n  --create_input [{gb,pb,rism,ala,decomp,nmode,gbnsr6,all} ...]\n                        Create an new input file with selected calculation type.\n  --rewrite-output      Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files.\n  -s, --stability       Perform stability calculation. Only the complex parameters are required. In any other case receptor and ligand parameters will be ignored\n  -ng, --nogui          No open gmx_MMPBSA_ana after all calculations finished\n  -v, --version         show program's version number and exit\n\nInput and Output Files:\n  These options specify the input files and optional output files.\n\n  -i FILE               MM/PBSA input file.\n  -xvvfile XVVFILE      XVV file for 3D-RISM.\n  -o FILE               Output file with selected method (MMPBSA or LIE) statistics.\n  -do FILE              Output file for decomposition statistics summary.\n  -eo FILE              CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n  -deo FILE             CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n\n&lt; Gromacs specific arguments &gt;\n\nMiscellaneous Options:\n  -prefix &lt;file prefix&gt;\n                        Prefix for intermediate files.\n  --input-file-help     Print all available options in the input file.\n  --clean               Clean temporary files and quit.\n\nxBFreEnergy is a tool to compute Binding Free Enrgy with different methods including MMPBSA and LIE\n</code></pre> </p> <p> <pre><code>// All flags available in **xBFreE** are shown below:\n\n$ xbfree amber_MMPBSA -h\n\nusage: ...\n\nThis is the core of gmx_MMPBSA and it will do all the calculations\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -O, --overwrite       Allow output files to be overwritten\n  --create_input [{gb,pb,rism,ala,decomp,nmode,gbnsr6,all} ...]\n                        Create an new input file with selected calculation type.\n  --rewrite-output      Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files.\n  -s, --stability       Perform stability calculation. Only the complex parameters are required. In any other case receptor and ligand parameters will be ignored\n  -ng, --nogui          No open gmx_MMPBSA_ana after all calculations finished\n  -v, --version         show program's version number and exit\n\nInput and Output Files:\n  These options specify the input files and optional output files.\n\n  -i FILE               MM/PBSA input file.\n  -xvvfile XVVFILE      XVV file for 3D-RISM.\n  -o FILE               Output file with selected method (MMPBSA or LIE) statistics.\n  -do FILE              Output file for decomposition statistics summary.\n  -eo FILE              CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n  -deo FILE             CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n\n&lt; Amber specific arguments &gt;\n\nMiscellaneous Options:\n  -prefix &lt;file prefix&gt;\n                        Prefix for intermediate files.\n  --input-file-help     Print all available options in the input file.\n  --clean               Clean temporary files and quit.\n\nxBFreEnergy is a tool to compute Binding Free Enrgy with different methods including MMPBSA and LIE\n</code></pre> </p> <p> <pre><code>// All flags available in **xBFreE** are shown below:\n\n$ xbfree namd_MMPBSA -h\n\nusage: ...\n\nThis is the core of gmx_MMPBSA and it will do all the calculations\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -O, --overwrite       Allow output files to be overwritten\n  --create_input [{gb,pb,rism,ala,decomp,nmode,gbnsr6,all} ...]\n                        Create an new input file with selected calculation type.\n  --rewrite-output      Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files.\n  -s, --stability       Perform stability calculation. Only the complex parameters are required. In any other case receptor and ligand parameters will be ignored\n  -ng, --nogui          No open gmx_MMPBSA_ana after all calculations finished\n  -v, --version         show program's version number and exit\n\nInput and Output Files:\n  These options specify the input files and optional output files.\n\n  -i FILE               MM/PBSA input file.\n  -xvvfile XVVFILE      XVV file for 3D-RISM.\n  -o FILE               Output file with selected method (MMPBSA or LIE) statistics.\n  -do FILE              Output file for decomposition statistics summary.\n  -eo FILE              CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n  -deo FILE             CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n\n&lt; NAMD specific arguments &gt;\n\nMiscellaneous Options:\n  -prefix &lt;file prefix&gt;\n                        Prefix for intermediate files.\n  --input-file-help     Print all available options in the input file.\n  --clean               Clean temporary files and quit.\n\nxBFreEnergy is a tool to compute Binding Free Enrgy with different methods including MMPBSA and LIE\n</code></pre> </p> <p> <pre><code>// All flags available in **xBFreE** are shown below:\n\n$ xbfree charmm_MMPBSA -h\n\nusage: ...\n\nThis is the core of gmx_MMPBSA and it will do all the calculations\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -O, --overwrite       Allow output files to be overwritten\n  --create_input [{gb,pb,rism,ala,decomp,nmode,gbnsr6,all} ...]\n                        Create an new input file with selected calculation type.\n  --rewrite-output      Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files.\n  -s, --stability       Perform stability calculation. Only the complex parameters are required. In any other case receptor and ligand parameters will be ignored\n  -ng, --nogui          No open gmx_MMPBSA_ana after all calculations finished\n  -v, --version         show program's version number and exit\n\nInput and Output Files:\n  These options specify the input files and optional output files.\n\n  -i FILE               MM/PBSA input file.\n  -xvvfile XVVFILE      XVV file for 3D-RISM.\n  -o FILE               Output file with selected method (MMPBSA or LIE) statistics.\n  -do FILE              Output file for decomposition statistics summary.\n  -eo FILE              CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n  -deo FILE             CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n\n&lt; CHARMM specific arguments &gt;\n\nMiscellaneous Options:\n  -prefix &lt;file prefix&gt;\n                        Prefix for intermediate files.\n  --input-file-help     Print all available options in the input file.\n  --clean               Clean temporary files and quit.\n\nxBFreEnergy is a tool to compute Binding Free Enrgy with different methods including MMPBSA and LIE\n</code></pre> </p>"},{"location":"getting-started/getting-started/","title":"Getting started","text":""},{"location":"getting-started/getting-started/#what-is-xbfree","title":"What is xBFreE?","text":"<p>xBFreE [ x (any BFE method) **B**inding **Fre**e **E**nergy) is a robust tool to compute the Binding Free  Energy (BFE) with multiples method for the most popular Molecular Dynamics Programs. xBFreE is not only the natural  evolution of gmx_MMPBSA, but also an ambitious project to democratice any BFE method in easy-to-use and better way.</p> <p>Cite xBFreE</p> <p>Coming soon!</p> <p>Please, consider also citing gmx_MMPBSA</p> <p></p> <p><code>gmx_MMPBSA</code> official paper has been published on Journal of Chemical Theory and Computation and can be accessed  here. If you use <code>gmx_MMPBSA</code>, please cite it as follows:</p> <p>Vald\u00e9s-Tresanco, M.S., Vald\u00e9s-Tresanco, M.E., Valiente, P.A. and Moreno E. gmx_MMPBSA: A New Tool to Perform  End-State Free Energy Calculations with GROMACS. Journal of Chemical Theory and Computation, 2021 17 (10), 6281-6291.  https://pubs.acs.org/doi/10.1021/acs.jctc.1c00645. </p> <p>Download | *.bib | *.ris</p> <p>Please, visit Cite gmx_MMPBSA page for more information on how to cite gmx_MMPBSA and the  programs/methods implemented in it.</p>"},{"location":"getting-started/getting-started/#which-md-programs-are-supported","title":"Which MD programs are supported?","text":"<p>Currently, we support four (4) MD programs: </p> GROMACS AMBER NAMD CHARMM <code>gmx</code> <code>amber</code> <code>namd</code> <code>charmm</code>"},{"location":"getting-started/getting-started/#what-can-be-done-with-xbfree","title":"What can be done with xBFreE?","text":"<p>Multiple calculations can be performed with xBFreE such as:</p> <ul> <li>At the moment only MMPBSA methodologies<sup>1</sup> can be performed.</li> </ul>"},{"location":"getting-started/getting-started/#xbfree-a-quick-overview","title":"xBFreE a quick overview","text":"<p>xBFreE is a python application that carries out several BFE calculations. The xBFreE results can  be analyzed with xBFreE-Analyzer which provides an intuitive way to analyze the data through  visually and well-structured charts and save high-quality pictures. You can test if your xBFreE installation  work well using xBFreE-Tester by running one or more  available examples in xBFreE.</p>"},{"location":"getting-started/getting-started/#installation","title":"Installation","text":"<p>Ready to use xBFreE \ud83d\ude00? Check the installation page</p>"},{"location":"getting-started/getting-started/#need-help","title":"Need help?","text":"<p>Help section contains the most frequently asked questions and errors. Also, look at our  Google group or the issues  section to find out about specific cases and others.</p> <p>If you have any question, doubt, suggestion or want to talk about any theme, please, consider open a new  discussion </p>"},{"location":"getting-started/getting-started/#follow-xbfree","title":"Follow xBFreE","text":"<p>Visit Pypi Stats or PePy to see how xBFreE is doing.</p>"},{"location":"getting-started/getting-started/#collaboration","title":"Collaboration","text":"<p>We are opened to any collaboration.  If you want to implement any method developed by your Lab we can help you. Also, if you are interested in including xBFreE in your divulgation program, we can help you to optimize the content and  including it in our oficial documentation.</p> <p>Feel free to contact us through our Google group (https://groups.google.com/x/xbfree) for more details...</p>"},{"location":"getting-started/getting-started/#acknowledgments","title":"Acknowledgments","text":"<ul> <li>First of all, to AMBER, GROMACS, NAMD and CHARM developers. Without their incredible and hard work, xBFreE would    not exist.</li> <li>To all researchers that help improving gmx_MMPBSA with comments, feedback, and bug reports.</li> <li>Jason Swails (Amber developer and ParmEd principal developer) for his continuous    support on ParmEd issues.</li> <li>Dr. Hymavathi Veeravarapu for helping with the introductory video for gmx_MMPBSA</li> </ul> <ul> <li>To the Open Source license of the JetBrains programs.</li> </ul> <ul> <li>To the Sourcery team for supporting us    with the Pro version.</li> </ul> <p>We hope that xBFreE will help you</p> <ol> <li> <p>Methodologies implemented in gmx_MMPBSA and others new specifics for this program\u00a0\u21a9</p> </li> </ol>"},{"location":"getting-started/installation/","title":"xBFreE Installation","text":"<p>Currently, xBFreE can be installed using three ways:</p> <ul> <li>Manual installation</li> <li>Docker Package (coming soon!)</li> <li>Singularity Package (coming soon!)</li> </ul>"},{"location":"getting-started/installation/#manual-installation","title":"Manual installation","text":"<p>You can carry out the installation of xBFreE in three ways: </p> <code>conda environment</code> (Recommended for PC installation) The conda environment provides a clean and efficient way of installing xBFreE. It also allows to have  different versions of xBFreE in isolated environments, thus reducing the possibility of incompatibility with  other packages. Installation time is also less since it does not require the compilation of AmberTools or GROMACS.  Miniconda Installation <p>Download and install Miniconda</p> <pre><code>$ curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n---&gt; 100%\n\n$ chmod +x Miniconda3-latest-Linux-x86_64.sh\n\n$ ./Miniconda3-latest-Linux-x86_64.sh\n---&gt; 100%\n\nSuccessful miniconda intallation\n</code></pre> Copy described intructions <pre><code>curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh   # (1)!\nchmod +x Miniconda3-latest-Linux-x86_64.sh                                      # (2)!\n./Miniconda3-latest-Linux-x86_64.sh                                             # (3)!\n</code></pre> <ol> <li>Download Miniconda installer</li> <li>Change permissions for the installer</li> <li>Execute and install miniconda</li> </ol> <code>virtual environment</code> (Recommended for HPC installation -- coming soon!) The virtual environment provides a clean and efficient way of installing xBFreE. It also allows to have  different versions of xBFreE in isolated environment, thus reducing the possibility of incompatibility with  other packages. Differently to <code>conda environment</code> this environment only contain python packages and not  pre-compiled libraries.   Require external dependencies <p>In HPC, the admin recommends using a virtual environment instead of conda to take advantage of optimized  compiled programs. In this case, you will require AmberTools, Gromacs, and other dependencies previously compiled  (generally as modules)   </p> <code>AmberTools compilation</code> (Recommended when you need to modify sander o compile AmberTools in a specific way) In this way, we assume that you have AmberTools compiled on your machine and that you want to do an installation  without worrying about enabling or disabling conda environments. It also involves user compilation of GROMACS, which  takes considerable installation time. This way also requires installed packages to be compatible and installation  errors are more frequent."},{"location":"getting-started/installation/#preparing-the-environment","title":"Preparing the environment","text":"<p>Before installing xBFreE we need to prepare the environment with all dependencies.</p> conda environmentAmberTools compilation <p>Important</p> <p>Make sure to have conda installed in your computer. </p> <code>*.yml file</code><code>pip</code> <p>Installing xBFreE using a requierement yml file. </p> <p> Download env.yml file</p> <pre><code>// Create a new environment and use the *.yml file to install dependencies\n$ conda env create -n xbfree-env --file env.yml\n\n// To use xBFreE, just activate the environment\n$ conda activate xbfree-env\n</code></pre> <p>Important</p> <p>The latest release of xBFreE available in PYPI will be installed</p> Copy described intructions <pre><code>conda env create -n xbfree-env --file env.yml                                    # (1)!\nconda activate xbfree-env                                                        # (2)!\n</code></pre> <ol> <li>Create the <code>xbfree-env</code> environment and use the *.yml file to install dependencies</li> <li>Activate <code>xbfree-env</code> environment</li> </ol> <p>Installing dependencies</p> <p><pre><code>// Update conda\n$ conda update conda\n\n// Create a new environment and activate it\n$ conda create -n xbfree-env python=3.9 -y -q \n$ conda activate xbfree-env\n\n// Install mpi4py and AmberTools\n$ conda install -c conda-forge mpi4py=3.1.3 ambertools=21.12 compilers=1.2.0 -y -q\n\n// Install updated version of ParmEd\n$ python -m pip install git+https://github.com/Valdes-Tresanco-MS/ParmEd.git@v3.4\n\n// Install PyQt5 required to use the GUI analyzer tool (xBFreE-Analyzer). Not needed for HPC\n$ python -m pip install pyqt5\n\n// (Optional) Install GROMACS\n$ conda install -c conda-forge gromacs==2022.4 -y -q\n\n// Install the latest version available in PYPI and xBFreE-Analyzer\n$ python -m pip install xbfree[xbfree-analyzer]\n</code></pre> </p> Copy described intructions <pre><code>conda update conda\nconda create -n xbfree-env python=3.9 -y -q                                      # (1)\nconda activate xbfree-env                                                        # (2)\nconda install -c conda-forge mpi4py=3.1.3 ambertools=21.12 compilers=1.2.0 -y -q      # (3)\npython -m pip install git+https://github.com/Valdes-Tresanco-MS/ParmEd.git@v3.4 # (4)\npython -m pip install pyqt5                                                     # (5)\n# Optional\nconda install -c conda-forge gromacs==2022.4 -y -q                                 # (6)\n</code></pre> <ol> <li>Create <code>xbfree-env</code> environment</li> <li>Activate <code>xbfree-env</code> environment</li> <li>Install dependencies</li> <li>Install ParmEd</li> <li>Install PyQt5 if you will use xBFreE-Analyzer</li> <li>(Optional) Install GROMACS if GROMACS is not installed in your machine</li> </ol> <p>Follow the oficial AmberTools installation according to your OS</p> <p>Note</p> <p>We asume that AmberTools and their shell environment are correctly configured</p> Rolling/stable releasedevelopment version <p>INSTALLATION <pre><code>// Install uodated ParmEd\n$ amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/ParmEd.git@v3.4\n// Install xBFreE\n$ amber.python -m pip install xBFreE                                               \n</code></pre> </p> <p>UPDATE <pre><code>// Update xBFreE\n$ amber.python -m pip install xBFreE -U\n</code></pre> </p> <p>Info</p> <p>Install xBFreE from PyPI PyPI has the latest version of xBFreE including stable and beta versions.</p> <p>INSTALLATION <pre><code>// Install updated ParmEd\n$ amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/ParmEd.git@v3.4\n// Install xBFreE\n$ amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/xBFreE     \n</code></pre> </p> <p>UPDATE <pre><code>amber.python -m pip install git+https://github.com/Valdes-Tresanco-MS/xBFreE -U\n</code></pre> </p> <p>Warning</p> <p>Install/update xBFreE from the master branch of GitHub repository. This version is only recommended  to test a new version or to try temporary solutions to reported bugs.</p> <p>Danger</p> <p>If you get an error related to installing <code>mpi4py</code>, you may want to install this package manually from  <code>conda-forge</code> as follows:</p> <pre><code>amber.conda install -c conda-forge mpi4py=3.1.3\n</code></pre> <p>If you get an error related to <code>pip</code>, you may want to install this package manually as follows:</p> <pre><code>amber.conda install pip\n</code></pre>"},{"location":"getting-started/installation/#installing-xbfree","title":"Installing xBFreE","text":"<p>The steps described below includes the installation of the latest xBFreE release. Here, we show you how  install/update other versions from PYPI or directly from the GitHub Repository</p> Rolling/stable releasedevelopment version <p>INSTALLATION <pre><code>// INSTALLATION\n$ python -m pip install xBFreE\n</code></pre> </p> <p>UPDATE <pre><code>// UPDATE\n$ python -m pip install xBFreE -U\n</code></pre> </p> <p>Info</p> <p>Install/update xBFreE from PyPI. PyPI has the latest version of xBFreE including stable  and beta versions.</p> <p>INSTALLATION <pre><code>// INSTALLATION\n$ python -m pip install git+https://github.com/xBFreEnergy/xBFreE.git\n</code></pre> </p> <p>UPDATE <pre><code>// UPDATE\n$ python -m pip install git+https://github.com/xBFreEnergy/xBFreE.git -U\n</code></pre> </p> <p>Warning</p> <p>Install xBFreE from the master branch of GitHub repository. This is only recommended  for testing new versions or temporary solutions to reported bugs.</p>"},{"location":"getting-started/installation/#docker-package","title":"Docker Package","text":"<p>Coming soon! sds</p>"},{"location":"getting-started/installation/#singularity-package","title":"Singularity Package","text":"<p>Coming soon!</p>"},{"location":"getting-started/installation/#testing-the-operation-of-xbfree","title":"Testing the operation of xBFreE","text":"<p>After preparing everything to run <code>xBFreE</code>, it only remains to check its correct operation. To know how to do it,  consult the documentation of <code>xBFreE_test</code></p>"},{"location":"getting-started/summary/","title":"xBFreE in a nutshell","text":"<p>xBFreE implements all the features in gmx_MMPBSA with support for GROMACS, AMBER, NAMD, and CHARMM. For now, this  includes only MMPBSA and its derivatives as methods for calculating binding free energy. We intend to implement  several more methods, such as LIE, FEP, TI, etc.</p>"},{"location":"getting-started/summary/#xbfree-general-workflow","title":"xBFreE general workflow","text":"<pre><code>flowchart TB\n    a1[xbfree]\n    subgraph MMPBSA\n    direction TB\n        m1{{gmx_MMPBSA}}\n        m2{{amber_MMPBSA}}\n        m3{{namd_MMPBSA}}\n        m4{{charmm_MMPBSA}}\n    end\n    a1 --&gt; m1\n    a1 --&gt; m2\n    a1 --&gt; m3\n    a1 --&gt; m4\n\n    m1 --&gt; f1[Calculation]\n    m2 --&gt; f1\n    m3 --&gt; f1\n    m4 --&gt; f1\n    f1 --&gt; g1[Results]</code></pre>"},{"location":"getting-started/summary/#types-of-calculations-you-can-do","title":"Types of calculations you can do","text":"<p>There are many options available in xBFreE. These are some calculations you can perform with xBFreE:</p>"},{"location":"getting-started/summary/#mmpbsa-calculations","title":"MMPBSA calculations","text":"<ul> <li>Normal binding free energies, with either PB, GB or 3D-RISM solvent models. Each can be done with either 1, 2, or 3 different trajectories. The complex trajectory must always be provided. Whichever trajectories of the  receptor and/or ligand that are NOT specified will be extracted from that of the complex. This allows a 1-,  2-, or 3-trajectory analysis. All PB calculations and GB models are performed via the sander program. Calculations  with 3D-RISM solvent model are performed with <code>rism3d.snglpnt</code> built with AmberTools.</li> <li>Stability calculations with any solvent model (i.e PB, GB or 3D-RISM).</li> <li>Alanine scanning with either PB or GB implicit solvent models. All trajectories will be mutated to match the mutated topology files, and whichever calculations that would be carried out for the normal systems are also carried out for the mutated systems. Note that only 1 mutation is allowed per simulation, and it must be to an alanine or glycine. If <code>mutant_only</code> variable is not set to 1, differences resulting from the mutations are  calculated.</li> <li>Entropy corrections. An entropy term can be added to the free energies calculated above using either the quasi-harmonic, the normal mode, interaction entropy or C2 approximations. Calculations will be performed for the normal  and mutated systems (alanine scanning) as requested. Normal mode calculations are done with the <code>mmpbsa_py_nabnmode</code> program included with AmberTools.</li> <li>Decomposition schemes. The energy terms will be decomposed according to the decomposition scheme (per-residue or  per-wise) outlined in the <code>idecomp</code> variable description. This should work with all the above, though entropy terms cannot be decomposed.</li> <li>QM/MMGBSA. This is a binding free energy (or stability calculation) using the Generalized Born solvent model allowing you to treat part of your system with a quantum mechanical Hamiltonian.</li> <li>Support for Membrane Proteins. Calculate the MMPBSA binding free energy for a ligand bound to a protein that is embedded into a membrane. In this case, the membrane is implemented as a slab-like region with a uniform or  heterogeneous dielectric constant depth profile.</li> </ul>"},{"location":"getting-started/summary/#lie-calculations","title":"LIE calculations","text":"<p>Coming soon!</p>"},{"location":"getting-started/summary/#fep-calculations","title":"FEP calculations","text":"<p>Coming soon!</p>"},{"location":"getting-started/summary/#ti-calculations","title":"TI calculations","text":"<p>Coming soon!</p>"},{"location":"getting-started/summary/#xbfree-a-technical-view","title":"xBFreE a technical view","text":"<p>xBFreE is a python module that contains 2 applications: </p> <ul> <li>xbfree is the fundamental application and carries out all the calculations mentioned above</li> <li>xbfree-test is a tool designed to test if the installation was successful by running one or more available    examples in xBFreE.</li> </ul> <p>Important</p> <p>We decided to separate the GUI for analysis into a separate python package. In this way, each application can have  its own development, as well as better software development dynamics. Additionally, it can be installed  according to the user's need. For example, for HPC installations, xBFreE-Analyzer is not required, while  xBFreE does not need to be installed to analyze the results. In any case, xBFreE still retains the  ability to open xBFreE-Analyzer (whenever it is available) after finishing the calculation. Please, check  the xBFreE-Analyzer documentation for more information.</p> <ul> <li>xbfree-analyzer provides an intuitive way to analyze the data from xBFreE calculations and save    high-quality images</li> </ul>"},{"location":"mmpbsa/","title":"Help","text":"<p>Here you will find some of the most frequently asked questions and errors. Also, look at our  Google group or the issues section to find out about specific cases and others.</p> <p>If you still have doubts or cannot solve the problem, please consider opening an  issue or posting in our  Google group</p> <ul> <li>Installation</li> <li>OS issues </li> <li>Calculations</li> </ul>"},{"location":"mmpbsa/command-line/","title":"xBFreE command-line for MMPBSA calculations","text":"","tags":["MMPBSA","MMGBSA","Command-Line"]},{"location":"mmpbsa/command-line/#xbfree-command-line-for-mmpbsa-calculations","title":"xBFreE command-line for MMPBSA calculations","text":"<p>As we explain previously xBFreE uses subcommands for every BFE method and MD program. Here we show you the  options for every subcommand to perform BFE calculations using MMPBSA</p> <p>Each subcommand has their own arguments according to the MD program and method selected</p> GROMACSAMBERNAMDCHARMM <p>For gmx_MMPBSA users!</p> <p>This subcommand keeps the name and is similar to previous gmx_MMPBSA</p> <p> <pre><code>// All flags available in **xBFreE** are shown below:\n\n$ xbfree gmx_MMPBSA -h\n\nusage: run_cmd.py gmx_MMPBSA [-h] [-O] [--create_input [{gb,pb,rism,ala,decomp,nmode,gbnsr6,all} ...]] [--rewrite-output] [-s] [-ng] [-i FILE] [-xvvfile XVVFILE] [-o FILE] [-do FILE] [-eo FILE] [-deo FILE] [-v]\n                             [-cs &lt;Structure File&gt;] [-ci &lt;Index File&gt;] [-cg index index] [-ct [TRJ ...]] [-cp &lt;Topology&gt;] [-cr &lt;PDB File&gt;] [-rs &lt;Structure File&gt;] [-ri &lt;Index File&gt;] [-rg index] [-rt [TRJ ...]] [-rp &lt;Topology&gt;]\n                             [-ls &lt;Structure File&gt;] [-li &lt;Index File&gt;] [-lg index] [-lt [TRJ ...]] [-lp &lt;Topology&gt;] [-prefix &lt;file prefix&gt;] [--input-file-help] [--clean]\n\nThis is the core of gmx_MMPBSA and it will do all the calculations\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -O, --overwrite       Allow output files to be overwritten\n  --create_input [{gb,pb,rism,ala,decomp,nmode,gbnsr6,all} ...]\n                        Create an new input file with selected calculation type.\n  --rewrite-output      Do not re-run any calculations, just parse the output files from the previous calculation and rewrite the output files.\n  -s, --stability       Perform stability calculation. Only the complex parameters are required. In any other case receptor and ligand parameters will be ignored\n  -ng, --nogui          No open gmx_MMPBSA_ana after all calculations finished\n  -v, --version         show program's version number and exit\n\nInput and Output Files:\n  These options specify the input files and optional output files.\n\n  -i FILE               MM/PBSA input file.\n  -xvvfile XVVFILE      XVV file for 3D-RISM.\n  -o FILE               Output file with selected method (MMPBSA or LIE) statistics.\n  -do FILE              Output file for decomposition statistics summary.\n  -eo FILE              CSV-format output of all energy terms for every frame in every calculation. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n  -deo FILE             CSV-format output of all energy terms for each printed residue in decomposition calculations. File name forced to end in [.csv]. This file is only written when specified on the command-line.\n\nComplex:\n  Complex files and info that are needed to perform the calculation. If the receptor and/or the ligand info is not defined, we generate them from that of the complex.\n\n  -cs &lt;Structure File&gt;  Structure file of the complex. Allowed formats: *.tpr (recommended), *.pdb\n  -ci &lt;Index File&gt;      Index file of the bound complex.\n  -cg index index       Groups of receptor and ligand in complex index file. The notation is as follows: \"-cg &lt;Receptor group&gt; &lt;Ligand group&gt;\", ie. -cg 1 13\n  -ct [TRJ ...]         Complex trajectories. Make sure the trajectory is fitted and pbc have been removed. Allowed formats: *.xtc (recommended), *.trr, *.pdb (specify as many as you'd like).\n  -cp &lt;Topology&gt;        The complex Topology file. When it is defined -lm option is not needed\n  -cr &lt;PDB File&gt;        Complex Reference Structure file. This option is optional but recommended (Use the PDB file used to generate the topology in GROMACS). If not defined, the chains ID assignment (if the structure used in -cs\n                        does not have chain IDs) will be done automatically according to the structure (can generate wrong mapping).\n\nReceptor:\n  Receptor files and info that are needed to perform the calculation. If the receptor info is not defined, we generate it from that of the complex.\n\n  -rs &lt;Structure File&gt;  Structure file of the unbound receptor for multiple trajectory approach. Allowed formats: *.tpr (recommended), *.pdb\n  -ri &lt;Index File&gt;      Index file of the unbound receptor.\n  -rg index             Receptor group in receptor index file. Notation: \"-lg &lt;Receptor group&gt;\", e.g. -rg 1\n  -rt [TRJ ...]         Input trajectories of the unbound receptor for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb, *.gro (specify as many as you'd like).\n  -rp &lt;Topology&gt;        Topology file of the receptor.\n\nLigand:\n  Ligand files and info that are needed to perform the calculation. If the ligand are not defined, we generate it from that of the complex.\n\n  -ls &lt;Structure File&gt;  Structure file of the unbound ligand for multiple trajectory approach. Allowed formats: *.tpr (recommended), *.pdb\n  -li &lt;Index File&gt;      Index file of the unbound ligand. Only if tpr file was define in -ls.\n  -lg index             Ligand group in ligand index file. Notation: \"-lg &lt;Ligand group&gt;\", e.g. -lg 13\n  -lt [TRJ ...]         Input trajectories of the unbound ligand for multiple trajectory approach. Allowed formats: *.xtc (recommended), *.trr, *.pdb, *.gro (specify as many as you'd like).\n  -lp &lt;Topology&gt;        Topology file of the ligand.\n\nMiscellaneous Options:\n  -prefix &lt;file prefix&gt;\n                        Prefix for intermediate files.\n  --input-file-help     Print all available options in the input file.\n  --clean               Clean temporary files and quit.\n\nxBFreEnergy is a tool to compute Binding Free Enrgy with different methods including MMPBSA and LIE\n</code></pre> </p>","tags":["MMPBSA","MMGBSA","Command-Line"]},{"location":"mmpbsa/howworks/","title":"How xBFreE (MMPBSA) works","text":"<p>xBFreE implements all the features in gmx_MMPBSA with support for GROMACS, AMBER, NAMD, and CHARMM. For now, this  includes only MMPBSA and its derivatives as methods for calculating binding free energy. </p>"},{"location":"mmpbsa/howworks/#general-workflow-for-mmpbsa-calculations","title":"General workflow for MMPBSA calculations","text":"<p>MMPBSA calculations can be divided into 2 parts as shown in figure 1. In the first part, <code>Preparation</code>, the  topologies and trajectories are generated, among other elements depending on the calculations and MD program, such as  the mutants for the alanine/glycine scanning or the list of interacting residues during decomposition analysis. In  the second part, <code>Calculation</code>, the binding free energies and/or entropies are estimated using the selected models. </p> <p>For gmx_MMPBSA users</p> <p>Note that the analysis of the results is now outside the xBFreE workflow. This is because we have  separated the xBFreE-Analyzer (formerly gmx_MMPBSA_ana) analysis tool as a independent module. See the  xBFreE-Analyzer documentation for more information.   </p> <pre><code>flowchart TD\n    subgraph preparation [Preparation]\n    A{{Complex}} --&gt;|ST or MT| D\n    A --&gt;|ST or MT| E\n    B{{Receptor}} --&gt;|MT| D\n    B --&gt;|MT| E\n    C{{Ligand}} --&gt;|MT| D\n    C --&gt;|MT| E\n\n    D[Topology] --&gt; N[Molecule Selection]\n    N --&gt;|Convert| I[Amber Topology]\n\n    E[Trajectory] --&gt; F[Clean up]\n    F --&gt; G[Fixed Trajectory]\n    end\n    G --&gt; H\n    I --&gt; H\n\n    subgraph calculation [Calculation]\n    H[Check Topologgy consistency] --&gt; J[Create Input for external programs]\n    J --&gt; K[Call external programs to calculate Energy and Entropy]\n    K --&gt; L[Calculate statistics]\n\n    end\n    L --&gt; M[Print final results]</code></pre> <p>Figure 1. xBFreE general workflow for MMPBSA calculations</p>"},{"location":"mmpbsa/howworks/#required-input-files","title":"Required input files","text":"<p>Currently, only AMBER and CHARMM force fields are officially supported. Depending on the MD program one or several  different files are required. </p> MD Program\\Flags -cp -cs -ct -cg -ci -cr GROMACS <code>*.top</code> <code>*.tpr</code>, <code>*.pdb</code> <code>*.xtc</code>, <code>*.trr</code> group number or name <code>*.ndx</code> <code>*.pdb</code> AMBER <code>*.prmtop</code>, <code>*.parm7</code> <code>*.pdb</code><sup>1</sup> <code>*.nc</code>, <code>*.crd</code>, <code>*.mdcrd</code> amber mask NAMD <code>*.psf</code>, <code>*.parm7</code> <code>*.pdb</code><sup>1</sup> <code>*.dcd</code> amber mask CHARMM <code>*.psf</code> <code>*.pdb</code><sup>1</sup> <code>*.dcd</code> amber mask <p>For gmx_MMPBSA users!</p> <p>Note that the generation of the Amber topology from structures is no longer supported. Now only the topology is  required, no matter which force field or MD program was used. This also removes some confusing flags and variables,  for example the <code>-lm</code> flag and the <code>forcefields</code> variable.   </p>"},{"location":"mmpbsa/howworks/#topology-preparation","title":"Topology preparation","text":"<p>In this section, we will go in detail about each file and what they are used for.</p> <pre><code>flowchart TD\n    subgraph input [Input]\n        a1{{\"GROMACS\\n(*.top)\"}}\n        b1{{\"AMBER\\n(*.prmtop, *.parm7)\"}}\n        c1{{\"CHARMM\\n(*.psf)\"}}\n        d1{{NAMD}} --&gt;|\"AMBER FF\\n (*.parm7)\"| b1\n        d1{{NAMD}} --&gt;|\"CHARMM FF\\n (*.psf)\"| c1\n    end\n\n    subgraph topology [Topology Preparation]\n        a1 --&gt; a2[Generate Custom Index]\n        b1 --&gt; c2[Get amber mask]\n        c1 --&gt; c2\n        a2 --&gt; common\n        c2 --&gt; common\n\n        subgraph common [Common steps]\n        b2[Generate pdb files]\n        g2[Check PDB consistency]\n        h2[Clean up the topology]\n        i2[Assign PBRadii]\n        j2[Convert topology]\n        k2[Save topology]\n        b2 --&gt; g2 --&gt; h2 --&gt; i2 --&gt; j2 --&gt; k2\n        end\n\n    end\n\n    k2 --&gt; a4[Amber Topolgy]</code></pre> <ol> <li> <p>This file is the unique reference for every subsequent calculation, selection, etc. Make sure that this PDB file   are consistent.\u00a0\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"mmpbsa/input_file/","title":"The input file","text":""},{"location":"mmpbsa/input_file/#description","title":"Description","text":"<p>xBFreE input file contains all the specifications for the MMPBSA calculations. The input file is syntactically  similar to other programs in Amber, although we incorporated a new format more similar to the one used on GROMACS *.mdp  files (see bleow). The input file contains sections called <code>namelist</code> where the variables are defined for each  calculation. The allowed namelists are:</p> <ul> <li><code>&amp;general</code>: contains variables that apply to all aspects of the    calculation or parameters required for building AMBER topologies from GROMACS files.</li> <li><code>&amp;gb</code>: unique variables to Generalized Born (GB) calculations.</li> <li><code>&amp;gbnsr6</code>: unique variables to GBNSR6 calculations.</li> <li><code>&amp;pb</code>: unique variables to Poisson Boltzmann (PB) calculations.</li> <li><code>&amp;rism</code>: unique variables to 3D-RISM calculations.</li> <li><code>&amp;alanine_scanning</code>: unique variables to alanine scanning    calculations.</li> <li><code>&amp;decomp</code>: unique variables to the decomposition scheme.</li> <li><code>&amp;nmode</code>: unique variables to the normal mode (NMODE) calculations used to    approximate vibrational entropies.</li> </ul>"},{"location":"mmpbsa/input_file/#generation-of-input-files-with-xbfree","title":"Generation of input files with xBFreE","text":"<p>The input file can be created using xBFreE by selecting the subcommand and the calculations you want to perform.</p> <p>Take a look at</p> <p>Note that the command-line is basically the same for all MD programs. They only differ in the subcommand  selected according to the MD program.</p> GROMACSAMBERNAMDCHARMM <p>Command-line<pre><code>xbfree gmx_MMPBSA --create_input args\n</code></pre> where <code>args</code> can be:  <code>gb</code>, <code>gbnsr6</code>, <code>pb</code>, <code>rism</code>, <code>ala</code>, <code>decomp</code>, <code>nmode</code>, <code>all</code></p> <p>Example:</p> GB calculationPB calculationGB, PB and Decomposition calculationsAll calculations <pre><code>xbfree gmx_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree gmx_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree gmx_MMPBSA --create_input gb pb decomp\n</code></pre> <pre><code>xbfree gmx_MMPBSA --create_input\n</code></pre> <p>or </p> <pre><code>xbfree gmx_MMPBSA --create_input all\n</code></pre> <p>Command-line<pre><code>xbfree amber_MMPBSA --create_input args\n</code></pre> where <code>args</code> can be:  <code>gb</code>, <code>gbnsr6</code>, <code>pb</code>, <code>rism</code>, <code>ala</code>, <code>decomp</code>, <code>nmode</code>, <code>all</code></p> <p>Example:</p> GB calculationPB calculationGB, PB and Decomposition calculationsAll calculations <pre><code>xbfree amber_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input gb pb decomp\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input\n</code></pre> <p>or </p> <pre><code>xbfree amber_MMPBSA --create_input all\n</code></pre> <p>Command-line<pre><code>xbfree namd_MMPBSA --create_input args\n</code></pre> where <code>args</code> can be:  <code>gb</code>, <code>gbnsr6</code>, <code>pb</code>, <code>rism</code>, <code>ala</code>, <code>decomp</code>, <code>nmode</code>, <code>all</code></p> <p>Example:</p> GB calculationPB calculationGB, PB and Decomposition calculationsAll calculations <pre><code>xbfree namd_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input gb pb decomp\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input\n</code></pre> <p>or </p> <pre><code>xbfree namd_MMPBSA --create_input all\n</code></pre> <p>Command-line<pre><code>xbfree charmm_MMPBSA --create_input args\n</code></pre> where <code>args</code> can be:  <code>gb</code>, <code>gbnsr6</code>, <code>pb</code>, <code>rism</code>, <code>ala</code>, <code>decomp</code>, <code>nmode</code>, <code>all</code></p> <p>Example:</p> GB calculationPB calculationGB, PB and Decomposition calculationsAll calculations <pre><code>xbfree charmm_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input gb pb decomp\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input\n</code></pre> <p>or </p> <pre><code>xbfree charmm_MMPBSA --create_input all\n</code></pre> <p>Danger</p> <ul> <li>Note that several variables must be explicitly defined in the input file</li> <li>Define all the calculations will take a long time, so take care when you define the calculation you want to  perform</li> </ul>"},{"location":"mmpbsa/input_file/#format","title":"Format","text":"<p>All the input variables are described below according to their respective namelists. Descriptions are taken from  original sources and modified accordingly when needed. All variables should be  set with <code>variable = value</code> and separated by commas is they appear in the same line. If the variables appear in different  lines, the comma is no longer needed. See several examples are shown below. As you will see, several  calculations can be performed in the same run (i.e. <code>&amp;gb</code> and <code>&amp;pb</code>; <code>&amp;gb</code> and <code>&amp;alanine_scanning</code>; <code>&amp;pb</code> and <code>&amp;decomp</code>; etc). As we have mentioned, the input file can be generated using the <code>create_input</code> option of  <code>xbfree &lt;subcommand&gt;</code>.  This style, while retaining the same Amber format (derived from Fortran), is aesthetically more familiar to the GROMACS style (<code>*.mdp</code>). However, it maintains the same essence, so it could be defined in any of the two format styles or even combined. See the formats below:</p> For gmx_MMPBSA and MMPBSA.py users! <p>Note that the string format no requires de single- or double-quotes. However, you can put them if you wish  </p> New format style Old format style New format style Input file example<pre><code># General namelist variables\n&amp;general\n  sys_name             = \"\"                      # System name\n  startframe           = 1                       # First frame to analyze\n  endframe             = 9999999                 # Last frame to analyze\n  ...\n  interval              = 1                      # The offset from which to choose frames from each trajectory file\n/\n\n# Generalized-Born namelist variables\n&amp;gb\n  igb                  = 5                       # GB model to use\n  ...\n  probe                = 1.4                     # Solvent probe radius for surface area calc\n/\n</code></pre> Old format style Input file example<pre><code># General namelist variables\n&amp;general\n  sys_name = \"\", startframe = 1, endframe = 9999999\n  ...\n  interval = 1\n/\n\n# Generalized-Born namelist variables\n&amp;gb\n  igb = 5, \n  ...\n  probe = 1.4\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#namelists","title":"Namelists","text":""},{"location":"mmpbsa/input_file/#general-namelist-variables","title":"<code>&amp;general</code> namelist variables","text":""},{"location":"mmpbsa/input_file/#basic-input-options","title":"Basic input options","text":"<code>sys_name</code> (Default = None) <p>Define the System Name. This is useful when trying to analyze several systems at the same time or calculating  the correlation between the predicted and the experimental energies. If the name is not defined, one will be assigned  when loading the system in <code>gmx_MMPBSA_ana</code> on the loading order.</p> <p>Tip</p> <p>The definition of the system name is entirely optional, however it can provide a better clarity during  the results analysis. All files associated with this system will be saved using its name.</p> <code>startframe</code> (Default = 1) The frame from which to begin extracting snapshots from the full, concatenated trajectory comprised of every trajectory file placed on the command-line. This is always the first frame read. <code>endframe</code> (Default = 9999999) The frame from which to stop extracting snapshots from the full, concatenated trajectory comprised of every trajectory file supplied on the command-line. <code>interval</code> (Default = 1) The offset from which to choose frames from each trajectory file. For example, an interval of 2 will pull every 2<sup>nd</sup> frame beginning at startframe and ending less than or equal to endframe."},{"location":"mmpbsa/input_file/#parameter-options","title":"Parameter options","text":"<code>temperature</code> (Default = 298.15) Specify the temperature (in K) used in the calculations. <code>PBRadii</code> (Default = \"mbondi2\") <p>PBRadii is the parameter that defines the radius that will be assigned to each atom during the calculation of  the solvation energy. You can combine multiple PBRadii for the same system!</p> Effect of radii on energy calculations <p>Depending on the method selected, this parameter will have a greater or lesser impact on the computed value.  While in PB, this will only be used to compute the non-polar solvation component (<code>ENPOLAR</code> and <code>EDISPER</code>). In  GB, it is used, in addition to the non-polar solvation component, to compute the effective Born radius. </p> For gmx_MMPBSA users! <p>Note that notation changes from number to string. We implemented a new function to assing radii, which allow  customs radii defined by de user (for example, add Au radii to the <code>mbondi</code> radii) through the file path.    </p> <ul> <li> <p><code>bondi</code></p> <code>bondi</code> radii set Description Recommended recommended when <code>igb = 7</code> Compatibility <code>bondi</code> is a generic radii type, which means that the radii is assigned by atom properties for any type of molecule Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination since <code>bondi</code> is a generic type, you can combine it with specific radii set (<code>tyl06</code> or <code>yamagishi</code>). Note you can't combine it with other generic radii or complete radii types. </li> <li> <p><code>mbondi</code></p> <code>mbondi</code> radii set Description Recommended recommended when <code>igb = 1</code> Compatibility <code>mbondi</code> is a generic radii type, which means that the radii is assigned by atom properties for any type of molecule Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination since <code>mbondi</code> is a generic type, you can combine it with specific radii set (<code>tyl06</code> or <code>yamagishi</code>). Note you can't combine it with other generic radii or complete radii types. </li> <li> <p><code>mbondi2</code></p> <code>mbondi2</code> radii set Description Recommended recommended when <code>igb = 2</code> or <code>igb = 5</code> Compatibility <code>mbondi2</code> is a generic radii type, which means that the radii is assigned by atom properties for any type of molecule Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination since <code>mbondi2</code> is a generic type, you can combine it with specific radii set (<code>tyl06</code> or <code>yamagishi</code>). Note you can't combine it with other generic radii or complete radii types. </li> <li> <p><code>mbondi3</code></p> <code>mbondi3</code> radii set Description Recommended recommended when <code>igb = 8</code> Compatibility <code>mbondi3</code> is a generic radii type, which means that the radii is assigned by atom properties for any type of molecule Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination since <code>mbondi3</code> is a generic type, you can combine it with specific radii set (<code>tyl06</code> or <code>yamagishi</code>). Note you can't combine it with other generic radii or complete radii types. </li> <li> <p><code>mbondi_pb2</code></p> <code>mbondi_pb2</code> radii set Description Recommended recommended when <code>igb = 1</code> Compatibility <code>mbondi_pb2</code> is a generic radii type, which means that the radii is assigned by atom properties for any type of molecule Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination since <code>mbondi_pb2</code> is a generic type, you can combine it with specific radii set (<code>tyl06</code> or <code>yamagishi</code>). Note you can't combine it with other generic radii or complete radii types. <p>It is based on mbondi radii set and contains a  new optimized set of halogen PB radii for halogenated  compounds (without extra point (EP) of charge) parametrized with General Amber Force Field (GAFF):</p> <p>Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP:</p> <ul> <li>Cl: 1.76</li> <li>Br: 1.97</li> <li>I: 2.09</li> </ul> <p>This radii set should be used with the following PBSA setup:</p> <pre><code>Sample input file for PB calculation with halogenated compounds\n\n&amp;general\nsys_name=\"PB_Halogens\",\nPBRadii=\"mbondi_pb2\",\n/\n&amp;pb\nradiopt=0, istrng=0.150, inp=1,\n/\n</code></pre> </li> <li> <p><code>mbondi_pb3</code></p> <code>mbondi_pb3</code> radii set Description Recommended recommended when <code>igb = 1</code> Compatibility <code>mbondi_pb3</code> is a generic radii type, which means that the radii is assigned by atom properties for any type of molecule Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination since <code>mbondi_pb3</code> is a generic type, you can combine it with specific radii set (<code>tyl06</code> or <code>yamagishi</code>). Note you can't combine it with other generic radii or complete radii types. <p>It is based on mbondi radii set and contains a new optimized set of halogen PB radii for halogenated  compounds (without extra point (EP) of charge) parametrized with General Amber Force Field (GAFF):</p> <p>Values from Table 3 in \u00a73.1 Halogen Radii Optimization Without EP:</p> <ul> <li>Cl: 2.20</li> <li>Br: 2.04</li> <li>I: 2.19</li> </ul> <p>This radii set should be used with the following PBSA setup:</p> <pre><code>Sample input file for PB calculation with halogenated compounds\n\n&amp;general\nsys_name=\"PB_Halogens\",\nPBRadii=\"mbondi_pb3\",\n/\n&amp;pb\nradiopt=0, istrng=0.150, inp=1,\n/\n</code></pre> </li> <li> <p><code>charmm_radii</code></p> <code>charmm_radii</code> radii set Description Recommended recommended for CHARMM force field only. Compatible with &amp;pb only Compatibility <code>charmm_radii</code> is a complete radii type, which means that it contain radii for protein, nucleic acids, ligands and lipids molecules Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination can't be combined <p>This atomic radii set for Poisson-Boltzmann calculations has been derived from average solvent  electrostatic charge distribution with explicit solvent. The accuracy has been tested with free energy  perturbation with explicit solvent. Most of the values were taken from a *radii.str file used in PBEQ  Solver in charmm-gui.</p> <ul> <li>Radii for protein atoms in 20 standard amino acids from Nina, Belogv, and Roux</li> <li>Radii for nucleic acid atoms (RNA and DNA) from Banavali and Roux</li> <li>Halogens and other atoms from Fortuna and Costa</li> </ul> </li> <li> <p><code>tyl06</code> </p> <code>tyl06</code> radii set Description Recommended recommended for protein and nucleic acids only. Recommended when <code>inp=2</code> Compatibility <code>tyl06</code> is a semi-complete radii type, which means that it contain radii for protein and nucleic acids molecules Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination can be combined with any generic radii set, for example, mbondi, mbondi2, etc. <p>The Tan, Yang &amp; Luo radii are optimized for Amber atom types as in standard residues from the Amber  database. Please see the original study on how these radii are optimized.</p> For Amber users! <p>Note that this radii is the same applied when <code>radiopt=1</code>. However, as radiopt is not available in xbfree  due to possible fails if the system contains other molecules types in addition to proteins and nucleic  acids, then you have to apply it manually.  </p> </li> <li> <p><code>yamagishi</code> </p> <code>yamagishi</code> radii set Description Recommended recommended for protein and nucleic acids only. Compatibility <code>yamagishi</code> is a semi-complete radii type, which means that it contain radii for protein and nucleic acids molecules Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination can be combined with any generic radii set, for example, mbondi, mbondi2, etc. <p>The Yamgishi radii are optimized for Amber atom types as in standard residues from the Amber  database. Please see the original study on how these radii are optimized.</p> </li> <li> <p><code>custom</code> </p> Defining a <code>custom</code> radii set Description Recommended it dependents of radii set type. Compatibility it dependents of radii set type. Modification you can add parameters for new atoms or modify existing ones. Please see how to do it here Combination it dependents of radii set type. <p>You can define a new custom radii set defining the path to the radii file (*.json) as follows: <code>PBRadii = /home/user/wdir/custom_radii.json</code> This allows you to define specific parameters for new atoms, change existing ones, or define your set of  optimized radii. Please see \"How to create a custom radio set\"</p> </li> </ul>"},{"location":"mmpbsa/input_file/#entropy-options","title":"Entropy options","text":"<code>qh_entropy</code> (Default = 0) <p>It specifies whether to perform a quasi-harmonic entropy (QH) approximation with <code>cpptraj</code> or not.</p> <ul> <li>0: Don\u2019t</li> <li>1: perform QH</li> </ul> <p>Keep in mind</p> <ul> <li>The number of frames used for QH analyses should be higher than 3N, N being the number of atoms in the  complex</li> <li>Check this thread for more info on QH analysis</li> </ul> <code>interaction_entropy</code> (default = 0) <p>It specifies whether to use the Interaction Entropy (IE) approximation.</p> <ul> <li>0: Don\u2019t</li> <li>1: perform IE</li> </ul> <p>Keep in mind</p> <ul> <li>The Interaction Entropy can be calculated independently of the solvent model used.</li> <li>A sample Interaction Entropy input file is shown here</li> <li>A tutorial on the use of Interaction Entropy is  available here</li> <li>The standard deviation of the interaction energy (<code>\u03c3IE</code>) should always be reported when using the Interaction  Entropy method.</li> <li>The Interaction Entropy method should be avoided if <code>\u03c3IE &gt; ~ 3.6 kcal/mol</code> because it is impossible to  converge the exponential average.</li> <li>It is advisable to study how the Interaction Entropy depends on N by block averaging (which also provide an  estimate of the precision of the calculated entropies).</li> <li>A sampling frequency of 10 fs, as reported in the original IE publication, seems to be 3\u201340 times too  dense. A sampling frequency of 0.1 ps would be more appropriate.</li> <li>The Interaction Entropy results may vary depending on the system flexibility or whether constraints were used  or not in the MD simulation. </li> </ul> <p>Please, check this paper for further details.</p> <code>ie_segment</code> (Default = 25) Representative segment (in %), starting from the last frame, for the calculation of the Interaction Entropy, e.g.: <code>ie_segment = 25</code> means that the last quartile of the total number of frames (<code>(endframe-startframe)/interval</code>) will be used to calculate the average Interaction Entropy. <code>c2_entropy</code> (default = 0) <p>It specifies whether to use the C2 Entropy approximation.</p> <ul> <li>0: Don\u2019t</li> <li>1: perform C2</li> </ul> <p>Keep in mind</p> <ul> <li>The C2 Entropy can be calculated independently of the solvent model used.</li> <li>A tutorial on the use of C2 Entropy is  available here</li> <li>The standard deviation of the interaction energy (<code>\u03c3IE</code>) should always be reported.</li> <li>The C2 Entropy method should be avoided if <code>\u03c3IE &gt; ~ 3.6 kcal/mol</code> because it gives unrealistically large  entropies.</li> <li>It is advisable to study how the C2 Entropy depends on N by block averaging (which also provide an  estimate of the precision of the calculated entropies).</li> <li>A sampling frequency of 10 fs, seems to be 3\u201340 times too dense. A sampling frequency of 0.1 ps would be more  appropriate.</li> <li>The C2 Entropy results may vary depending on the system flexibility or whether constraints were used  or not in the MD simulation.</li> </ul> <p>Please, check this paper for further details.</p>"},{"location":"mmpbsa/input_file/#miscellaneous-options","title":"Miscellaneous options","text":"<code>assign_chainID</code> (Default = 0) Defines the chains ID assignment mode. It is ignored when defining a reference structure (recommended). If <code>assign_chainID = 1</code>, xBFreE check if the structure has no chains ID, and it is assigned  according to the structure<sup>1</sup>. If <code>assign_chainID = 2</code>, xBFreE assign the chains ID, exist or not,  according to the structure<sup>1</sup> (can generate inconsistencies). <code>exp_ki</code> (Default = 0.0) Specify the experimental Ki (in nM) for correlations analysis. If not defined or exp_ki = 0 then this system  will be omitted in the correlation analysis <code>full_traj</code> (Default = 0) <p>Print trajectories</p> <ul> <li>0: Print only thread trajectories in *.mdcrd format</li> <li>1: Print a full traj and the thread trajectories in *.mdcrd format</li> </ul> <code>exe_path</code> <p>Define a list of path to search for executables (gromacs, namd, delphi, etc.). This path takes precedence over the  paths defined in the PATH variable. Please,</p> <p>Keep in mind</p> <ul> <li>Note that if this variable is not defined, the necessary executables will be searched in the <code>PATH</code>.</li> <li>By defining this variable you can use other versions of the same program that are in other paths than the <code>PATH</code></li> </ul> <code>keep_files</code> (Default = 1) <p>Defines if temporary files will be deleted or not.</p> <ul> <li>0: Remove all temporary files </li> <li>1: Keep all temporary files</li> </ul> <p>Keep in mind</p> <ul> <li>Please note that temporary files may be required for compatibility with higher versions.</li> <li>If you remove the temporary files you won't be able to do --rewrite-output to change some aspects of the  output like verbose</li> </ul> For gmx_MMPBSA users! <p>Since we have improved the workflow to be more organized, this variable is different in gmx_MMPBSA. In this  case, the binary file becomes the output for the default analysis.</p> <code>netcdf</code> (Default = 0) <p>Specifies whether to use NetCDF trajectories internally rather than writing temporary ASCII trajectory files. For very large trajectories, this could offer significant speedups, and requires less temporary space.  However, this option is incompatible with alanine scanning.</p> <ul> <li>0: Do NOT use temporary NetCDF trajectories</li> <li>1: Use temporary NetCDF trajectories</li> </ul> <code>process_trajectory</code> (Default = 1) <p>Define if it is necessary to generate a clean trajectory, including remove water, ions or select molecules.</p> <ul> <li>0: Don\u2019t</li> <li>1: Generate clean trajectory</li> </ul> For gmx_MMPBSA users! <p>Replace <code>solvated_trajecotry</code>.</p> <code>verbose</code> (Default = 1) <p>Specifies how much output is printed in the output file.</p> <ul> <li>0: Print only difference terms</li> <li>1: Print all complex, receptor, ligand, and difference terms</li> </ul>"},{"location":"mmpbsa/input_file/#gb-namelist-variables","title":"<code>&amp;gb</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default GB input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input gb\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input gb\n</code></pre> </li> <li> <p>A sample GB input file is shown here</p> </li> <li>A tutorial on binding free energy calculation with GB model is available  here</li> </ul>"},{"location":"mmpbsa/input_file/#basic-input-options_1","title":"Basic input options","text":"<code>igb</code> (Default = 5) <p>Generalized Born method to use (see \u00a74 for more info).</p> <ul> <li>1: The Hawkins, Cramer, Truhlar pairwise GB model (GB-HCT)</li> <li>2: Modified GB model 1 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC1)</li> <li>5: Modified GB model 2 developed by A. Onufriev, D. Bashford and D.A. Case (GB-OBC2)</li> <li>7: GBn model described by Mongan, Simmerling, McCammon, Case and Onufriev (GB-Neck)</li> <li>8: Same GB functional form as the GBn model (igb=7), but with different parameters. Developed by Nguyen, P\u00e9rez,       Bermeo, and Simmerling (GB-Neck2)</li> </ul> <code>alpb</code> (Default = 0) <p>Use Analytical Linearized Poisson-Boltzmann (ALPB) approximation to handle electrostatic interactions  within the implicit solvent model (see \u00a74.2):</p> \\[ \u2206\ud835\udc3a_{el} \\approx \u2206\ud835\udc3a_{alpb} = -\\frac{1}{2} (\\frac{1}{\u03b5_{in}} - \\frac{1}{\u03b5_{ex}})\\frac{1}{1+\u03b1\u03b2} \\sum_{ij} q_{i}q_{j}(\\frac{1}{f_{GB}} + \\frac{\u03b1\u03b2}{A}) \\] <p>where \\(\u03b2 = \\frac{\u03b5_{in}}{\u03b5_{ex}}\\) is the ratio of the internal and external dielectrics, \\(\u03b1=0.571412\\), and A  is the so-called effective electrostatic size of the molecule (see <code>arad_method</code> below). The ALPB requires one  of the analytical GB models to be set, that is igb = 1, 2, 5, or 7, for computing the effective Born radii. It uses  the same sets of radii as required by the particular GB model.</p> <ul> <li>0: Don't</li> <li>1: Use ALPB</li> </ul> <code>arad_method</code> (Default = 1) <p>Method used to estimate the effective electrostatic size/radius (<code>A</code> in ALPB equation) of the molecule  (See Sigalov, Fenley, and Onufriev).</p> <ul> <li>1: Use structural invariants</li> <li>2: Use elementary functions</li> <li>3: Use elliptic integral (numerical)</li> </ul> <code>intdiel</code> (Default = 1.0) Define Internal dielectric constant. <code>extdiel</code> (Default = 78.5) Define External dielectric constant. <code>saltcon</code> (Default = 0.0) Salt concentration in Molarity (M). <code>rgbmax</code> (Default = 999.0) Distance cutoff in \u00c5 to use when computing effective GB radii. <code>surften</code> (Default = 0.0072) Surface tension value. Units in kcal/mol/\u00c5<sup>2</sup> <code>surfoff</code> (Default = 0.0) Offset to correct (by addition) the value of the non-polar contribution to the solvation free energy term. <code>molsurf</code> (Default = 0) <p>Define the algorithm to calculate the surface area for the non-polar solvation term.</p> <ul> <li>0: LCPO (Linear Combination of Pairwise Overlaps)</li> <li>1: molsurf algorithm</li> </ul> <code>msoffset</code> (Default = 0) Offset to apply to the individual atomic radii in the system when calculating the <code>molsurf</code> surface. See the description of the <code>molsurf</code> action command in cpptraj. <code>probe</code> (Default = 1.4) <p>Radius in \u00c5 of the probe molecule (supposed to be the size of a solvent molecule), to use when determining the  molecular surface.</p> <p>Note</p> <p>only applicable when <code>molsurf</code> is set to 1</p>"},{"location":"mmpbsa/input_file/#qm-options","title":"QM options","text":"<code>ifqnt</code> (Default = 0) <p>Specifies whether a part of the system is treated with quantum mechanics.</p> <ul> <li>0: Potential function is strictly classical</li> <li>1: Use QM/MM</li> </ul> <p>Keep in mind</p> <ul> <li>Calculations where part of the system is treated with quantum mechanics can be performed only with GB</li> <li>A sample QM/MMGBSA input file is shown here</li> <li>A tutorial on binding free energy calculation with QM/MMGBSA is available  here</li> </ul> <code>qm_theory</code> <p>Which semi-empirical Hamiltonian should be used for the quantum calculation. Options are <code>PM3</code>, <code>AM1</code>, <code>MNDO</code>,  <code>PDDG-PM3</code>, <code>PM3PDDG</code>, <code>PDDG-MNDO</code>, <code>PDDGMNDO</code>, <code>PM3-CARB1</code>, <code>PM3CARB1</code>, <code>DFTB</code>, <code>SCC-DFTB</code>, <code>RM1</code>, <code>PM6</code>,  <code>PM3-ZnB</code>, <code>PM3-MAIS</code>, <code>PM3ZNB</code>, <code>MNDO/D</code>, <code>MNDOD</code>. The dispersion correction can be switched on for <code>AM1</code>  and <code>PM6</code> by choosing <code>AM1-D*</code> and <code>PM6-D</code>, respectively. The dispersion and hydrogen bond correction will be  applied for <code>AM1-DH+</code> and <code>PM6-DH+</code>.</p> <p>Danger</p> <p>No <code>qm_theory</code> default, this must be specified if <code>ifqnt</code> = 1.</p> <code>qm_residues</code> <p>Complex residues to treat with quantum mechanics. All residues treated with quantum mechanics in the complex  must be treated with quantum mechanics in the receptor or ligand to obtain meaningful results. This notation is  the same used for <code>print_res</code> variable in <code>&amp;decomp</code> namelist.</p> <p>Danger</p> <p>No <code>qm_residues</code> default, this must be specified if <code>ifqnt</code> = 1.</p> <p>Selection schemes</p> By Distance (recommended)Amino acid selection Notation: [ <code>within</code> <code>distance</code> ] <code>within</code> corresponds to the keyword and <code>distance</code> to the maximum distance criterion in \u00c5 necessary to  select the residues from both the receptor and the ligand. In case the cutoff used is so small that  the number of qm_residues = 0, the cutoff value will be increased by 0.1 until the number of  qm_residues &gt; 0. <p>Example</p> <p><code>qm_residues=\"within 5\"</code> Residues within 5 \u00c5 between receptor and ligand will be treated with quantum  mechanic.</p> Notation: [ <code>CHAIN</code>/(<code>RESNUM</code> or <code>RESNUM-RESNUM</code>) ] Treat with quantum mechanics residues individual or ranges. This notation also supports insertion  codes, in which case you must define them individually <p><code>qm_residues=\"A/1,3-10,15,100\"</code> This treat with quantum mechanic Chain A residues 1, 3 through 10, 15, and  100 from the complex topology file and the corresponding residues in either the ligand and/or receptor  topology files.</p> <p>Let's suppose that we can have the following sequence: - A:LEU:5 - A:GLY:6:A - A:THR:6:B - A:SER:6:C -  A:ASP:6:D - A:ILE:7</p> <p>with the format <code>CHAIN</code>/<code>RESNUMBER</code> <code>INSERTION_CODE</code></p> Right notationWrong notation Ranges selection <code>qm_residues=\"A/5-7</code> Will treat with quantum mechanic all mentioned residues because all residues with  insertion code are contained in the range Individual selection <code>qm_residues=\"A/5,6B,6C,7</code> Will treat with quantum mechanic all mentioned residues except the  residues 6A and 6D from chain A Multiple chain selection <code>qm_residues=\"A/5-10,100 B/34,56</code> Will treat with quantum mechanic residues 5 through 10, and 100 from  chain A, and residues 34 and 56 from Chain B. <p><code>qm_residues=\"A/5-6B,6D-7</code> Will end in error.</p> <code>qmcut</code> (Default = 9999.0) The cutoff for the qm/mm charge interactions. <code>scfconv</code> (Default = 1.0e-8) Controls the convergence criteria for the SCF calculation, in kcal/mol. The tighter the  convergence the longer the calculation will take. Values tighter than 1.0e-11 are not recommended as these can lead  to oscillations in the SCF, due to limitations in machine precision, that can lead to convergence failures. <code>writepdb</code> (Default = 1) <p>Write a PDB file of the selected QM region. This option is designed to act as an aid to the user to allow easy checking of what atoms were included in the QM region. Write a PDB file of the atoms in the QM region  on the very first step to a file named qmmm_region.pdb.</p> <ul> <li>0: Don't</li> <li>1: Write a PDB file of the selected QM region</li> </ul> <code>peptide_corr</code> (Default = 0) <p>Apply MM correction to peptide linkages. This correction is of the form: </p> \\[ E_{scf} = E_{scf} + h_{type}(i_{type}) * sin^{2}\\phi \\] <p>where \u03d5 is the dihedral angle of the H-N-C-O linkage and \\(h_{type}\\) is a constant dependent on the  Hamiltonian used. Recommended, except for DFTB/SCC-DFTB.</p> <ul> <li>0: Don't</li> <li>1: Apply a MM correction to peptide linkages</li> </ul> <code>verbosity</code> (Default = 0) <p>Controls the verbosity of QM/MM related output. Values of 2 or higher will produce a lot of output.</p> <ul> <li>0: only minimal information is printed - Initial QM geometry and link atom positions as well as the SCF energy at every ntpr steps.</li> <li>1: Print SCF energy at every step to many more significant figures than usual. Also print the number of SCF cycles needed on each step.</li> <li>2: As 1 and also print info about memory reallocations, number of pairs per QM atom, QM core - QM core energy, QM core - MM atom energy, and total energy.</li> <li>3: As 2 and also print SCF convergence information at every step.</li> <li>4: As 3 and also print forces on the QM atoms due to the SCF calculation and the coordinates of the link atoms at every step.</li> <li>5: As 4 and also print all of the info in kJ/mol as well as kcal/mol.</li> </ul>"},{"location":"mmpbsa/input_file/#gbnsr6-namelist-variables","title":"<code>&amp;gbnsr6</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li>GBNSR6 is an implementation of the Generalized Born (GB) model in which the effective Born radii are computed  numerically, via the so-called \"R6\" integration (ref.) over molecular surface of the solute. In contrast to  most GB practical models, GBNSR6 model is parameter free in the same sense as the numerical PB framework is. Thus,  accuracy of GBNSR6 relative to the PB standard is virtually unaffected by the choice of input atomic radii. Check Chapter \u00a75 in Amber manual for a more thorough description  of the GBNSR6 model and its parameters.</li> <li> <p>A default GBNSR6 input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input gbnsr6\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input gbnsr6\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input gbnsr6\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input gbnsr6\n</code></pre> </li> <li> <p>A sample GBNSR6 input file is shown here</p> </li> <li>A tutorial on binding free energy calculation with GBNSR6 model is available  here</li> </ul>"},{"location":"mmpbsa/input_file/#basic-input-options_2","title":"Basic input options","text":"<code>epsin</code> (Default = 1.0) Dielectric constant of the solute region. <code>epsout</code> (Default = 78.5) Implicit solvent dielectric constant for the solvent. <code>istrng</code> (Default = 0.0) Ionic strength in M for the GBNSR6 equation. <code>dprob</code> (Default = 1.4) Radius of the solvent probe. <code>cavity_surften</code> (Default = 0.005) Surface tension parameter for nonpolar solvation calculation."},{"location":"mmpbsa/input_file/#options-to-select-numerical-procedures","title":"Options to select numerical procedures","text":"<code>space</code> (Default = 0.5) <p>Sets the grid spacing that determines the resolution of the solute molecular surface. </p> <p>Keep in mind</p> <p>Note that memory footprint of this grid-based implementation of GBNSR6 may become large for large structures, e.g. the nucleosome (about 25,000 atoms) will take close to 2 GB of RAM when the default grid spacing is  used. For very large structures, one may consider increasing the value of space, which will reduce the  memory footprint and execution time; however, the accuracy will also decrease.</p> <code>arcres</code> (Default = 0.2) Arc resolution used for numerical integration over molecular surface. <code>b</code> (Default = 0.028) Specifies the value of uniform offset to the (inverse) effective radii, the default value 0.028 gives  better agreement with the PB model, regardless of the structure size. For best agreement with the explicit solvent  (TIP3P) solvation energies, optimal value of B depends on the structure size: for small molecules (number of atoms  less than 50), B=0 is recommended. With -chagb option, B is calculated automatically based on the solute size. <code>alpb</code> (Default = 1) <p>Specifies if ALBP correction is to be used.</p> <ul> <li>0: Canonical GB is used.</li> <li>1: ALPB is used (default)</li> </ul>"},{"location":"mmpbsa/input_file/#options-for-chagb-model","title":"Options for CHAGB model","text":"<code>chagb</code> (Default = 0) <p>Define if CHAGB is used.</p> <ul> <li>0: Do not use CHAGB.</li> <li>1: Use CHAGB.</li> </ul> <code>rs</code> (Default = 0.52) Dielectric boundary shift compared to the molecular surface. <code>radiopt</code> (Default = 0) <p>Set of intrinsic atomic radii to be used.</p> <ul> <li>0: uses hardcoded intrisic radii optimized for small drug like molecules, and single amino acid dipeptides (ref.)</li> <li>1: intrinsic radii are read from the topology file. Note that the dielectric surface defined using these radii is then shifted outwards by Rs relative to the molecular surface. The option is not recommended unless you are planning to re-optimize the input radii set for your problem.</li> </ul> <code>roh</code> (Default = 1) <p>Sets the value of R<sup>z</sup><sub>OH</sub> for CHAGB model, the default is 0.586\u00c5. This parameter defines which  explicit water model is being mimicked with respect to its propensity to cause charge hydration asymmetry. A perfectly  tetrahedral water , which can not cause charge hydration asymmetry, would have R<sup>z</sup><sub>OH</sub> = 0. The  options for <code>roh</code> are:</p> <ul> <li>1: R<sup>z</sup><sub>OH</sub> = 0.586\u00c5 corresponds to TIP3P and SPC/E. </li> <li>2: R<sup>z</sup><sub>OH</sub> = 0.699\u00c5 for OPC.</li> <li>3: R<sup>z</sup><sub>OH</sub> = 0.734\u00c5 for TIP4P </li> <li>4: R<sup>z</sup><sub>OH</sub> = 0.183\u00c5 for TIP5P/E. </li> </ul> <code>tau</code> (Default = 1.47) Value of \u03c4 in the CHAGB model. This dimensionless parameter controls the effective range of the neighboring  charges (j) affecting the CHA of atom (i), see (ref.) for details."},{"location":"mmpbsa/input_file/#pb-namelist-variables","title":"<code>&amp;pb</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li>xBFreE uses sander to perform PB calculations. sander offers access to all pbsa  functionalities. The default values for the variables described below are appropriate for most calculations  on solvated molecular systems. Also note that the default options may have changed over time. A more thorough  description of all the options can be found here. For a detailed discussion of all related options on  the quality of the MM/PB(GB)SA calculations, please check this publication.</li> <li> <p>A default PB input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input pb\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input pb\n</code></pre> </li> <li> <p>A sample PB input file is shown here</p> </li> <li>A tutorial on binding free energy calculation with PB model is available  here</li> </ul>"},{"location":"mmpbsa/input_file/#basic-input-options_3","title":"Basic input options","text":"<code>ipb</code> (Default = 2) <p>Option to set up a dielectric model for all numerical PB procedures. <code>ipb = 1</code> corresponds to a classical geometric  method, while a level-set based algebraic method is used when <code>ipb &gt; 2</code>.</p> <ul> <li>1: The dielectric interface between solvent and solute is built with a geometric approach. (ref.)</li> <li>2: The dielectric interface is implemented with the level set function. Use of a level set function simplifies the calculation of the intersection points of the molecular surface and grid edges and leads to more stable numerical calculations. (ref.)</li> <li>4: The dielectric interface is also implemented with the level set function. However, the linear equations on the grid points nearby the dielectric boundary are constructed using the IIM. In this option, The dielectric constant do not need to be smoothed, that is, <code>smoothopt</code> is useless. Only the linear PB equation is supported, that is, <code>npbopt = 0</code>. Starting from the Amber 2018 release, <code>solvopt</code> is no longer relevant as only one stable solver is supported. (ref.)</li> <li>6: The dielectric interface is implemented analytically with the revised density function approach (<code>sasopt = 2</code>). The linear equations on the irregular points are constructed using the IIM and fully utilizing the analytical surface. Otherwise, it is exactly the same as <code>ipb = 4</code>. (ref.)</li> <li>7: The dielectric interface is implemented analytically with the revised density function approach (<code>sasopt = 2</code>). The linear equations on the irregular points are constructed using the \u03a7-factor harmonic average method. (ref.)</li> <li>8: The dielectric interface is implemented analytically with the revised density function approach (<code>sasopt = 2</code>). The linear equations on the irregular points are constructed using the secondorder harmonic  average method. (ref.)</li> </ul> <code>inp</code> (Default = 1) <p>Option to select different methods to compute non-polar solvation free energy.</p> <ul> <li> <p>1: The total non-polar solvation free energy is modeled as a single term linearly proportional to the solvent accessible surface area (ref.). When using <code>inp = 1</code>:</p> <ul> <li><code>sprob</code> is reset to 1.4</li> <li><code>cavity_surften</code> is reset to 0.005</li> <li><code>cavity_offset</code> is reset to 0.000</li> </ul> </li> <li> <p>2: The total non-polar solvation free energy is modeled as two terms: the cavity term and the dispersion term. The dispersion term is computed with a surface-based integration method (ref.) closely related to the PCM solvent for quantum chemical programs. (ref.) Under this framework, the cavity term is still computed as a term linearly proportional to the molecular solvent-accessible-surface area (SASA) or the molecular volume enclosed by SASA.</p> </li> </ul> <p>Keep in mind</p> <p>Sometimes, high values for the solvation energy are obtained using <code>inp=2</code>. Check  this section to  see a workaround.</p> <code>sander_apbs</code> (Default = 0) <p>Option to use <code>APBS</code> for <code>PB</code> calculation instead of the built-in <code>PBSA</code> solver. This will work only through the <code>iAPBS</code> interface built into <code>sander.APBS</code>. Instructions for this can be found online at the iAPBS/APBS websites.</p> <ul> <li>0: Don\u2019t use <code>APBS</code></li> <li>1: Use <code>sander.APBS</code></li> </ul>"},{"location":"mmpbsa/input_file/#options-to-define-the-physical-constants","title":"Options to define the physical constants","text":"<code>indi</code> (Default = 1.0) Internal dielectric constant. This corresponds to <code>epsin</code> in pbsa. <code>exdi</code> (Default = 80.0) External dielectric constant. This corresponds to <code>epsout</code> in pbsa. <code>emem</code> (Default = 4.0) Sets the membrane dielectric constant. Only used if <code>memopt</code> &gt; 0, does nothing otherwise. Value used should be between <code>indi</code> and <code>exdi</code> or there may be errors. This corresponds to <code>epsmem</code> in pbsa. <code>smoothopt</code> (Default = 1) <p>Instructs PB how to set up dielectric values for finite-difference grid edges that are located across the solute/solvent dielectric boundary.</p> <ul> <li>0: The dielectric constants of the boundary grid edges are always set to the equal-weight harmonic average of <code>indi</code> and <code>exdi</code>.</li> <li>1: A weighted harmonic average of <code>indi</code> and <code>exdi</code> is used for boundary grid edges. The weights for <code>indi</code> and <code>exdi</code> are fractions of the boundary grid edges that are inside or outside the solute surface. (ref.)</li> <li>2: The dielectric constants of the boundary grid edges are set to either <code>indi</code> or <code>exdi</code> depending on whether  the midpoints of the grid edges are inside or outside the solute surface.</li> </ul> <code>istrng</code> (Default = 0.0) Ionic strength in Molarity (M). It is converted to mM for <code>PBSA</code> and kept as M for <code>APBS</code>. <code>radiopt</code> (Default = 1) <p>The option to set up atomic radii.</p> <ul> <li>0: Use radii from the prmtop file for both the PB calculation and for the non-polar calculation (see <code>inp</code>) </li> <li>1: Use atom-type/charge-based radii by Tan and Luo (ref.) for the PB calculation. Note that the radii are optimized for Amber atom types as in standard residues from the Amber database and should work fine for <code>standard</code> complexes such as protein-protein, protein-DNA. On the other hand, if a molecule in your system was  built by antechamber, i.e., if GAFF atom types are used, or any other extrenal software, radii from the prmtop  file should be used (<code>radiopt = 0</code>). Check this thread for more info.</li> </ul> <code>prbrad</code> (Default = 1.4) Solvent probe radius (in \u00c5). Allowed values are 1.4 and 1.6. This corresponds to <code>dprob</code> in pbsa. <code>iprob</code> (Default = 2.0) Mobile ion probe radius (in \u00c5) for ion accessible surface used to define the Stern layer. <code>sasopt</code> (Default = 0) <p>Option to determine which kind of molecular surfaces to be used in the Poisson-Boltzmann implicit solvent model.</p> <ul> <li>0: Use the solvent excluded surface as implemented by (ref.)</li> <li>1: Use the solvent accessible surface. Apparently, this reduces to the van der Waals surface when the <code>prbrad</code> is set to zero.</li> <li>2: Use the smooth surface defined by a revised density function. (ref.) This must be combined with `ipb &gt; 2.</li> </ul> <code>arcres</code> (Default = 0.25) The <code>arcres</code> keyword gives the resolution (in \u00c5) of dots used to represent solvent accessible arcs. More generally, <code>arcres</code> should be set to max(0.125 \u00c5, 0.5h) (h is the grid spacing). (ref.)"},{"location":"mmpbsa/input_file/#options-for-implicit-membranes","title":"Options for implicit membranes","text":"<code>memopt</code> (Default = 0) <p>Option to turn the implicit membrane on and off. The membrane is implemented as a slab like region with a uniform  or heterogeneous dielectric constant depth profile. Details of the implicit membrane setup can be  found here.</p> <ul> <li>0: No implicit membrane used.</li> <li>1: Use a uniform membrane dielectric constant in a slab-like implicit membrane. (ref.)</li> <li>2: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant  varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant depth profile was implemented using the PCHIP fitting. (ref.)</li> <li>3: Use a heterogeneous membrane dielectric constant in a slab-like implicit membrane. The dielectric constant  varies with depth from a value of 1 in the membrane center to 80 at the membrane periphery. The dielectric constant  depth profile was implemented using the Spline fitting. (ref.)</li> </ul> <p>Keep in mind</p> <ul> <li>Calculations for implicit membranes can be performed only with PB</li> <li>A sample input file is shown here</li> <li>A tutorial on binding free energy calculation for membrane proteins is available  here</li> <li>Check this thread for more info on Parameters for Implicit  Membranes</li> </ul> <code>mprob</code> (Default = 2.70) Membrane probe radius (in \u00c5). This is used to specify the highly different lipid molecule accessibility versus  that of the water. (ref.) <p></p> <code>mthick</code> (Default = 40) Membrane thickness (in \u00c5). This is different from the previous default of 20 \u00c5. <code>mctrdz</code> (Default = 0.0) Membrane center (in \u00c5) in the z direction. <code>poretype</code> (Default = 1) <p>Turn on and off the automatic depth-first search method to identify the pore. (ref.)</p> <ul> <li>0: Do not turn on the pore searching algorithm.</li> <li>1: Turn on the pore searching algorithm.</li> </ul>"},{"location":"mmpbsa/input_file/#options-to-select-numerical-procedures_1","title":"Options to select numerical procedures","text":"<code>npbopt</code> (Default = 0) <p>Option to select the linear, or the full nonlinear PB equation.</p> <ul> <li>0: Linear PB equation (LPBE) is solved</li> <li>1: Nonlinear PB equation (NLPBE) is solved</li> </ul> <p>Note</p> <p>While the linear PB equation (see tutorial) will suffice for most  calculations, the nonlinear PB equation (see tutorial) is recommended  for highly charged systems. Parameters such as <code>eneopt</code> or <code>cutnb</code> should be adjusted accordingly when  using the NLPBE. Check the following threads (T1 and  T2) on how to proceed when using NLPBE. Last but not  least, take into account that using NLPBE can significantly increase the calculation time required for  PB calculation.</p> <code>solvopt</code> (Default = 1) <p>Option to select iterative solvers.</p> <ul> <li>1 Modified ICCG or Periodic (PICCG) if <code>bcopt = 10</code>.</li> <li>2 Geometric multigrid. A four-level v-cycle implementation is applied by default.</li> <li>3 Conjugate gradient (Periodic version available under <code>bcopt = 10</code>). This option requires a large <code>linit</code> to converge.</li> <li>4 SOR. This option requires a large <code>linit</code> to converge.</li> <li>5 Adaptive SOR. This is only compatible with <code>npbopt = 1</code>. This option requires a large <code>linit</code>  converge. (ref.)</li> <li>6 Damped SOR. This is only compatible with <code>npbopt = 1</code>. This option requires a large <code>linit</code> to  converge. (ref.)</li> </ul> <code>accept</code> (Default = 0.001) Sets the iteration convergence criterion (relative to the initial residue). <code>linit</code> (Default = 1000) Sets the maximum number of iterations for the finite difference solvers. Note that <code>linit</code> has to be set to a  much larger value, e.g. 10000, for the less efficient solvers, such as conjugate gradient and SOR, to converge.  This corresponds to <code>maxitn</code> in pbsa. <code>fillratio</code> (Default = 4.0) The ratio between the longest dimension of the rectangular finite-difference grid and that of the solute. For  macromolecules is fine to use 4, or a smaller value like 2. A default value of 4 is large enough to be used for a  small solute, such as a ligand molecule. Using a smaller value for <code>fillratio</code> may cause part of the small solute  to lie outside the finite-difference grid, causing the finite-difference solvers to fail.  <code>scale</code> (Default = 2.0) Resolution of the Poisson Boltzmann grid. It is equal to the reciprocal of the grid spacing (<code>space</code> in pbsa). <code>nbuffer</code> (Default = 0) Sets how far away (in grid units) the boundary of the finite difference grid is away from the solute surface; i.e., automatically set to be at least a solvent probe or ion probe (diameter) away from the solute surface. <code>nfocus</code> (Default = 2) Set how many successive FD calculations will be used to perform an electrostatic focussing calculation on a  molecule. When <code>nfocus</code> = 1, no focusing is used. It is recommended that <code>nfocus = 1</code> when the multigrid solver is used. <code>fscale</code> (Default = 8) Set the ratio between the coarse and fine grid spacings in an electrostatic focussing calculation. <code>npbgrid</code> (Default = 1) Sets how often the finite-difference grid is regenerated."},{"location":"mmpbsa/input_file/#options-to-compute-energy-and-forces","title":"Options to compute energy and forces","text":"<code>bcopt</code> (Default = 5) <p>Boundary condition options.</p> <ul> <li>1: Boundary grid potentials are set as zero, i.e. conductor. Total electrostatic potentials and energy are computed.</li> <li>5: Computation of boundary grid potentials using all grid charges. Total electrostatic potentials and energy are computed.</li> <li>6: Computation of boundary grid potentials using all grid charges. Reaction field potentials and energy are computed with the charge singularity free formalism. (ref.)</li> <li>10: Periodic boundary condition is used. Total electrostatic potentials and energy are computed. Can be used with <code>solvopt = 1, 2, 3, or 4</code> and <code>ipb = 1 or 2</code>. It should only be used on charge-neutral  systems. If the system net charge is detected to be nonzero, it will be neutralized by applying a small neutralizing charge on each grid (i.e. a uniform plasma) before solving.</li> </ul> <code>eneopt</code> (Default = 2) <p>Option to compute total electrostatic energy and forces.</p> <ul> <li>1: Compute total electrostatic energy and forces with the particle-particle particle-mesh (P3M) procedure outlined in Lu and Luo. (ref.) In doing so, energy term EPB in the output file is set to zero, while EEL includes both the reaction field energy and the Coulombic energy. The van der Waals energy is computed along with the particle-particle portion of the Coulombic energy. The electrostatic forces and dielectric boundary forces can also be computed. (ref.) This option requires a nonzero <code>cutnb</code> and <code>bcopt = 5</code> for soluble proteins / <code>bcopt = 10</code> for membrane proteins.</li> <li>2: Use dielectric boundary surface charges to compute the reaction field energy. Both the Coulombic energy and the van der Waals energy are computed via summation of pairwise atomic interactions. Energy term EPB in the output file is the reaction field energy. EEL is the Coulombic energy.</li> <li>3: Similar to the first option above, a P3M procedure is applied for both solvation and Coulombic energy and forces for larger systems.</li> <li>4: Similar to the third option above, a P3M procedure for the full nonlinear PB equation is applied for both solvation and Coulombic energy and forces for larger systems. A more robust and clean set of routines were used for the P3M and dielectric surface force calculations.</li> </ul> <code>frcopt</code> (Default = 0) <p>Option to compute and output electrostatic forces to a file named force.dat in the working directory.</p> <ul> <li>0: Do not compute or output atomic and total electrostatic forces.</li> <li>1: Reaction field forces are computed by trilinear interpolation. Dielectric boundary forces are computed using the electric field on dielectric boundary. The forces are output in the unit of kcal/mol\u00b7\u00c5.</li> <li>2: Use dielectric boundary surface polarized charges to compute the reaction field forces and dielectric  boundary forces (ref.) The forces are output in the unit of kcal/mol\u00b7\u00c5.</li> <li>3: Reaction field forces are computed using dielectric boundary polarized charge. Dielectric boundary forces  are computed using the electric field on dielectric boundary. (ref.) The forces are output in kcal/mol\u00b7\u00c5.</li> </ul> <code>scalec</code> (Default = 0) <p>Option to compute reaction field energy and forces.</p> <ul> <li>0: Do not scale dielectric boundary surface charges before computing reaction field energy and forces.</li> <li>1: Scale dielectric boundary surface charges using Gauss\u2019s law before computing reaction field energy and forces.</li> </ul> <code>cutfd</code> (Default = 5.0) Atom-based cutoff distance to remove short-range finite-difference interactions, and to add pairwise charge-based interactions. This is used for both energy and force calculations. See Eqn (20) in  Lu and Luo. (ref.) <code>cutnb</code> (Default = 0.0) Atom-based cutoff distance for van der Waals interactions, and pairwise Coulombic interactions when <code>eneopt</code> = 2. When <code>cutnb</code> is set to the default value of 0, no cutoff will be used for van der Waals and Coulombic interactions,  i.e., all pairwise interactions will be included. When <code>eneopt = 1</code>, this is the cutoff distance used for van der  Waals interactions only. The particle-particle portion of the Coulombic interactions is computed with the cutoff of  <code>cutfd</code>._ <code>nsnba</code> (Default = 1) Sets how often (steps) atom-based pairlist is generated."},{"location":"mmpbsa/input_file/#options-to-select-a-non-polar-solvation-treatment","title":"Options to select a non-polar solvation treatment","text":"<code>decompopt</code> (Default = 2) <p>Option to select different decomposition schemes when <code>inp = 2</code>. See (ref.) for a detailed discussion of the different schemes. The \u03c3 decomposition scheme is the best of the three schemes studied. (ref.) As  discussed in (ref.), <code>decompopt = 1</code> is not a very accurate approach even if it is more straightforward to  understand the decomposition.</p> <ul> <li>1: The 6/12 decomposition scheme.</li> <li>2: The \u03c3 decomposition scheme.</li> <li>3: The WCA decomposition scheme.</li> </ul> <code>use_rmin</code> (Default = 1) <p>The option to set up van der Waals radii. The default is to use van der Waals rmin to improve the agreement with TIP3P. (ref.)</p> <ul> <li>0: Use atomic van der Waals \u03c3 values.</li> <li>1: Use atomic van der Waals rmin values.</li> </ul> <code>sprob</code> (Default = 0.557) Solvent probe radius (in \u00c5) for solvent accessible surface area (SASA) used to compute the dispersion term, default to 0.557 \u00c5 in the \u03c3 decomposition scheme as optimized in (ref.) with respect to the TIP3P solvent and the PME treatment. Recommended values for other decomposition schemes can be found in Table 4 of (ref.). If <code>use_sav = 0</code> (see below), <code>sprob</code> can be used to compute SASA for the cavity term as well. Unfortunately, the recommended value is different from that used in the dispersion term calculation as documented in (ref.). Thus, two separate calculations are needed when <code>use_sav = 0</code>, one for the dispersion term and one for the cavity term. Therefore, please carefully read (ref.) before proceeding with the option of <code>use_sav = 0</code>. Note that <code>sprob</code> was used for ALL three terms of solvation free energies, i.e., electrostatic, attractive, and repulsive terms in previous releases in Amber. However, it was found in the more recent study (ref.) that it was impossible to use the same probe radii for all three terms after each term was calibrated and validated with respect to the TIP3P solvent. (ref.) <code>vprob</code> (Default = 1.300) Solvent probe radius (in \u00c5) for molecular volume (the volume enclosed by SASA) used to compute non-polar cavity  solvation free energy, default to 1.300 \u00c5, the value optimized in (ref.) with respect to the TIP3P solvent.  Recommended values for other decomposition schemes can be found in Tables 1-3 of (ref.). <code>rhow_effect</code> (Default = 1.129) Effective water density used in the non-polar dispersion term calculation, default to 1.129 for <code>decompopt = 2</code>, the  \u03c3 scheme. This was optimized in (ref.) with respect to the TIP3P solvent in PME. Optimized values for other  decomposition schemes can be found in Table 4 of (ref.). <code>use_sav</code> (Default = 1) <p>The option to use molecular volume (the volume enclosed by SASA) or to use molecular surface (SASA) for cavity term  calculation. Recent study shows that the molecular volume approach transfers better from small training molecules to  biomacromolecules.</p> <ul> <li>0: Use SASA to estimate cavity free energy</li> <li>1: Use the molecular volume enclosed by SASA</li> </ul> <code>cavity_surften</code> (Default = 0.0378) The regression coefficient for the linear relation between the total non-polar solvation free energy (<code>inp</code> = 1), or  the cavity free energy (<code>inp = 2</code>) and SASA/volume enclosed by SASA. The default value is for <code>inp = 2</code> and set to the  best of three tested schemes as reported in (ref.), i.e. <code>decompopt = 2</code>, <code>use_rmin = 1</code>, and <code>use_sav = 1</code>. See  recommended values in Tables 1-3 for other schemes. <code>cavity_offset</code> (Default = -0.5692) The regression offset for the linear relation between the total non-polar solvation free energy (<code>inp</code>= 1), or  the cavity free energy (<code>inp = 2</code>) and SASA/volume enclosed by SASA. The default value is for <code>inp</code> = 2 and set to  the best of three tested schemes as reported in (ref.), i.e. <code>decompopt = 2</code>, <code>use_rmin = 1</code>, and <code>use_sav = 1</code>.  See recommended values in Tables 1-3 for other schemes. <code>maxsph</code> (Default = 400) Approximate number of dots to represent the maximum atomic solvent accessible surface. These dots are first checked  against covalently bonded atoms to see whether any of the dots are buried. The exposed dots from the first step are  then checked against a non-bonded pair list with a cutoff distance of 9 \u00c5 to see whether any of the exposed dots  from the first step are buried. The exposed dots of each atom after the second step then represent the solvent  accessible portion of the atom and are used to compute the SASA of the atom. The molecular SASA is simply a  summation of the atomic SASA\u2019s. A molecular SASA is used for both PB dielectric map assignment and for NP calculations. <code>maxarcdot</code> (Default = 1500) Number of dots used to store arc dots per atom."},{"location":"mmpbsa/input_file/#options-for-output","title":"Options for output","text":"<code>npbverb</code> (Default = 0) <p>Verbose mode.</p> <ul> <li>0: Off</li> <li>1: On</li> </ul>"},{"location":"mmpbsa/input_file/#rism-namelist-variables","title":"<code>&amp;rism</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default 3drism input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input rism\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input rism\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input rism\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input rism\n</code></pre> </li> <li> <p><code>3D-RISM</code> calculations are performed with the <code>rism3d.snglpnt</code> program built with AmberTools, written by Tyler  Luchko. It is the most expensive, yet most statistical mechanically rigorous solvation model. See </p> <ul> <li>Introduction to RISM for a thorough description RISM  theory.</li> <li>General workflow for using 3D-RISM</li> <li>Practical considerations on:<ul> <li>Computational Requirements and Parallel Scaling of RISM</li> <li>Numerical Accuracy of RISM</li> <li>Convergence issues</li> </ul> </li> </ul> </li> <li>A sample 3drism input file is shown here</li> <li>A tutorial on binding free energy calculation with 3D-RISM is available here</li> <li>We have included more variables in 3D-RISM calculations than the ones available in the MMPBSA.py original code.  That way, users can be more in control and tackle various issues (e.g., convergence issues).</li> <li>One advantage of <code>3D-RISM</code> is that an arbitrary solvent can be chosen; you just need to change the <code>xvvfile</code>  specified on the command line (see <code>-xvvfile</code> flag in gmx_MMPBSA command line. The  default solvent is <code>$AMBERHOME/AmberTools/test/rism1d/tip3p-kh/tip3p.xvv.save</code>. In case this file  doesn't exist, a copy <code>path_to_GMXMMPBSA/data/xvv_files/tip3p.xvv</code> is used. You can find examples of precomputed  <code>.xvv</code> files for SPC/E and TIP3P water in <code>$AMBERHOME/AmberTools/test/rism1d</code> or  <code>path_to_GMXMMPBSA/data/xvv_files</code> folders.</li> </ul> <code>xvv</code> (Default = \"tip3p\") <p>Define the selected solvent for 3D-RISM. These solvent xvv files are contained in xBFreE, but you can define a  new one simply adding the file path.</p> <ul> <li>tip3p</li> <li>spc</li> <li>spc-nacl-3</li> <li>spc_mmpbsa_py</li> </ul>"},{"location":"mmpbsa/input_file/#closure-approximations","title":"Closure approximations","text":"<code>closure</code> (Default = \"kh\") <p>Comma separate list of closure approximations. If more than one closure is provided, the 3D-RISM solver will use  the closures in order to obtain a solution for the last closure in the list when no previous solutions are available. The solution for the last closure in the list is used for all output. The use of several closures combined with  different tolerances can be useful to overcome convergence issues (see \u00a77.3.1)</p> <ul> <li>\"kh\": Kovalenko-Hirata</li> <li>\"hnc\": Hyper-netted chain equation</li> <li>\"psen\": Partial Series Expansion of order-n where \u201cn\u201d is a positive integer (e.g., \"pse3\")</li> </ul> <p>Examples</p> One closureSeveral closures <pre><code> closure = pse3\n</code></pre> <pre><code> closure = kh, pse3\n</code></pre>"},{"location":"mmpbsa/input_file/#solvation-free-energy-corrections","title":"Solvation free energy corrections","text":"<code>gfcorrection</code> (Default = 0) <p>Compute the Gaussian fluctuation excess chemical potential functional.  See \u00a77.1.2</p> <ul> <li>0: Off</li> <li>1: On</li> </ul> <code>pcpluscorrection</code> (Default = 0) <p>Compute the PC+/3D-RISM excess chemical potential functional. See \u00a77.2.4</p> <ul> <li>0: Off</li> <li>1: On</li> </ul>"},{"location":"mmpbsa/input_file/#long-range-asymptotics","title":"Long-range asymptotics","text":"<p>Info</p> <p>Long-range asymptotics are used to analytically account for solvent distribution beyond the solvent box.  Long-range asymptotics are always used when calculating a solution but can be omitted for the subsequent thermodynamic calculations, though it is not recommended.</p> <code>noasympcorr</code> (Default = 1) <p>Use long-range asymptotic corrections for thermodynamic calculations.</p> <ul> <li>0: Do not use long-range corrections</li> <li>1: Use the long-range corrections</li> </ul> <code>treeDCF</code> (Default = 1) <p>Use direct sum, or the treecode approximation to calculate the direct correlation function long-range asymptotic  correction.</p> <ul> <li>0: Use direct sum</li> <li>1: Use treecode approximation</li> </ul> <code>treeTCF</code> (Default = 1) <p>Use direct sum, or the treecode approximation to calculate the total correlation function long-range asymptotic  correction.</p> <ul> <li>0: Use direct sum</li> <li>1: Use treecode approximation</li> </ul> <code>treeCoulomb</code> (Default = 1) <p>Use direct sum, or the treecode approximation to calculate the Coulomb potential energy.</p> <ul> <li>0: Use direct sum</li> <li>1: Use treecode approximation</li> </ul> <code>treeDCFMAC</code> (Default = 0.1) Treecode multipole acceptance criterion for the direct correlation function long-range asymptotic correction. <code>treeTCFMAC</code> (Default = 0.1) Treecode multipole acceptance criterion for the total correlation function long-range asymptotic correction. <code>treeCoulombMAC</code> (Default = 0.1) Treecode multipole acceptance criterion for the Coulomb potential energy. <code>treeDCFOrder</code> (Default = 2) Treecode Taylor series order for the direct correlation function long-range asymptotic correction. <code>treeTCFOrder</code> (Default = 2) Treecode Taylor series order for the total correlation function long-range asymptotic correction. Note that the  Taylor expansion used does not converge exactly to the TCF long-range asymptotic correction, so a very high order  will not necessarily increase accuracy. <code>treeCoulombOrder</code> (Default = 2) Treecode Taylor series order for the Coulomb potential energy. <code>treeDCFN0</code> (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the direct correlation function  long-range asymptotic correction. This sets the depth of the hierarchical octtree. <code>treeTCFN0</code> (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the total correlation function  long-range asymptotic correction. This sets the depth of the hierarchical octtree. <code>treeCoulombN0</code> (Default = 500) Maximum number of grid points contained within the treecode leaf clusters for the Coulomb potential energy. This  sets the depth of the hierarchical octtree."},{"location":"mmpbsa/input_file/#solvation-box","title":"Solvation box","text":"<p>Info</p> <p>The non-periodic solvation box super-cell can be defined as variable or fixed in size. When a variable box size is used, the box size will be adjusted to maintain a minimum buffer distance between the atoms of the solute and the box boundary. This has the advantage of maintaining the smallest possible box size while adapting to change of solute shape and orientation. Alternatively, the box size can be specified at run-time. This box size will be used for the duration of the sander calculation. Solvent box dimensions have a strong effect on  the numerical precision of 3D-RISM. See \u00a77.2.3 for  recommendation on selecting an appropriate box size and resolution.</p>"},{"location":"mmpbsa/input_file/#variable-box-size","title":"Variable box size","text":"<p>Keep in mind</p> <p>It is recommended to avoid specifying a large, prime number of processes (\u2265 7) when using a variable solvation  box size.</p> <code>buffer</code> (Default = 14) <p>Minimum distance (in \u00c5) between solute and edge of solvation box. Specify this with <code>grdspc</code> below. Mutually  exclusive with <code>ng</code> and <code>solvbox</code>. See \u00a77.2.3 for details on  how this affects numerical accuracy and how this interacts with <code>ljTolerance</code>, and <code>tolerance</code></p> <ul> <li>when &lt; 0: Use fixed box size (see <code>ng</code> and <code>solvbox</code> below)</li> <li>when &gt;= 0: Use <code>buffer</code> distance</li> </ul> <code>grdspc</code>(Default = 0.5,0.5,0.5) Grid spacing (in \u00c5) of the solvation box. Specify this with <code>buffer</code> above. Mutually exclusive with <code>ng</code> and  <code>solvbox</code>."},{"location":"mmpbsa/input_file/#fixed-box-size","title":"Fixed box size","text":"<code>ng</code> (Default = -1,-1,-1) <p>Comma separated number of grid points to use in the x, y, and z directions. Used only if buffer &lt; 0. Mutually  exclusive with <code>buffer</code> and <code>grdspc</code> above, and paired with <code>solvbox</code> below.</p> <p>Warning</p> <p>No default, this must be set if buffer &lt; 0. As a general requirement, the number of grids points in each  dimension must be divisible by two, and the number of grid points in the z-axis must be divisible by the  number of processes.</p> <p>As an example: define like <code>ng=1000,1000,1000</code>, where all numbers are divisible by two  and you can use 1, 2, 4, 5, 8, 10... pocessors, all divisors of 1000 (value in the z-axis).</p> <p>Take into account that at a certain level, running RISM in  parallel may actually hurt performance, since previous solutions are used  as an initial guess for the next frame, hastening convergence. Running in parallel loses this advantage. Also,  due to the overhead involved in which each thread is required to load every topology file when calculating  energies, parallel scaling will begin to fall off as the number of threads reaches the number of frames. </p> <code>solvbox</code> (Default = -1,-1,-1) <p>Sets the size in \u00c5 of the fixed size solvation box. Used only if <code>buffer</code> &lt; 0. Mutually exclusive with <code>buffer</code>  and <code>grdspc</code> above, and paired with <code>ng</code> above. </p> <p>Warning</p> <p>No default, this must be set if buffer &lt; 0. Define like <code>solvbox=20,20,20</code></p> <code>solvcut</code>  (Default = 14) Cutoff used for solute-solvent interactions. The default value is that of buffer. Therefore, if you set <code>buffer</code> &lt;  0 and specify <code>ng</code> and <code>solvbox</code> instead, you must set <code>solvcut</code> to a nonzero value; otherwise the program will quit in  error."},{"location":"mmpbsa/input_file/#solution-convergence","title":"Solution convergence","text":"<code>tolerance</code> (Default = 0.00001) <p>A comma-separated list of maximum residual values for solution convergence. This has a strong effect on the  cost of 3D-RISM calculations (smaller value for tolerance -&gt; more computation). When used in combination with a list  of closures it is possible to define different tolerances for each of the closures. This can be useful for difficult  to converge calculations (see \u00a77.4.1). For the sake of  efficiency, it is best to use as high a tolerance as possible for all but the last closure.  See \u00a77.2.3 for details on how this affects numerical  accuracy and how this interacts with <code>ljTolerance</code>, <code>buffer</code>, and <code>solvbox</code>. Three formats of list are possible:</p> <ul> <li>one tolerance: All closures but the last use a tolerance of 1. The last tolerance in the list is used by the last closure. In practice this is the most efficient.</li> <li>two tolerances: All closures but the last use the first tolerance in the list. The last tolerance in the list is used by the last closure.</li> <li>n tolerances: Tolerances from the list are assigned to the closure list in order.</li> </ul> <p>Examples</p> One closure/One toleranceSeveral closures/One toleranceSeveral closures/Two tolerancesSeveral closures/Several tolerances <pre><code>closure = pse3, tolerance=0.00001\n</code></pre> <p>A tolerance of <code>0.00001</code> will be used for clousure <code>pse3</code></p> <pre><code> closure = kh, pse3, tolerance=0.00001\n</code></pre> <p>A tolerance of <code>1</code> will be used for clousure <code>kh</code>, while <code>0.00001</code> will be used for clousure <code>pse3</code>.  Equivalent to <code>closure = kh, pse3, tolerance=1,0.00001</code></p> <pre><code> closure = kh, pse2, pse3, tolerance=0.01, 0.00001\n</code></pre> <p>A tolerance of <code>0.01</code> will be used for clousures <code>kh</code> and <code>pse2</code>, while <code>0.00001</code> will be used for clousure  <code>pse3</code>. Equivalent to <code>closure = kh, pse2, pse3, tolerance=0.01,0.01,0.00001</code></p> <pre><code> closure = kh,pse2,pse3, tolerance=0.1,0.01,0.00001\n</code></pre> <p>A tolerance of <code>0.1</code> will be used for clousure <code>kh</code>, <code>0.01</code> will be used for clousure <code>pse2</code>, while <code>0.00001</code>  will be used for clousure <code>pse3</code>.</p> <code>ljTolerance</code> (Default = -1) Lennard-Jones accuracy (Optional.) Determines the Lennard-Jones cutoff distance based on the desired accuracy of  the calculation. See \u00a77.2.3 for details on how this affects  numerical accuracy and how this interacts with <code>tolerance</code>, <code>buffer</code>, and <code>solvbox</code>. <code>asympKSpaceTolerance</code> (Default = -1) <p>Tolerance reciprocal space long range asymptotics accuracy (Optional.) Determines the reciprocal space long  range asymptotic cutoff distance based on the desired accuracy of the calculation.  See \u00a77.2.3 for details on how this affects numerical  accuracy. Possible values are:</p> <ul> <li><code>when &lt; 0</code>: asympKSpaceTolerance = tolerance/10</li> <li><code>when = 0</code>: no cutoff</li> <li><code>when &gt; 0</code>: given value determines the maximum error in the reciprocal-space long range asymptotics calculations</li> </ul> <code>mdiis_del</code> (Default = 0.7) MDIIS step size. <code>mdiis_nvec</code> (Default = 5) Number of previous iterations MDIIS uses to predict a new solution. <code>mdiis_restart</code> (Default = 10) If the current residual is mdiis_restart times larger than the smallest residual in memory, then the MDIIS  procedure is restarted using the lowest residual solution stored in memory. Increasing this number can sometimes  help convergence. <code>maxstep</code> (Default = 10000) Maximum number of iterations allowed to converge on a solution. <code>npropagate</code> (Default = 5) <p>Number of previous solutions propagated forward to create an initial guess for this solute atom configuration.</p> <ul> <li>=0: Do not use any previous solutions</li> <li>= 1..5: Values greater than 0 but less than 4 or 5 will use less system memory but may introduce artifacts to  the solution (e.g., energy drift).</li> </ul>"},{"location":"mmpbsa/input_file/#output","title":"Output","text":"<code>polardecomp</code> (Default = 0) <p>Decomposes solvation free energy into polar and non-polar components. Note that this typically requires 80% more  computation time.</p> <ul> <li>0: Don\u2019t decompose solvation free energy into polar and non-polar components. </li> <li>1: Decompose solvation free energy into polar and non-polar components.</li> </ul> <code>entropicdecomp</code> (Default = 0) <p>Decomposes solvation free energy into energy and entropy components. Also performs temperature derivatives of other  calculated quantities. Note that this typically requires 80% more computation time and requires a <code>.xvv</code> file version  1.000 or higher (available within <code>GMXMMPBSA</code> data folder).  See \u00a77.1.3 and  \u00a77.3</p> <ul> <li>0: No entropic decomposition</li> <li>1: Entropic decomposition</li> </ul> <code>rism_verbose</code> (Default = 0) <p>Level of output in temporary RISM output files. May be helpful for debugging or following convergence. </p> <ul> <li>0: just print the final result</li> <li>1: additionally prints the total number of iterations for each solution</li> <li>2: additionally prints the residual for each iteration and details of the MDIIS solver (useful for debugging  and convergence analyses)</li> </ul>"},{"location":"mmpbsa/input_file/#alanine_scanning-namelist-variables","title":"<code>&amp;alanine_scanning</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default alanine scanning input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input ala                # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> <pre><code>xbfree amber_MMPBSA --create_input ala              # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> <pre><code>xbfree namd_MMPBSA --create_input ala               # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> <pre><code>xbfree charmm_MMPBSA --create_input ala             # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> </li> <li> <p>A sample alanine scanning input file is shown here</p> </li> <li>A tutorial on alanine scanning is available here</li> </ul> <code>mutant_res</code> (Default = None. Must be defined) <p>Define the specific residue that is going to be mutated. Use the following format CHAIN/RESNUM (e.g.: A/350) or  CHAIN/RESNUM INSERTION_CODE if applicable (e.g.: A/27B).</p> <p>Important</p> <ul> <li>Only one residue can be mutated per calculation!</li> <li>For GROMACS, we recommend using the reference structure (-cr) to ensure the perfect match between the  selected residue in the defined structure or topology. For AMBER, NAMD and CHARMM we recommend check  carefully the structure provided (-cs). </li> <li>When this varibale is defined, xBFreE performs the mutation. This way the user does not have to  provide the mutant topology</li> </ul> <code>mutant</code> (Default = ALA) <p>Defines the residue that it is going to be mutated for. Allowed values are: </p> <ul> <li><code>ALA</code> or <code>A</code>: Alanine scanning</li> <li><code>GLY</code> or <code>G</code>: Glycine scanning</li> </ul> <code>mutant_only</code>  (Default = 0) <p>Option to perform specified calculations only for the mutants. </p> <ul> <li>0: Perform calcultion on mutant and original</li> <li>1: Perform calcultion on mutant only</li> </ul> <p>Note</p> <p>Note that all calculation details are controlled in the other namelists, though for alanine scanning to be  performed, the namelist must be included (blank if desired)</p> <code>cas_intdiel</code> (Default = 0) <p>The dielectric constant (<code>intdiel</code>(GB)/<code>indi</code>(PB)) will be modified depending on the nature of the residue to be  mutated. </p> <ul> <li>0: Don\u2019t</li> <li>1: Adaptative <code>intdiel</code> assignation</li> </ul> <p>Important</p> <ul> <li>Works with the GB and PB calculations</li> <li>It is ignored when <code>intdiel</code>(GB)/<code>indi</code>(PB) has been explicitly defined, that is, it is ignored if  <code>intdiel != 1.0</code>/<code>indi != 1.0</code> (default values)</li> <li>Dielectric constant values has been assigned according to Yan et al., 2017</li> </ul> <p>Warning</p> <p>Careful. Activating this variable can cause considerable variations in the results, since the dielectric  constant of the solute varies. </p> <code>intdiel_nonpolar</code> (Default = 1) Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for non-polar residues (<code>PHE</code>, <code>TRP</code>, <code>VAL</code>, <code>ILE</code>, <code>LEU</code>, <code>MET</code>, <code>PRO</code>, <code>CYX</code>, <code>ALA</code>, <code>GLY</code>, <code>PRO</code>) <code>intdiel_polar</code> (Default = 3) Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for polar residues (<code>TYR</code>, <code>SER</code>, <code>THR</code>, <code>CYM</code>, <code>CYS</code>, <code>HIE</code>, <code>HID</code>,  <code>ASN</code>, <code>GLN</code>, <code>ASH</code>, <code>GLH</code>, <code>LYN</code>) <code>intdiel_positive</code> (Default = 5) Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for positive charged residues (<code>LYS</code>, <code>ARG</code>, <code>HIP</code>) <code>intdiel_negative</code> (Default = 5) Define the <code>intdiel</code>(GB)/<code>indi</code>(PB) value for negative charged residues (<code>GLU</code>, <code>ASP</code>)"},{"location":"mmpbsa/input_file/#decomp-namelist-variables","title":"<code>&amp;decomp</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default decomp input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input decomp         # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> <pre><code>xbfree amber_MMPBSA --create_input decomp           # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> <pre><code>xbfree namd_MMPBSA --create_input decomp            # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> <pre><code>xbfree charmm_MMPBSA --create_input decomp          # (1)! \n</code></pre> <ol> <li>Remember to define an energy method, for example <code>GB</code>, <code>PB</code>, etc.</li> </ol> </li> <li> <p>A sample decomp input file is shown here</p> </li> <li>A tutorial on binding free energy decomposition is available here</li> </ul> <code>idecomp</code> (Default = None. Must be defined) <p>Energy decomposition scheme to use:</p> <ul> <li>1: Per-residue decomp with 1-4 terms added to internal potential terms</li> <li>2: Per-residue decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms</li> <li>3: Pairwise decomp with 1-4 terms added to internal potential terms</li> <li>4: Pairwise decomp with 1-4 EEL added to EEL and 1-4 VDW added to VDW potential terms</li> </ul> <code>dec_verbose</code> (Default = 0) <p>Set the level of output to print in the decomp_output file.</p> <ul> <li>0: DELTA energy, total contribution only</li> <li>1: DELTA energy, total, sidechain, and backbone contributions</li> <li>2: Complex, Receptor, Ligand, and DELTA energies, total contribution only</li> <li>3: Complex, Receptor, Ligand, and DELTA energies, total, sidechain, and backbone contributions</li> </ul> <p>Note</p> <p>If the values 0 or 2 are chosen, only the Total contributions are required, so only those will be printed to the mdout files to cut down on the size of the mdout files and the time required to parse them.</p> <code>print_res</code> (Default = \"within 6\") <p>Select residues whose information is going to be printed in the output file. The default selection should be  sufficient in most cases, however we have added several additional notations</p> <p>Selection schemes</p> By Distance (recommended)Amino acid selectionAll Notation: [ <code>within</code> <code>distance</code> ] <code>within</code> corresponds to the keyword and <code>distance</code> to the maximum distance criterion in \u00c5 necessary to  select the residues from both the receptor and the ligand. In case the cutoff used is so small that  the number of decomp residues to print &lt; 2, the cutoff value will be increased by 0.1 until the  number of decomp residues to print &gt;= 2. <p>Example</p> <p><code>print_res=\"within 6\"</code> Will print all residues within 6 \u00c5 between receptor and  ligand including both.</p> Notation: [ <code>CHAIN</code>/(<code>RESNUM</code> or <code>RESNUM-RESNUM</code>) ] Print residues individual or ranges. This notation also supports insertion codes, in which case you must  define them individually <p>Example</p> <p><code>print_res=\"A/1,3-10,15,100 B/25\"</code> This will print Chain A residues 1, 3 through 10, 15, and 100 along with  chain B residue 25 from the complex topology file and the corresponding residues in either the ligand and/or  receptor topology files.</p> <p>Suppost that we can have the following sequence where chain A is the receptor and B is the ligand:  A:LEU:5, A:GLY:6A, A:THR:6B, A:SER:6C A:ASP:6D, A:ILE:7 , B:25</p> Supported notationWrong notation Ranges selection <code>print_res=\"A/5-7 B/25</code> Will print all mentioned residues because all residues with insertion code are  contained in the range Individual selection <code>print_res=\"A/5,6B,6C,7 B/25</code> Will print all mentioned residues except the residues 6A and  6D from chain A <p><code>print_res=\"A/5-6B,6D-7</code> Will end in error.</p> Notation: <code>all</code> will print all residues. This option is often not recommended since most residues contribution is zero and  it is just going to be a waste of time and computational resources. <p>Danger</p> <p>Using <code>idecomp=3 or 4</code> (pairwise) with a very large number of printed residues and a large number of frames  can quickly create very, very large temporary mdout files. Large print selections also demand a large amount  of memory to parse the mdout files and write decomposition output file (~500 MB for just 250 residues, since  that\u2019s 62500 pairs!) It is not unusual for the output file to take a significant amount of time to print if  you have a lot of data. This is most applicable to pairwise decomp, since the amount of data scales as O(N<sup>2</sup>).</p> <p>Important</p> <p>For GROMACS, we recommend using the reference structure (-cr) to ensure the perfect match between the  selected residue in the defined structure or topology. For AMBER, NAMD and CHARMM we recommend check  carefully the structure provided (-cs). </p> <code>csv_format</code>  (Default = 1) <p>Print the decomposition output in a Comma-Separated-Values (CSV) file. CSV files open natively in most spreadsheets. </p> <ul> <li>0: data to be written out in the standard ASCII format.</li> <li>1: data to be written out in a CSV file, and standard error of the mean will be calculated and included for all  data.</li> </ul>"},{"location":"mmpbsa/input_file/#nmode-namelist-variables","title":"<code>&amp;nmode</code> namelist variables","text":"<p>Keep in mind</p> <ul> <li> <p>A default nmode input file can be created as follows:</p> GROMACSAMBERNAMDCHARMM <pre><code>xbfree gmx_MMPBSA --create_input nmode\n</code></pre> <pre><code>xbfree amber_MMPBSA --create_input nmode\n</code></pre> <pre><code>xbfree namd_MMPBSA --create_input nmode\n</code></pre> <pre><code>xbfree charmm_MMPBSA --create_input nmode\n</code></pre> </li> <li> <p>A sample nmode input file is shown here</p> </li> <li>A tutorial on normal mode analysis is available here</li> </ul>"},{"location":"mmpbsa/input_file/#basic-input-options_4","title":"Basic input options","text":"<code>nmstartframe</code> <p>Frame number to begin performing <code>nmode</code> calculations on </p> <p>Note</p> <p>This variable will choose a subset of the frames chosen from the variables in the <code>&amp;general</code> namelist. Thus, the \"trajectory\" from which snapshots will be chosen for <code>nmode</code> calculations will be the collection of  snapshots upon which the other calculations were performed.</p> <code>nmendframe</code> (Default = 1000000) <p>Frame number to stop performing <code>nmode</code> calculations on </p> <p>Note</p> <p>This variable will choose a subset of the frames chosen from the variables in the <code>&amp;general</code> namelist. Thus, the \"trajectory\" from which snapshots will be chosen for <code>nmode</code> calculations will be the collection of  snapshots upon which the other calculations were performed.</p> <code>nminterval</code> (Default = 1) <p>Offset from which to choose frames to perform <code>nmode</code> calculations on</p> <p>Note</p> <p>This variable will choose a subset of the frames chosen from the variables in the <code>&amp;general</code> namelist. Thus, the \"trajectory\" from which snapshots will be chosen for <code>nmode</code> calculations will be the collection of  snapshots upon which the other calculations were performed.</p>"},{"location":"mmpbsa/input_file/#parameter-options_1","title":"Parameter options","text":"<code>nmode_igb</code> (Default = 1) <p>Value for Generalized Born model to be used in calculations. Options are:</p> <ul> <li>0: Vacuum</li> <li>1: HCT GB model </li> </ul> <code>nmode_istrng</code> (Default = 0.0) Ionic strength to use in <code>nmode</code> calculations. Units are Molarity (M). Non-zero values are ignored if <code>nmode_igb</code> is 0 above. <code>dielc</code> (Default = 1.0) Distance-dependent dielectric constant  <code>drms</code> (Default = 0.001) Convergence criteria for minimized energy gradient. <code>maxcyc</code> (Default = 10000) Maximum number of minimization cycles to use per snapshot in sander."},{"location":"mmpbsa/input_file/#sample-input-files","title":"Sample input files","text":"<p>Tip</p> <p>You can refer to the examples to understand the input file in a practical way.</p> <p>Warning</p> <p>These are illustrative examples, please, don't use it for production. Create a new one using  the instructions provides above in the section Generation of input files with xBFreE</p>"},{"location":"mmpbsa/input_file/#gb","title":"GB","text":"<pre><code>Sample input file for GB calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\nstartframe=5, endframe=100, interval=5, verbose=2, \n/\n\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#gbnsr6","title":"GBNSR6","text":"<pre><code>Sample input file for GBNSR6 calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\nstartframe=5, endframe=100, interval=5, verbose=2, \n/\n\n&amp;gbnsr6\nepsin=1.0, istrng=0.150,\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#qmmmgbsa","title":"QM/MMGBSA","text":"<pre><code>Sample input file for QM/MMGBSA\n\n&amp;general\nstartframe=5, endframe=100, interval=5,\n/\n\n&amp;gb\nigb=5, saltcon=0.100, ifqnt=1,\nqm_residues=\"A/240-251 B/297\", qm_theory=\"PM3\"\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#pb","title":"PB","text":"<pre><code>Sample input file for PB calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\nstartframe=5, endframe=100, interval=5,\n/\n\n&amp;pb\nistrng=0.15, fillratio=4.0\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#mmpbsa-with-membrane-proteins","title":"MMPBSA with membrane proteins","text":"<pre><code>Sample input file for MMPBSA with membrane proteins\n\n&amp;general\nstartframe=1, endframe=100, interval=1,\n/\n\n&amp;pb\nmemopt=1, emem=7.0, indi=4.0,\nmctrdz=-10.383, mthick=36.086, poretype=1,\nradiopt=0, indi=4.0, istrng=0.150, fillratio=1.25, inp=2,\nsasopt=0, solvopt=2, ipb=1, bcopt=10, nfocus=1, linit=1000,\neneopt=1, cutfd=7.0, cutnb=99.0,\nmaxarcdot=1500,\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#mm3d-rism","title":"MM/3D-RISM","text":"<pre><code>Sample input file for 3D-RISM\n\n&amp;general\nstartframe=20, endframe=100, interval=5,\n/\n\n&amp;rism\npolardecomp=1, thermo=\"gf\"\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#alanine-scanning","title":"Alanine scanning","text":"<pre><code>Sample input file for Alanine scanning\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\n/\n\n&amp;gb\nigb=8, saltcon=0.150, intdiel=10\n/\n\n&amp;alanine_scanning\nmutant='ALA', mutant_res='B:12'\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#decomposition-analysis","title":"Decomposition analysis","text":"<pre><code>Sample input file for decomposition analysis\nMake sure to include at least one residue from both the receptor\nand ligand in the print_res mask of the &amp;decomp section.\nhttp://archive.ambermd.org/201308/0075.html. This is automally\nguaranteed when using \"within\" keyword.\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\n/\n\n&amp;gb\nigb=5, saltcon=0.150,\n/\n\n&amp;decomp\nidecomp=2, dec_verbose=3,\n# This will print all residues that are less than 4 \u00c5 between\n# the receptor and the ligand\nprint_res=\"within 4\"\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#entropy-with-nmode","title":"Entropy with NMODE","text":"<pre><code>Sample input file for entropy calculations\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\ntemperature=298\n/\n\n&amp;gb\nigb=2, saltcon=0.150,\n/\n\n&amp;nmode\nnmstartframe=10, nmendframe=21, nminterval=2,\nmaxcyc=50000, drms=0.0001,\n/\n</code></pre>"},{"location":"mmpbsa/input_file/#interaction-entropy","title":"Interaction Entropy","text":"<pre><code>Sample input file for entropy calculations\n\n&amp;general\nstartframe=5, endframe=21, interval=1,\n# Interaction Entropy (IE)\n# (https://pubs.acs.org/doi/abs/10.1021/jacs.6b02682) approximation\ntemperature=298\n/\n\n&amp;gb\nigb=2, saltcon=0.150,\n/\n</code></pre> <p>Info</p> <p>Comments are allowed by placing a # at the beginning of the line (whites-space are ignored). Variable  initialization may span multiple lines. In-line comments (i.e., putting a # for a comment after a variable is  initialized in the same line) is not allowed and will result in an input error. Variable declarations must be  comma-delimited, though all whitespace is ignored. Finally, all lines between namelists are ignored, so comments can be added before each namelist without using #.</p> <ol> <li> <p>The chain ID is assigned according to two criteria: terminal amino acids and residue numbering. If     both criteria or residue numbering changes are present, we assign a new chain ID. If there are terminal      amino acids, but the numbering of the residue continues, we do not change the ID of the chain. \u21a9\u21a9</p> </li> </ol>"},{"location":"mmpbsa/introduction/","title":"Introduction","text":"<p>MM/PB(GB)SA method can be used for calculating binding free energies of non covalently bound complexes.</p> <p> </p> <p>Figure 1. Thermodynamic cycle for binding free energy calculations   </p> <p>The free binding energy for a complex can be estimated as follows:</p> \\[ \u2206\ud835\udc3a_{bind} = \u2329\ud835\udc3a_{\ud835\udc36\ud835\udc42\ud835\udc40}\u232a\u2212\u2329\ud835\udc3a_{\ud835\udc45\ud835\udc38\ud835\udc36}\u232a\u2212\u2329\ud835\udc3a_{\ud835\udc3f\ud835\udc3c\ud835\udc3a}\u232a \\] <p>     (1) </p> <p>where each term to the right in the equation is given by:</p> \\[ \ud835\udc3a_{x} = \u2329\ud835\udc38_{\ud835\udc40\ud835\udc40}\u232a + \u2329\ud835\udc3a_{\ud835\udc60\ud835\udc5c\ud835\udc59}\u232a \u2212 \u2329\ud835\udc47\ud835\udc46\u232a \\] <p>     (2) </p> <p>In turn, \\(\u2206\ud835\udc3a_{\ud835\udc4f\ud835\udc56\ud835\udc5b\ud835\udc51}\\) can also be represented as:</p> \\[ \u2206\ud835\udc3a_{bind} = \u2206\ud835\udc3b \u2212 \ud835\udc47\u2206\ud835\udc46 \\] <p>     (3) </p> <p>where \u2206\ud835\udc3b corresponds to the enthalpy of binding and \u2212\ud835\udc47\u2206\ud835\udc46 to the conformational entropy after ligand binding. When the  entropic term is dismissed, the computed value is the effective free energy, which is usually sufficient for  comparing relative binding free energies of related ligands.</p> <p>The \u2206\ud835\udc3b can be decomposed into different terms:</p> \\[ \u2206H_{bind} = \u2206\ud835\udc38_{\ud835\udc40\ud835\udc40} + \u2206\ud835\udc3a_{\ud835\udc60\ud835\udc5c\ud835\udc59} \\] <p>     (4) </p> <p>where:</p> \\[ \u2206\ud835\udc38_{\ud835\udc40\ud835\udc40} = \u2206\ud835\udc38_{\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51} + \u2206\ud835\udc38_{\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51} = (\u2206\ud835\udc38_{\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51} + \u2206\ud835\udc38_{\ud835\udc4e\ud835\udc5b\ud835\udc54\ud835\udc59\ud835\udc52} + \u2206\ud835\udc38_{\ud835\udc51\ud835\udc56\u210e\ud835\udc52\ud835\udc51\ud835\udc5f\ud835\udc4e\ud835\udc59}) + (\u2206\ud835\udc38_{\ud835\udc52\ud835\udc59\ud835\udc52} + \u2206\ud835\udc38_{\ud835\udc63\ud835\udc51\ud835\udc4a}) \\] <p>     (5) </p> <p>The gas phase free energy contributions (\\(\u2206\ud835\udc38_{\ud835\udc40\ud835\udc40}\\)) are calculated by <code>sander</code> within the AmberTools package  according to the force field used in the MD simulation. </p> <p>The \\(\u2206\ud835\udc3a_{\ud835\udc60\ud835\udc5c\ud835\udc59}\\) is given by:</p> \\[ \u2206\ud835\udc3a_{\ud835\udc60\ud835\udc5c\ud835\udc59} = \u2206\ud835\udc3a_{\ud835\udc5d\ud835\udc5c\ud835\udc59} + \u2206\ud835\udc3a_{\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc5d\ud835\udc5c\ud835\udc59} = \u2206\ud835\udc3a_{\ud835\udc43\ud835\udc35/\ud835\udc3a\ud835\udc35} + \u2206\ud835\udc3a_{\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc5d\ud835\udc5c\ud835\udc59} \\] <p>     (6) </p> <p>where:</p> \\[ \u2206\ud835\udc3a_{\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc5d\ud835\udc5c\ud835\udc59\ud835\udc4e\ud835\udc5f} = \ud835\udc41\ud835\udc43_{\ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41} \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc41\ud835\udc43_{\ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47} \\] <p>     (7) </p> <p>or,</p> \\[ \u2206\ud835\udc3a_{\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc5d\ud835\udc5c\ud835\udc59} = \u2206\ud835\udc3a_{\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d} + \u2206\ud835\udc3a_{\ud835\udc50\ud835\udc4e\ud835\udc63\ud835\udc56\ud835\udc61\ud835\udc66} = \u2206\ud835\udc3a_{\ud835\udc51\ud835\udc56\ud835\udc60\ud835\udc5d} + (\ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c_{\ud835\udc47\ud835\udc38\ud835\udc41\ud835\udc46\ud835\udc3c\ud835\udc42\ud835\udc41} \u2217 \u2206\ud835\udc46\ud835\udc34\ud835\udc46\ud835\udc34 + \ud835\udc36\ud835\udc34\ud835\udc49\ud835\udc3c\ud835\udc47\ud835\udc4c_{\ud835\udc42\ud835\udc39\ud835\udc39\ud835\udc46\ud835\udc38\ud835\udc47}) \\] <p>     (8) </p> <p>In the above equations, \\(\u2206\ud835\udc38_{\ud835\udc40\ud835\udc40}\\) corresponds to the molecular mechanical energy changes in the gas phase. \\(\u2206\ud835\udc38_{\ud835\udc40\ud835\udc40}\\) includes \\(\u2206\ud835\udc38_{\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51}\\), also known as internal energy, and  \\(\u2206\ud835\udc38_{\ud835\udc5b\ud835\udc5c\ud835\udc5b\ud835\udc4f\ud835\udc5c\ud835\udc5b\ud835\udc51\ud835\udc52\ud835\udc51}\\), corresponding to the van der Waals and electrostatic contributions. The solvation energy is  determined differently, depending on the method employed. In the 3D-RISM model, both components -polar and non-polar-  of the solvation energy are calculated. However, the PB and GB models estimate only the polar component of the  solvation. The non-polar component is usually assumed to be proportional to the molecule's total solvent accessible  surface area (SASA), with a proportionality constant derived from experimental solvation energies of small non-polar  molecules (eq. 7). Alternatively, a modern approach that separates non-polar solvation free energies into cavity and  dispersion terms can be used. In this approach, SASA is used to correlate the cavity term only, while a  surface-integration method is employed to compute the dispersion term (eq. 8).</p> <p>Furthermore, the entropic component is usually calculated by normal modes analysis (NMODE). The translational and rotational entropies can be estimated using standard statistical mechanical formulas. Nevertheless, calculating  vibrational entropy using normal modes is computationally expensive because it requires expanding the internal  coordinate covariance matrix for all degrees of freedom for a set of minimized structures. Conversely, the  Quasi-harmonic (QH) approximation is less computationally expensive, although it requires a considerable number of frames to converge. Recently, other alternatives have been developed, such as NMODE in truncated systems,  which considerably reduces the computational cost. Interaction Entropy (IE) is another novel method that  calculates the entropic component of the binding free energy directly from MD simulations without any extra  computational cost. This method is numerically reliable, more computationally efficient, and superior to the  standard NMODE approach, as shown in an extensive study of over a dozen randomly selected protein-ligand binding  systems.</p> <p>Typically, two approaches are used for MM/PB(GB)SA calculations, known as Single Trajectory Protocol (STP) and  Multiple Trajectory Protocol (MTP). In STP, both the receptor and the ligand trajectories are extracted  from that of the complex. This approach is valid when the bound and unbound states of the receptor, and the ligand  are similar. It is computationally less expensive than the MTP approach since only a simulation of the complex is  required. Additionally, the potential internal terms (e.g., bonds, angles, and dihedrals) cancel exactly in STP  since these terms are the same in both bound and unbound states. On the other hand, the MTP is a more realistic  approach because it considers multiple trajectories (i.e., complex, receptor, and ligand). However, significant  conformational changes can lead to numerous errors. In practice, a detailed study of the system is required to  select the approach to be used.</p>"},{"location":"mmpbsa/introduction/#literature","title":"Literature","text":"<p>Further information can be found in Amber manual:</p> <ul> <li>MMPBSA.py</li> <li>The Generalized Born/Surface Area Model</li> <li>PBSA</li> <li>Reference Interaction Site Model</li> <li>Generalized Born (GB) for QM/MM calculations</li> </ul> <p>and the foundational papers:</p> <ul> <li>Srinivasan J. et al., 1998 </li> <li>Kollman P. A. et al., 2000 </li> <li>Gohlke H., Case D. A. 2004 </li> </ul> <p>as well as some reviews and expert opinions:</p> <ul> <li>Genheden S., Ryde U. 2015 </li> <li>Wang et. al., 2018 </li> <li>Wang et. al., 2019</li> <li>Tuccinardi, 2021</li> </ul>"},{"location":"mmpbsa/output/","title":"Output Files","text":""},{"location":"mmpbsa/output/#project-folder-structure","title":"Project folder structure","text":"<p>The project structure in gmx_MMPBSA was not the best. The number of temporary files could be considerable depending  on the type of calculation, reaching an absurd amount when many CPUs were used in parallel. A large number of files  in a folder presents several problems. First, since it is generated in the same folder as the input files, it is  hard to use them. Second, because of the large number, it becomes problematic to find a specific file. Lastly,  folders with many files are not easy to handle for the GUI of operating systems due to indexing.    Of all the above, we decided to make some changes to the project structure. Now, a folder called xBFReE_RESULTS is  generated in the working folder. Inside this, a folder is generated for each type of calculation, currently only  mmpbsa, which contains all the temporary files. Since they are isolated, the <code>_GMXMMPBSA_</code> prefix is not required.  </p> WDIR structure for xbfree gmx_MMPBSA<pre><code>.\n\u251c\u2500\u2500 com.pdb    # (1)!  \n\u251c\u2500\u2500 com.tpr    # (2)!\n\u251c\u2500\u2500 com_traj.xtc    # (3)!\n\u251c\u2500\u2500 index.ndx    # (4)!\n\u251c\u2500\u2500 mmpbsa.in    # (5)!\n\u251c\u2500\u2500 topol.top    # (6)!\n\u251c\u2500\u2500 toppar    # (7)!\n\u2502   \u251c\u2500\u2500 forcefield.itp\n\u2502   \u251c\u2500\u2500 PROA.itp\n\u2502   \u251c\u2500\u2500 PROB.itp\n\u2502   ...\n\u2502   \u2514\u2500\u2500 TP3.itp\n\u251c\u2500\u2500 xBFreE.log    # (8)!\n\u251c\u2500\u2500 FINAL_RESULTS_MMPBSA.dat    # (9)!\n\u251c\u2500\u2500 COMPACT_RESULTS_MMPBSA.xbfree    # (10)!\n\u2514\u2500\u2500 xBFreE_RESULTS    # (11)!\n    \u2514\u2500\u2500 mmpbsa    # (12)!\n        \u251c\u2500\u2500 COM_FIXED.pdb\n        \u251c\u2500\u2500 COM_index.ndx\n        \u251c\u2500\u2500 complex_gb.mdout.0\n        ...\n        \u251c\u2500\u2500 REC.pdb\n        \u251c\u2500\u2500 REC.prmtop\n        \u2514\u2500\u2500 restrt.0\n</code></pre> <ol> <li>PDB file commonly used as reference structure (-cr)</li> <li>TPR file used as structure (-cs)</li> <li>XTC file used as trajectory (-ct)</li> <li>NDX file used as index (-ci)</li> <li>Input file (-i)</li> <li>Topology file (-cp)</li> <li>Force field parameter folder from CHARMM-GUI</li> <li>Logging file </li> <li>Plain text result file </li> <li>Binary file containing all the data</li> <li>Results folder</li> <li>Folder for temporary files of mmpbsa calculations</li> </ol> <p>Important</p> <p>Note that the result files (<code>FINAL_RESULTS_MMPBSA.dat</code>, <code>DECOMP_RESULTS_MMPBSA.dat</code> and  <code>COMPACT_RESULTS_MMPBSA.xbfree</code>) are in the working directory</p>"},{"location":"mmpbsa/output/#the-output-file","title":"The output file","text":"<p><code>FINAL_RESULTS_MMPBSA.dat</code> and <code>DECOMP_RESULTS_MMPBSA.dat</code> are kept unchanged as plain text result files</p> <p><code>COMPACT_RESULTS_MMPBSA.xbfree</code> is the file that will be used by default with xBFReE-Analyzer.</p> <p>This is how a typical output file (<code>FINAL_RESULTS_MMPBSA.dat</code> by default) looks like:</p> FINAL_RESULTS_MMPBSA.dat<pre><code>| Run on Tue Feb  8 22:31:58 2022                                                     | # (1)! \n|                                                                                     +       \n|gmx_MMPBSA Version=v1.4.3+462.gf64aa73 based on MMPBSA.py v.16.0                     | # (2)! \n|Complex Structure file                                                  com.tpr      +       \n|Complex (AMBER) topology file                                        COM.prmtop      |       \n|Receptor (AMBER) topology file                                       REC.prmtop      | # (3)! \n|Ligand Structure file                                               ligand.mol2      |       \n|Complex (AMBER) topology file                                        LIG.prmtop      |       \n|Initial trajectories                                             COM_traj_0.xtc      +       \n|                                                                                             \n|Receptor mask                   \":1-240\"                                             + # (4)! \n|Ligand mask                     \":241\"                                               |       \n|Ligand residue name is          \"RAL\"                                                +       \n|                                                                                             \n|Calculations performed using 16 complex frames                                       + # (5)! \n|C2 Entropy Std. Dev. and Conf. Interv. (95%) have been obtained by bootstrapping     |       \n|with number of re-samplings = 2000                                                   |       \n|                                                                                     |       \n|Generalized Born ESURF calculated using 'LCPO' surface areas                         |       \n|                                                                                     |       \n|Using temperature = 300.00 K)                                                        |       \n|All units are reported in kcal/mol.                                                  |       \n|                                                                                     |       \n|SD - Sample standard deviation, SEM - Sample standard error of the mean              |       \n|SD(Prop.), SEM(Prop.) - SD and SEM obtained with propagation of uncertainty formula  |       \n|https://en.wikipedia.org/wiki/Propagation_of_uncertainty#Example_formulae            +\n\n-------------------------------------------------------------------------------       +       \n-------------------------------------------------------------------------------       |        \nENTROPY RESULTS (C2 ENTROPY)                                                          |       \nModel           \u03c3(Int. Energy)    C2 Value         Std. Dev.   Conf. Interv. (95%)    | # (6)! \n-------------------------------------------------------------------------------       |       \ngb                  3.308           9.176           2.086         4.601-12.477        |       \n-------------------------------------------------------------------------------       |       \n-------------------------------------------------------------------------------       +       \n\nGENERALIZED BORN:                                                                     | # (7)!        \n\nComplex:                                                                              +              \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |              \n-------------------------------------------------------------------------------       |       \nBOND                    730.92         21.73      21.73         5.43       5.43       |       \nANGLE                  2022.96         27.54      27.54         6.89       6.89       |       \nDIHED                  2631.46         15.99      15.99         4.00       4.00       |       \nVDWAALS               -2035.53         14.81      14.81         3.70       3.70       |       \nEEL                  -16750.43         22.60      22.60         5.65       5.65       |       \n1-4 VDW                 911.73         15.17      15.17         3.79       3.79       | # (8)! \n1-4 EEL               10292.96         23.03      23.03         5.76       5.76       |       \nEGB                   -3270.77         15.90      15.90         3.98       3.98       |       \nESURF                    96.07          0.58       0.58         0.15       0.15       |       \n                                                                                      |       \nGGAS                  -2195.93         54.56      33.37        13.64       8.34       |       \nGSOLV                 -3174.70         15.91      15.72         3.98       3.93       |       \n                                                                                      |       \nTOTAL                 -5370.63         56.84      31.88        14.21       7.97       + \n\n\nReceptor:                                                                             +              \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |              \n-------------------------------------------------------------------------------       |       \nBOND                    719.57         21.28      21.28         5.32       5.32       |       \nANGLE                  1996.26         27.60      27.60         6.90       6.90       |       \nDIHED                  2597.25         13.84      13.84         3.46       3.46       |       \nVDWAALS               -1972.61         13.52      13.52         3.38       3.38       |       \nEEL                  -16735.20         22.33      22.33         5.58       5.58       |       \n1-4 VDW                 895.00         14.81      14.81         3.70       3.70       | # (9)! \n1-4 EEL               10339.15         23.01      23.01         5.75       5.75       |       \nEGB                   -3288.63         16.59      16.59         4.15       4.15       |       \nESURF                    99.77          0.61       0.61         0.15       0.15       |       \n                                                                                      |       \nGGAS                  -2160.58         53.26      35.11        13.31       8.78       |       \nGSOLV                 -3188.86         16.60      16.39         4.15       4.10       |       \n                                                                                      |       \nTOTAL                 -5349.43         55.78      32.13        13.95       8.03       +\n\n\nLigand:                                                                               +               \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |               \n-------------------------------------------------------------------------------       |       \nBOND                     11.35          1.94       1.94         0.48       0.48       |       \nANGLE                    26.70          2.68       2.68         0.67       0.67       |       \nDIHED                    34.21          3.59       3.59         0.90       0.90       |       \nVDWAALS                  -4.03          1.35       1.35         0.34       0.34       |       \nEEL                      15.90          0.96       0.96         0.24       0.24       |       \n1-4 VDW                  16.73          1.19       1.19         0.30       0.30       | # (10)!\n1-4 EEL                 -46.19          0.94       0.94         0.24       0.24       |       \nEGB                     -23.14          0.63       0.63         0.16       0.16       |       \nESURF                     4.52          0.02       0.02         0.00       0.00       |       \n                                                                                      |       \nGGAS                     54.67          5.37       3.97         1.34       0.99       |       \nGSOLV                   -18.61          0.63       0.63         0.16       0.16       |       \n                                                                                      |       \nTOTAL                    36.05          5.41       4.16         1.35       1.04       +\n\n\nDelta (Complex - Receptor - Ligand):                                                  + # (11)!        \nEnergy Component       Average     SD(Prop.)         SD   SEM(Prop.)        SEM       |       \n-------------------------------------------------------------------------------       |       \n\u0394BOND                     0.00          1.49       0.00         0.37       0.00       | # (12)!\n\u0394ANGLE                    0.00          2.62       0.00         0.65       0.00       | # (13)!\n\u0394DIHED                   -0.00          1.44       0.00         0.36       0.00       | # (14)!\n\u0394VDWAALS                -58.89          0.06       2.31         0.01       0.58       | # (15)!\n\u0394EEL                    -31.13          0.69       3.04         0.17       0.76       | # (16)!\n\u03941-4 VDW                  0.00          0.83       0.00         0.21       0.00       | # (17)!\n\u03941-4 EEL                 -0.00          0.92       0.00         0.23       0.00       | # (18)!\n\u0394EGB                     40.99          0.05       1.41         0.01       0.35       | # (19)!\n\u0394ESURF                   -8.22          0.01       0.09         0.00       0.02       | # (20)!\n                                                                                      |       \n\u0394GGAS                   -90.02          0.69       3.31         0.17       0.83       | # (21)!\n\u0394GSOLV                   32.77          0.06       1.37         0.01       0.34       | # (22)!\n                                                                                      |       \n\u0394TOTAL                  -57.25          0.69       2.55         0.17       0.64       + # (23)!\n-------------------------------------------------------------------------------       \n-------------------------------------------------------------------------------               \nUsing C2 Entropy Approximation:                                                       |        \n\u0394G binding =  -48.0704 +/-  2.1972                                                    | # (24)!\n-------------------------------------------------------------------------------\n-------------------------------------------------------------------------------\n</code></pre> <ol> <li>Date of running</li> <li>gmx_MMPBSA version used</li> <li>Input files used</li> <li>Receptor and ligand masks</li> <li>General description of the methods used and units </li> <li>Entropy results in case any entropy approximation was used</li> <li>Model used (GB in this case)</li> <li>Energy components (complex)</li> <li>Energy components (receptor)</li> <li>Energy components (ligand)</li> <li>Energy components (delta)</li> <li>Bond potential term</li> <li>Angle potential term</li> <li>Dihedral potential term</li> <li>Van der Waals contribution</li> <li>Electrostatic contribution</li> <li>Van der Waals 1-4 contribution</li> <li>Electrostatic 1-4 contribution</li> <li>Polar contribution to the solvation free energy</li> <li>Non-polar contribution to the solvation free energy</li> <li>= \u0394BOND + \u0394ANGLE + \u0394DIHED + \u0394VDWAALS + \u0394EEL</li> <li>= \u0394EGB + \u0394ESURF</li> <li>= \u0394GGAS + \u0394GSOLV</li> <li>Binding free energy\u0394G binding = \u0394TOTAL - T\u0394S</li> </ol> <p>The header of the output file will contain information about the calculation. It will also show the names of all files  that were used in the calculation (topology files and coordinate file(s)). If the masks were not specified, it prints its best guess so that you can verify its accuracy, along with the residue name of the ligand (if it is only a single residue). After that, general information about methods, units, constants used is  included. Entropy results are shown next in case any entropy approximation was used. Next, the energy and entropy  contributions are broken up into their components as they are in <code>sander</code> and <code>nmode</code> or <code>cpptraj</code>. The contributions  are further broken for the complex, receptor and ligand into <code>GGAS</code> and <code>GSOLV</code>. <code>GGAS</code> is the interaction energy  and is obtained after sum the internal(bonded) components (<code>BOND</code> + <code>ANGLE</code> + <code>DIHED</code>) and the  non-bonded (<code>VDWAALS</code> + <code>EEL</code>) components. For <code>GSOLV</code>, the polar and non-polar contributions are <code>EGB</code> (or <code>EPB</code>)  and <code>ESURF</code> (or <code>ENPOLAR + EDISPER</code>), respectively for <code>GB</code> (or <code>PB</code>) calculations. A single trajectory protocol does  not produce any differences between bond lengths, angles, dihedrals or 1-4 interactions between the complex and  receptor/ligand structures. Thus, when subtracted they cancel completely. If not, these values are displayed and  inconsistency warnings are printed. When this occurs the results are generally useless. Of course this does not  hold for the multiple trajectory protocol as independent trajectories are used for the complex, receptor and ligand.  Two approaches are used when calculating the standard deviation, and the standard error of the mean. The <code>SD</code> and <code>SEM</code> values are calculated using a sample (array) of values. On the other hand, <code>SD(Prop.)</code> and <code>SEM(Prop.)</code> are  obtained with the  propagation of uncertainty formula for  f = A - B. Check this thread for more details on MM/PB(GB)SA  statistics.</p>"},{"location":"mmpbsa/output/#temporary-files","title":"Temporary files","text":"<p>For gmx_MMPBSA users!</p> <p>This section and the temporary files structure are different to gmx_MMPBSA. </p> <p>If <code>xbfree</code> does not finish successfully, several of these files may be helpful in diagnosing the problem. For that reason, every temporary file is described below. Note that not every temporary file is generated in every simulation. </p> <ul> <li><code>xBFreE.log</code> This file contains the output coming from <code>xBFReE</code>.</li> <li><code>gb|pb|gbnsr6.mdin</code> Input file that controls the GB|PB|GBNSR6 calculation done in sander.</li> <li><code>(gb|pb|gbnsr6)_decomp_(com|rec|lig).mdin</code> Input file that controls the GB|PB|GBNSR6 decomp calculation done in sander.</li> <li><code>gb_qmmm_(com|rec|lig).mdin</code> Input file that controls the GB QM/MM calculation done in sander.</li> <li><code>(complex|receptor|ligand).mdcrd.#</code> Processed trajectory file(s).</li> <li><code>(complex|receptor|ligand).nc.#</code> Processed trajectory file(s) in the NetCDF format.</li> <li><code>dummy(complex|receptor|ligand).inpcrd</code> Dummy inpcrd file.</li> <li><code>(complex|receptor|ligand).pdb</code> Dummy PDB file </li> <li><code>(complex|receptor|ligand)_nm.mdcrd.#</code> Processed trajectory file(s) for normal mode calculations.</li> <li><code>ptrajentropy.in</code> Input file that calculates the entropy via the quasi-harmonic approximation. This file is processed by <code>ptraj</code>.</li> <li><code>avgcomplex.pdb</code> PDB file containing the average positions of all complex conformations processed by</li> <li><code>cenptraj.in.</code> It is used as the reference for the <code>ptrajentropy.in</code> file above.</li> <li><code>(complex|receptor|ligand)_entropy.out</code> File into which the entropy results from <code>ptrajentropy.in</code> analysis are dumped.</li> <li><code>ptraj_entropy.out</code> Output from running <code>ptraj</code> using <code>ptrajentropy.in</code>.</li> <li><code>(complex|receptor|ligand)_(gb|pb|gbnsr6|rism).mdout.#</code> output file containing energy components of all snapshots    done in GB|PB|GBNSR6|RISM.</li> <li><code>mutant_...</code> These files are analogs of the files described above, but instead refer to the mutant system of    alanine scanning calculations.</li> <li><code>*out.#</code> These files are thread-specific files. For serial simulations, only #=0 files are created. For parallel, #=0 through NUM_PROC - 1 are created.</li> </ul>"},{"location":"mmpbsa/pbradii/","title":"PBRadii","text":"<p>Warning</p> <p>Please, note that this page under develop, so some element should miss or can be changed in futures versions </p>"},{"location":"mmpbsa/pbradii/#todo-what-it-is-and-how-it-influences-the-calculation-of-energy","title":"TODO: What it is and how it influences the calculation of energy","text":"<p>Our interest in providing all available tools to users and meeting their needs did not lead to implementing a new way of defining radii. Unlike ParmEd (used by gmx_MMPBSA), we have generated different classifications (or Types) for radii sets based on the conditions for their assignment by atoms. Currently, we implement 10 radii sets that you can define with the PBRadii variable in the input file:</p> Radii Name Type FF Compatibility Compatibility <code>amber6</code> <code>atom_number</code>+<code>bonded_atom_number</code> any, but optimized for Amber generic <code>bondi</code> <code>atom_number</code> any, but optimized for Amber generic <code>mbondi</code> <code>atom_number</code>+<code>bonded_atom_number</code> any, but optimized for Amber generic <code>mbondi2</code> <code>atom_number</code>+<code>bonded_atom_number</code> any, but optimized for Amber generic <code>mbondi3</code> <code>atom_number</code>+<code>bonded_atom_number</code>+<code>residue</code> any, but optimized for Amber generic <code>mbondi_pb2</code> <code>atom_number</code>+<code>bonded_atom_number</code> any, but optimized for Amber generic <code>mbondi_pb3</code> <code>atom_number</code>+<code>bonded_atom_number</code> any, but optimized for Amber generic <code>charmm_radii</code> <code>charmm_radii</code> charmm complete <code>tyl06</code> <code>residue</code> amber (optimized), charmm (experimental) semi-complete <code>yamagishi</code> <code>residue</code> amber (optimized), charmm (experimental) semi-complete"},{"location":"mmpbsa/pbradii/#radii-file-structure","title":"Radii file structure","text":"<p>The radii data is contained in a JSON format file. It is a dictionary (key-value pair) that contains the required information. The most important keys are <code>forcefield</code>, <code>type</code>, and <code>radii</code>, so please, pay attention to them when modifying or generating a new radii set.</p> mbondi radii<pre><code>{\n  \"name\": \"mbondi\",\n  \"forcefield\": [\"all\"],   // (1)!\n  \"implementation\": \"xBFreE Team\",\n  \"RADIUS_SET\": \"modified Bondi radii (mbondi)\",\n  \"reviews\": [],\n  \"reference\": \"\",\n  \"notes\": \"\",\n  \"type\": \"atom_number+bonded_atom_number\",   // (2)!\n  \"radii\": [   // (3)!\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 6 , \"mass\": null, \"radii\": 1.3 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 7 , \"mass\": null, \"radii\": 1.3 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 8 , \"mass\": null, \"radii\": 0.8 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 16, \"mass\": null, \"radii\": 0.8 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.2 },\n    {\"atom_number\": 6 , \"atom_type\": \"^C1\", \"bonded_atom_number\": null, \"mass\": \"&gt;13.0\", \"radii\": 2.2 },\n    {\"atom_number\": 6 , \"atom_type\": \"^C2\", \"bonded_atom_number\": null, \"mass\": \"&gt;14.0\", \"radii\": 2.2 },\n    {\"atom_number\": 6 , \"atom_type\": \"^C3\", \"bonded_atom_number\": null, \"mass\": \"&gt;15.0\", \"radii\": 2.2 },\n    {\"atom_number\": 6 , \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.7 },\n    {\"atom_number\": 7 , \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.55},\n    {\"atom_number\": 8 , \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.5 },\n    {\"atom_number\": 9 , \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.5 },\n    {\"atom_number\": 14, \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 2.1 },\n    {\"atom_number\": 15, \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.85},\n    {\"atom_number\": 16, \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.8 },\n    {\"atom_number\": 17, \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.7 },\n    {\"atom_number\": \"*\", \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.5 }\n  ]\n}\n</code></pre> <ol> <li>Please, pay attention to this key when modifying or generating new radii set</li> <li>Please, pay attention to this key when modifying or generating new radii set</li> <li>Please, pay attention to this key when modifying or generating new radii set</li> </ol> <p>The content of the key radii corresponds to the conditions for assigning the value of radii per atom. As seen in the  Type column of the table above, there are various combinations depending on the selected radii set. </p>"},{"location":"mmpbsa/pbradii/#understanding-the-radii-classificationtype","title":"Understanding the radii classification/type","text":"<p>In the table above, the Type column shows several combinations. Each keyword is used as condition to assigning the radii to any atom. Let's analyze the previous example: <code>mbondi</code> In this case, a combination of <code>atom_number</code> and <code>bonded_atom_number</code> is highlighted. </p> Why not include <code>atom_type</code> or <code>mass</code>? <p>The <code>atom_type</code> keyword is included in all generic defined radii, so it would be redundant to define it. On the  other hand, <code>mass</code> is evaluated for all radii set based on <code>atom_number</code> (all except <code>charmm_radii</code>, <code>tyl06</code> and  <code>yamagishi</code>)</p> <p>Here we first check the atom_number, then if <code>atom_type</code> and <code>mass</code> or <code>bonded_atom_number</code> were defined. If the  processed atom meets the conditions, it is assigned the specific defined value, otherwise, it is assigned a generic  value defined in the file with <code>atom_number=\"*\"</code> </p>"},{"location":"mmpbsa/pbradii/#simple-case-to-add-a-new-atom-parameter","title":"Simple case to add a new atom parameter","text":"<p>Suppose you want to add a new atom parameter, for example, iron (Fe). For this, you must copy the radii base file  (for example, <code>mbondi</code>) and add the new data as follows:</p> modified mbondi radii<pre><code>{\n  \"name\": \"new-mbondi\",    // (1)!\n  \"forcefield\": [\"all\"],   \n  \"implementation\": \"Me\",  // (2)!\n  \"RADIUS_SET\": \"modified Bondi radii (mbondi) for Fe\",\n  \"reviews\": [],\n  \"reference\": \"\",\n  \"notes\": \"I have added the Fe parameters\",    // (3)!\n  \"type\": \"atom_number+bonded_atom_number\",   // (4)!\n  \"radii\": [   \n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 6 , \"mass\": null, \"radii\": 1.3 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 7 , \"mass\": null, \"radii\": 1.3 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 8 , \"mass\": null, \"radii\": 0.8 },\n    {\"atom_number\": 1 , \"atom_type\": null, \"bonded_atom_number\": 16, \"mass\": null, \"radii\": 0.8 },\n    ...\n    {\"atom_number\": 17, \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.7 },\n    {\"atom_number\": 26, \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.6 }, // (5)!\n    {\"atom_number\": \"*\", \"atom_type\": null, \"bonded_atom_number\": null, \"mass\": null, \"radii\": 1.5 }\n  ]\n}\n</code></pre> <ol> <li>New name</li> <li>author</li> <li>Author's notes</li> <li>Please, take care your modifications and the type</li> <li>Note that we add the new atom parameters before the <code>\"atom_number\": \"*\"</code></li> </ol> <p>Now, this new file can be defined as the radii in the variable PBRadii, for example: <pre><code>Sample input file for GB calculation building the Amber topologies\nfrom structures. Please refer to the section \"How gmx_MMPBSA works\"\n\n&amp;general\n  PBRadii = /home/user/path/to/new_radii.json \n/\n\n&amp;gb\nigb=5, saltcon=0.150,\n/\n</code></pre></p> <p>Create, test, and share your radii</p> <ul> <li>This feature is experimental, so we need to test it in a broader scenario. If you find a bug, please report it. You will receive due credit in the \"reviews\" section of the radii archive.</li> <li>If you create or optimize your radii, feel free to share it, and we will include it in the list of radii.</li> <li>We don't show much information about the radii used at this time, but we plan to have it displayed in the output  file, not least because it has an impact on energy calculation.</li> </ul>"},{"location":"mmpbsa/running_mmpbsa/","title":"Running MMPBSA calculations","text":""},{"location":"mmpbsa/running_mmpbsa/#before-any-calculations","title":"Before any calculations","text":"<p>xBFreE requires minimum processing on the input structure and trajectory files. Before running any MMPBSA  calculation, please make sure:</p> The structure defined in <code>-cs</code>, <code>-rs</code>, or <code>-ls</code> options is consistent <p>Visualize the structure contained in the structure input file given in the <code>-cs</code>, <code>-rs</code>, or <code>-ls</code>  options and make sure it is consistent (as shown in Fig 1, right panel). On the other hand, if the  structure is \"broken\" (as shown in Fig 1, left panel) this could generate inconsistent results.</p> <p>Generate the structure from tpr file:</p> <pre><code>gmx editconf -f md.tpr -o md.pdb\n</code></pre> <p> Figure 1. Vizualization of two different input structures files. Left: \"Broken\" structure; Right: Centered structure     </p> The trajectory defined in <code>-ct</code>, <code>-rt</code>, or <code>-lt</code> doesn't contain PBC <p>Visualize the trajectory given in the <code>-ct</code>, <code>-rt</code>, or <code>-lt</code> options and make sure the PBC has been  removed (as shown in Fig 2, right panel). On the other hand, if the trajectory has not been fitted (as  shown in Fig 2, left panel) this could generate inconsistent results.</p> <p>Steps:</p> <ol> <li> <p>Generate a group that contains both molecules</p> <pre><code>gmx make_ndx -n index.ndx\n\n&gt;1 | 12\n\n&gt;q\n</code></pre> <p>Assuming 1 is the receptor and 12 is the ligand. This creates a new group (number 20 in this example)</p> </li> <li> <p>remove the PBC</p> <pre><code>gmx trjconv -s md.tpr -f md.xtc -o md_noPBC.xtc -pbc mol -center -n -ur compact\ncenter: 20 (created group)\noutput: 0\n</code></pre> </li> <li> <p>remove the rotation and translation with respect to the reference structure (optional)</p> <pre><code>gmx trjconv -s md.tpr -f md_noPBC.xtc -o md_fit.xtc -n -fit rot+trans\nfit: 20 (created group)\noutput: 0\n</code></pre> </li> <li> <p>Visualization</p> <p>Make sure that the trajectory is consistent (as shown in Fig 2, right panel)</p> </li> <li> <p>If the process is not succesful, consider using other options like <code>-pbc nojump</code> (as suggested here)</p> </li> </ol> <p> Figure 2. Vizualization of two different input trajectory files. Left: Trajectory with PBC;  Right: Trajectory centered, fitted and with PBC removed.    </p>"},{"location":"mmpbsa/running_mmpbsa/#running-mmpbsa-calculations","title":"Running MMPBSA calculations","text":"<p>Tip</p> <p>We currently recommend the use of MPI since the computation time decreases considerably.</p> Parallel (MPI) versionSerial version <p>xBFreE uses the <code>MPI</code> only to perform the calculations, the rest of the process (i.e,  Generation/conversion of Amber topologies, mutation, division of the trajectories, etc.) occurs in a single  thread (See Figure 3 for better reference). This means that it is not necessary to install any program  (AmberTools or GROMACS) with <code>MPI</code>, which can be used in any circumstance, and the time required to process the  data prior to the calculation depends on the system and will be the same for both versions (<code>Serial</code> and <code>MPI</code>). </p> Remember <p>Make sure that you have OpenMPI available in your computer</p> <p>A usage example is shown below:</p> LocalHPC <pre><code>mpirun -np 2 xbfree gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc\n</code></pre> <pre><code>#!/bin/sh\n#PBS -N nmode\n#PBS -o nmode.out\n#PBS -e nmode.err\n#PBS -m abe\n#PBS -M email@domain.edu\n#PBS -q brute\n#PBS -l nodes=1:surg:ppn=3\n#PBS -l pmem=1450mb or &gt; 5gb for nmode calculation\n\ncd $PBS_O_WORKDIR\n\nmpirun -np 3 xbfree gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc &gt; progress.log\n</code></pre> <p>Danger</p> <p>Unfortunately, when running <code>xbfree gmx_MMPBSA</code> with <code>MPI</code>, GROMACS's <code>gmx_mpi</code> can't be used. This is probably  because of <code>gmx_mpi</code> conflicts with mpirun. In any case, this is not a problem since <code>gmx</code> works correctly  and <code>gmx_mpi</code> only parallels <code>mdrun</code>, the rest of the GROMACS tools work in a single thread. See this  issue to see the output.</p> <p>Warning</p> <p>The PB/3D-RIMS/NMODE calculations require a considerable amount of RAM. Consider that the total amount of RAM  will be:</p> <p>RAM<sub>total</sub> = RAM<sub>1_frame</sub> * NUM of Threads</p> <p>If it consumes all the RAM of the system it can cause crashes, instability or system shutdown!</p> <p>This version is installed via pip as described above. <code>AMBERHOME</code> variable must be set, or it will quit with an error.  An example command-line call is shown below:</p> <pre><code>gmx_MMPBSA -O -i mmpbsa.in -cs com.tpr -ci index.ndx -cg 1 13 -ct com_traj.xtc\n</code></pre> <p>You can found test files on GitHub</p> <p> </p> <p>Figure 3. <code>MPI</code> benchmark description from MMPBSA.py  paper. <code>MMPBSA.py</code> scaling comparison for <code>MM-PBSA</code> and <code>MM-GBSA</code> calculations on 200 frames of a 5910-atom complex. Times    shown are the times required for the calculation to finish. Note that <code>MM-GBSA</code> calculations are \u223c5 times faster    than <code>MM-PBSA</code> calculations. All calculations were performed on NICS Keeneland (2 Intel Westmere 6-core CPUs per    node, QDR infiniband interconnect)    </p>"},{"location":"mmpbsa/versus/","title":"Comparison of xBFreE vs other MMPBSA programs","text":"<p>This comparison is based on the documentation of the different programs</p>"},{"location":"mmpbsa/versus/#calculation-features","title":"Calculation features","text":"Feature xBFreE gmx_MMPBSA MMPBSA.py <sup>1</sup> g_mmpbsa CaFe Binding free energies PB and GB PB and GB PB and GB PB PB * PB models Linear and Non-Linear Linear and Non-Linear Linear and Non-Linear<sup>10</sup> pending pending * GB models 1, 2, 5, 7, 8 and NSR6 1, 2, 5, 7, 8 and NSR6 1, 2, 5, 7 and 8 Stability pending Alanine scanning <sup>2</sup> pending Entropy corrections <sup>3</sup> NMODE, QH, IE, and C2 NMODE, QH, IE, and C2 NMODE and QH pending Decomposition schemes Per-Residues and Per-Wise Per-Residues and Per-Wise Per-Residues and Per-Wise Per-Residues pending QM/MMGBSA pending MM/3D-RISM pending Support Membrane Protein pending Approximations ST and MT ST and MT ST and MT ST pending"},{"location":"mmpbsa/versus/#technical-features","title":"Technical features","text":"Feature xBFreE gmx_MMPBSA MMPBSA.py <sup>1</sup> g_mmpbsa CaFE MD Program GROMACS, AMBER, NAMD, CHARMM GROMACS AMBER GROMACS NAMD * GROMACS Version 5.x and 20xx.x 4.x, 5.x and 20xx.x --- 4.x, 5.x and 2016+ <sup>6</sup> Dependencies AmberTools20/21 AmberTools20/21 <sup>9</sup> AmberTools20/21 APBS (1.2.x, 1.3.x or 1.4.x) Parallel computation Depends on APBS Steps for: * Calculation and Summary One One One Multiple * Analysis One One Multiple Multiple"},{"location":"mmpbsa/versus/#analysis-features","title":"Analysis features","text":"<p>Please, check the xBFreE-Analyzer documentation for more information</p> Feature xBFreE gmx_MMPBSA MMPBSA.py <sup>1</sup> g_mmpbsa CaFE API pending Analyzer Tool <sup>4</sup> * Multiple systems at same time * Correlation between systems * Per-residue energies to PDB * Interactive visualization ** 3D Molecular Visualization PyMOL PyMOL ** Interactive Charts static image * Plotting tool xBFreE-Analyzer gmx_MMPBSA_ana API and graphics library <sup>5</sup> internal tools * Energetic Terms charts All All \u0394G<sub>polar</sub>, \u0394G<sub>nonpolar</sub>, \u0394E<sub>MM</sub> and \u0394G<sub>bind</sub> * Export data to CSV file ** Energy Summary ** Individual Energetic Terms <ol> <li> <p>MMPBSA.py is included in AMBER package\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Without documentation\u00a0\u21a9</p> </li> <li> <p>NMODE = Normal modes approximation, QH = Quasic-Harmony approximation, IE = Interaction Entropy approximation, and C2 = C2 Entropy\u00a0\u21a9</p> </li> <li> <p>We plan to extend gmx_MMPBSA compatibility to MMPBSA.py's results\u00a0\u21a9</p> </li> <li> <p>Currently there is a repository (AmberUtils) for analysing the results\u00a0\u21a9</p> </li> <li> <p>GROMACS 20xx.x is not officially supported. There is a Pull Request that offers a minimum compatibility  with versions higher than 2016.x one, but still with limitations\u00a0\u21a9</p> </li> <li> <p>It is not clear whether it does support GROMACS versions 20xx.x or not, but we assume that it does since  it is script-based\u00a0\u21a9</p> </li> <li> <p>It is not clear whether it does support APBS versions 3.x.x\u00a0\u21a9</p> </li> <li> <p>gmx_MMPBSA is compatible with AmberTools20, AmberTools21, and AmberTools22\u00a0\u21a9</p> </li> <li> <p>gmx_MMPBSA supports Linear and Non-Linear PB equations. MMPBSA.py on the other hand, requires the user to  modify manually the *.mdin input files\u00a0\u21a9</p> </li> </ol>"},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#command-line","title":"Command-Line","text":"<ul> <li>xBFreE command-line for MMPBSA calculations</li> </ul>"},{"location":"tags/#mmgbsa","title":"MMGBSA","text":"<ul> <li>xBFreE command-line for MMPBSA calculations</li> </ul>"},{"location":"tags/#mmpbsa","title":"MMPBSA","text":"<ul> <li>xBFreE command-line for MMPBSA calculations</li> </ul>"}]}